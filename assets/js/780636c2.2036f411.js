"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4852],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85278:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"Query QC/DKG Info with Scripts or Events",sidebar_title:"QC/DKG Scripts and Events"},s="Introduction",i={unversionedId:"nodes/staking/qc-dkg-scripts-events",id:"nodes/staking/qc-dkg-scripts-events",title:"Query QC/DKG Info with Scripts or Events",description:"The Cluster Quorum Certificate (QC) and Distributed Key Generation (DKG) protocol smart contracts",source:"@site/docs/nodes/staking/qc-dkg-scripts-events.mdx",sourceDirName:"nodes/staking",slug:"/nodes/staking/qc-dkg-scripts-events",permalink:"/nodes/staking/qc-dkg-scripts-events",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682618007,formattedLastUpdatedAt:"Apr 27, 2023",frontMatter:{title:"Query QC/DKG Info with Scripts or Events",sidebar_title:"QC/DKG Scripts and Events"},sidebar:"tutorialSidebar",previous:{title:"Machine Account",permalink:"/nodes/staking/machine-account"},next:{title:"Quorum Certificate and Distributed Key Generation",permalink:"/nodes/staking/qc-dkg"}},c={},l=[{value:"QC Scripts",id:"qc-scripts",level:2},{value:"Get Clusters",id:"get-clusters",level:3},{value:"Get QC Enabled",id:"get-qc-enabled",level:3},{value:"Get Node Has Voted",id:"get-node-has-voted",level:3},{value:"Get Voting Complete",id:"get-voting-complete",level:3},{value:"QC Events",id:"qc-events",level:2},{value:"DKG Scripts",id:"dkg-scripts",level:2},{value:"Get DKG Enabled",id:"get-dkg-enabled",level:3},{value:"Get DKG Completed",id:"get-dkg-completed",level:3},{value:"Get Whiteboard Messages",id:"get-whiteboard-messages",level:3},{value:"Get Final Submissions",id:"get-final-submissions",level:3},{value:"Get Node Has Submitted",id:"get-node-has-submitted",level:3},{value:"DKG Events",id:"dkg-events",level:2}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"The Cluster Quorum Certificate (QC) and Distributed Key Generation (DKG) protocol smart contracts\nstore a lot of different state, and the state is constantly changing.\nAs an external party, there are two ways to keep track of these state changes.\nYou can either use Cadence scripts to query the state of the contract at any given time,\nor you can monitor events that are emitted by the contracts to be notified of any important occurances."),(0,a.kt)("h1",{id:"query-information-with-scripts"},"Query Information with Scripts"),(0,a.kt)("p",null,"These events can be queried using the Go or JavaScript SDKs to extract useful notifications and information about the\nstate of these processes."),(0,a.kt)("h2",{id:"qc-scripts"},"QC Scripts"),(0,a.kt)("p",null,"These scripts allow anyone to query information about the state of the QC contract."),(0,a.kt)("h3",{id:"get-clusters"},"Get Clusters"),(0,a.kt)("p",null,"To return a struct representing the information associated with a collector cluster,\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get Cluster")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#quorum-certificate-transactions-and-scripts"},"QC.03"),") script with the following argument:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Argument"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"clusterIndex")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"UInt16")),(0,a.kt)("td",{parentName:"tr",align:null},"The index of the cluster to query")))),(0,a.kt)("h3",{id:"get-qc-enabled"},"Get QC Enabled"),(0,a.kt)("p",null,"To return a boolean representing if the QC is enabled,\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get QC Enabled")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#quorum-certificate-transactions-and-scripts"},"QC.04"),") script with no arguments."),(0,a.kt)("h3",{id:"get-node-has-voted"},"Get Node Has Voted"),(0,a.kt)("p",null,"To return a boolean representing if a node has voted for the current QC, you\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get Node Has Voted")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#quorum-certificate-transactions-and-scripts"},"QC.05"),") script with the following argument:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Argument"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"nodeID")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"String")),(0,a.kt)("td",{parentName:"tr",align:null},"The node ID to check for")))),(0,a.kt)("h3",{id:"get-voting-complete"},"Get Voting Complete"),(0,a.kt)("p",null,"To return a boolean representing if the voting for the QC phase is complete,\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get Voting Complete")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#quorum-certificate-transactions-and-scripts"},"QC.06"),") script with no arguments."),(0,a.kt)("h2",{id:"qc-events"},"QC Events"),(0,a.kt)("p",null,"Documentation coming soon"),(0,a.kt)("h2",{id:"dkg-scripts"},"DKG Scripts"),(0,a.kt)("h3",{id:"get-dkg-enabled"},"Get DKG Enabled"),(0,a.kt)("p",null,"To return a boolean representing if the DKG is enabled, you\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get DKG Enabled")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#dkg-transactions-and-scripts"},"DKG.04"),") script with no arguments."),(0,a.kt)("h3",{id:"get-dkg-completed"},"Get DKG Completed"),(0,a.kt)("p",null,"To return a boolean representing if the dkg is complete, you\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get DKG Complete")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#dkg-transactions-and-scripts"},"DKG.05"),") script with no arguments."),(0,a.kt)("h3",{id:"get-whiteboard-messages"},"Get Whiteboard Messages"),(0,a.kt)("p",null,"To return an array of structs representing all the whiteboard messages, you\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get DKG Whiteboard Messages")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#dkg-transactions-and-scripts"},"DKG.06"),") script with no arguments."),(0,a.kt)("h3",{id:"get-final-submissions"},"Get Final Submissions"),(0,a.kt)("p",null,"To return an array of key vectors for the nodes' final submissions, you\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get Final Submissions")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#dkg-transactions-and-scripts"},"DKG.07"),") script with no arguments."),(0,a.kt)("h3",{id:"get-node-has-submitted"},"Get Node Has Submitted"),(0,a.kt)("p",null,"To return a boolean representing if a node has sent their final submission for the DKG, you\ncan use the ",(0,a.kt)("strong",{parentName:"p"},"Get Node Has Submitted")," (",(0,a.kt)("a",{parentName:"p",href:"/core-contracts/epoch-contract-reference/#dkg-transactions-and-scripts"},"DKG.08"),") script with the following argument:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Argument"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"nodeID")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"String")),(0,a.kt)("td",{parentName:"tr",align:null},"The node ID to check for")))),(0,a.kt)("h2",{id:"dkg-events"},"DKG Events"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"/// Emitted when the admin enables the DKG\npub event StartDKG()\n\n/// Emitted when the admin ends the DKG after enough submissions have been recorded\npub event EndDKG(finalSubmission: [String?]?)\n\n/// Emitted when a consensus node has posted a message to the DKG whiteboard\npub event BroadcastMessage(nodeID: String, content: String)\n")))}u.isMDXComponent=!0}}]);