"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5392],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),f=o,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||a;return t?r.createElement(m,l(l({ref:n},u),{},{components:t})):r.createElement(m,l({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=f;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},59800:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const a={},l="Resource Interface INFT",i={unversionedId:"Concepts/token-standards/flow-nft/NonFungibleToken/NonFungibleToken_INFT",id:"Concepts/token-standards/flow-nft/NonFungibleToken/NonFungibleToken_INFT",title:"Resource Interface INFT",description:"Interface that the NFTs have to conform to",source:"@site/docs/Concepts/token-standards/flow-nft/NonFungibleToken/NonFungibleToken_INFT.md",sourceDirName:"Concepts/token-standards/flow-nft/NonFungibleToken",slug:"/Concepts/token-standards/flow-nft/NonFungibleToken/NonFungibleToken_INFT",permalink:"/docs/Concepts/token-standards/flow-nft/NonFungibleToken/NonFungibleToken_INFT",draft:!1,tags:[],version:"current",lastUpdatedBy:"Alex",lastUpdatedAt:1683062072,formattedLastUpdatedAt:"May 2, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Resource Interface CollectionPublic",permalink:"/docs/Concepts/token-standards/flow-nft/NonFungibleToken/NonFungibleToken_CollectionPublic"},next:{title:"Resource NFT",permalink:"/docs/Concepts/token-standards/flow-nft/NonFungibleToken/NonFungibleToken_NFT"}},s={},c=[{value:"Functions",id:"functions",level:2},{value:"<code>getViews()</code>",id:"getviews",level:3},{value:"<code>resolveView()</code>",id:"resolveview",level:3}],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"resource-interface-inft"},"Resource Interface ",(0,o.kt)("inlineCode",{parentName:"h1"},"INFT")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cadence"},"pub resource interface INFT {\n\n    pub let id: UInt64\n}\n")),(0,o.kt)("p",null,"Interface that the NFTs have to conform to\nThe metadata views methods are included here temporarily\nbecause enforcing the metadata interfaces in the standard\nwould break many contracts in an upgrade. Those breaking changes\nare being saved for the stable cadence milestone"),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"getviews"},(0,o.kt)("inlineCode",{parentName:"h3"},"getViews()")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cadence"},"fun getViews(): [Type]\n")),(0,o.kt)("p",null,"Function that returns all the Metadata Views implemented by a Non Fungible Token"),(0,o.kt)("p",null,"developers to know which parameter to pass to the resolveView() method."),(0,o.kt)("p",null,"Returns: An array of Types defining the implemented views. This value will be used by"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"resolveview"},(0,o.kt)("inlineCode",{parentName:"h3"},"resolveView()")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cadence"},"fun resolveView(_: Type): AnyStruct?\n")),(0,o.kt)("p",null,"Function that resolves a metadata view for this token."),(0,o.kt)("p",null,"Parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"view : ",(0,o.kt)("em",{parentName:"li"},"The Type of the desired view."))),(0,o.kt)("p",null,"Returns: A structure representing the requested view."),(0,o.kt)("hr",null))}d.isMDXComponent=!0}}]);