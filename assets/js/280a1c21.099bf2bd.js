"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6007],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(t),f=a,m=s["".concat(i,".").concat(f)]||s[f]||d[f]||o;return t?r.createElement(m,c(c({ref:n},p),{},{components:t})):r.createElement(m,c({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=f;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[s]="string"==typeof e?e:a,c[1]=l;for(var u=2;u<o;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},34592:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const o={title:"Scope"},c=void 0,l={unversionedId:"cadence/language/scope",id:"cadence/language/scope",title:"Scope",description:"Every function and block ({ ... }) introduces a new scope for declarations.",source:"@site/docs/cadence/language/scope.md",sourceDirName:"cadence/language",slug:"/cadence/language/scope",permalink:"/cadence/language/scope",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682618386,formattedLastUpdatedAt:"Apr 27, 2023",frontMatter:{title:"Scope"},sidebar:"tutorialSidebar",previous:{title:"Run-time Types",permalink:"/cadence/language/run-time-types"},next:{title:"Syntax",permalink:"/cadence/language/syntax"}},i={},u=[],p={toc:u},s="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(s,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Every function and block (",(0,a.kt)("inlineCode",{parentName:"p"},"{")," ... ",(0,a.kt)("inlineCode",{parentName:"p"},"}"),") introduces a new scope for declarations.\nEach function and block can refer to declarations in its scope or any of the outer scopes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"let x = 10\n\nfun f(): Int {\n    let y = 10\n    return x + y\n}\n\nf()  // is `20`\n\n// Invalid: the identifier `y` is not in scope.\n//\ny\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"fun doubleAndAddOne(_ n: Int): Int {\n    fun double(_ x: Int) {\n        return x * 2\n    }\n    return double(n) + 1\n}\n\n// Invalid: the identifier `double` is not in scope.\n//\ndouble(1)\n")),(0,a.kt)("p",null,"Each scope can introduce new declarations, i.e., the outer declaration is shadowed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"let x = 2\n\nfun test(): Int {\n    let x = 3\n    return x\n}\n\ntest()  // is `3`\n")),(0,a.kt)("p",null,"Scope is lexical, not dynamic."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"let x = 10\n\nfun f(): Int {\n   return x\n}\n\nfun g(): Int {\n   let x = 20\n   return f()\n}\n\ng()  // is `10`, not `20`\n")),(0,a.kt)("p",null,"Declarations are ",(0,a.kt)("strong",{parentName:"p"},"not")," moved to the top of the enclosing function (hoisted)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"let x = 2\n\nfun f(): Int {\n    if x == 0 {\n        let x = 3\n        return x\n    }\n    return x\n}\nf()  // is `2`\n")))}d.isMDXComponent=!0}}]);