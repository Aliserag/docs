"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9121],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var c=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);t&&(c=c.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,c)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,c,r=function(e,t){if(null==e)return{};var n,c,r={},o=Object.keys(e);for(c=0;c<o.length;c++)n=o[c],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(c=0;c<o.length;c++)n=o[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=c.createContext({}),l=function(e){var t=c.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return c.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.createElement(c.Fragment,{},t)}},f=c.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=l(n),f=r,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||o;return n?c.createElement(m,a(a({ref:t},s),{},{components:n})):c.createElement(m,a({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=f;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:r,a[1]=i;for(var l=2;l<o;l++)a[l]=n[l];return c.createElement.apply(null,a)}return c.createElement.apply(null,n)}f.displayName="MDXCreateElement"},43481:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var c=n(87462),r=(n(67294),n(3905));const o={title:"Account Creation",description:"Techniques for creating accounts on Flow"},a=void 0,i={unversionedId:"cadence/core-contracts/account-creation",id:"cadence/core-contracts/account-creation",title:"Account Creation",description:"Techniques for creating accounts on Flow",source:"@site/docs/cadence/core-contracts/account-creation.mdx",sourceDirName:"cadence/core-contracts",slug:"/cadence/core-contracts/account-creation",permalink:"/docs/cadence/core-contracts/account-creation",draft:!1,tags:[],version:"current",lastUpdatedBy:"Alex",lastUpdatedAt:1683063625,formattedLastUpdatedAt:"May 2, 2023",frontMatter:{title:"Account Creation",description:"Techniques for creating accounts on Flow"},sidebar:"tutorialSidebar",previous:{title:"Flow Core Contracts",permalink:"/docs/cadence/core-contracts/"},next:{title:"Flow Epoch Contracts Reference",permalink:"/docs/cadence/core-contracts/epoch-contract-reference"}},u={},l=[{value:"Batch Account Creation",id:"batch-account-creation",level:2},{value:"Unique Key For Each Account",id:"unique-key-for-each-account",level:3},{value:"Same Key For All Accounts",id:"same-key-for-all-accounts",level:3}],s=(p="Callout",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var p;const d={toc:l},f="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(f,(0,c.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document covers the transaction logic required to create accounts\non the Flow blockchain.\nRead the ",(0,r.kt)("a",{parentName:"p",href:"/concepts/accounts-and-keys"},"accounts & keys documentation"),"\nfor an overview of the Flow account model."),(0,r.kt)("h2",{id:"batch-account-creation"},"Batch Account Creation"),(0,r.kt)("p",null,"A single transaction can create multiple accounts by making\nmultiple calls to the ",(0,r.kt)("inlineCode",{parentName:"p"},"AuthAccount")," initializer."),(0,r.kt)(s,{type:"warning",mdxType:"Callout"},(0,r.kt)("p",null,"Due to current transaction limits,\naccounts ",(0,r.kt)("strong",{parentName:"p"},"should not be created in batches larger than 20 accounts"),".")),(0,r.kt)("p",null,"The examples below emit the same ",(0,r.kt)("inlineCode",{parentName:"p"},"flow.AccountCreated")," event\nas a normal account creation transaction.\nHowever, rather than emitting a single event,\nthese transactions emit one event for each new account."),(0,r.kt)("p",null,"Check out this page to see how account creation transactions and events work in Go:\n",(0,r.kt)("a",{parentName:"p",href:"/flow-go-sdk/create-account/"},"Create an Account with the Go SDK"),"."),(0,r.kt)("h3",{id:"unique-key-for-each-account"},"Unique Key For Each Account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"transaction(publicKeys: [String]) {\n  prepare(signer: AuthAccount) {\n    for publicKey in publicKeys {\n      let account = AuthAccount(payer: signer)\n      account.addPublicKey(publicKey.decodeHex())\n    }\n  }\n}\n")),(0,r.kt)("h3",{id:"same-key-for-all-accounts"},"Same Key For All Accounts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"transaction(publicKey: String, count: Int) {\n  prepare(signer: AuthAccount) {\n    var i = 0\n    while i < count {\n      let account = AuthAccount(payer: signer)\n      account.addPublicKey(publicKey.decodeHex())\n\n      i = i + 1\n    }\n  }\n}\n")))}m.isMDXComponent=!0}}]);