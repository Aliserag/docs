"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3554],{3905:(e,t,l)=>{l.d(t,{Zo:()=>p,kt:()=>m});var a=l(67294);function i(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function n(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?n(Object(l),!0).forEach((function(t){i(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):n(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,a,i=function(e,t){if(null==e)return{};var l,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)l=n[a],t.indexOf(l)>=0||(i[l]=e[l]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)l=n[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(i[l]=e[l])}return i}var u=a.createContext({}),s=function(e){var t=a.useContext(u),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var l=e.components,i=e.mdxType,n=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(l),f=i,m=c["".concat(u,".").concat(f)]||c[f]||d[f]||n;return l?a.createElement(m,r(r({ref:t},p),{},{components:l})):a.createElement(m,r({ref:t},p))}));function m(e,t){var l=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=l.length,r=new Array(n);r[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:i,r[1]=o;for(var s=2;s<n;s++)r[s]=l[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,l)}f.displayName="MDXCreateElement"},99855:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>s});var a=l(87462),i=(l(67294),l(3905));const n={title:"Verify a Signature with the Flow CLI",sidebar_title:"Verify Signature",description:"How to verify a signature from the command line"},r=void 0,o={unversionedId:"tools/flow-cli/signature-verify",id:"tools/flow-cli/signature-verify",title:"Verify a Signature with the Flow CLI",description:"How to verify a signature from the command line",source:"@site/docs/tools/flow-cli/signature-verify.md",sourceDirName:"tools/flow-cli",slug:"/tools/flow-cli/signature-verify",permalink:"/tools/flow-cli/signature-verify",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682537977,formattedLastUpdatedAt:"Apr 26, 2023",frontMatter:{title:"Verify a Signature with the Flow CLI",sidebar_title:"Verify Signature",description:"How to verify a signature from the command line"},sidebar:"tutorialSidebar",previous:{title:"Generate a Signature with the Flow CLI",permalink:"/tools/flow-cli/signature-generate"},next:{title:"Save a protocol snapshot with the FLOW CLI",permalink:"/tools/flow-cli/snapshot-save"}},u={},s=[{value:"Example Usage",id:"example-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Message",id:"message",level:3},{value:"Signature",id:"signature",level:3},{value:"Public Key",id:"public-key",level:3},{value:"Flags",id:"flags",level:2},{value:"Public Key Signature Algorithm",id:"public-key-signature-algorithm",level:3},{value:"Public Key Hash Algorithm",id:"public-key-hash-algorithm",level:3},{value:"Filter",id:"filter",level:3},{value:"Output",id:"output",level:3},{value:"Save",id:"save",level:3},{value:"Log",id:"log",level:3},{value:"Version Check",id:"version-check",level:3}],p={toc:s},c="wrapper";function d(e){let{components:t,...l}=e;return(0,i.kt)(c,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Verify validity of a signature based on provided message and public key of the signature creator."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"flow signatures verify <message> <signature> <public key>\n")),(0,i.kt)("h2",{id:"example-usage"},"Example Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> flow signatures verify \n  'The quick brown fox jumps over the lazy dog' \n  b1c9eff5d829fdeaf2dad6308fc8033e3b8875bc185ef804ce5d0d980545ef5be0f98b47afc979d12272d257ce13c4b490e431bfcada485cb1d2e3f209be8d07 \n  0xc92a7c72a78f8f046a79f8a5fe1ef72424258a55eb869f13e6133301d64ad025d3362d5df9e7c82289637af1431042c4025d241fd430242368ce662d39636987\n\nValid            true\nMessage          The quick brown fox jumps over the lazy dog\nSignature        b1c9eff5d829fdeaf2...7ce13c4b490eada485cb1d2e3f209be8d07\nPublic Key       c92a7c72a78...1431042c4025d241fd430242368ce662d39636987\nHash Algorithm       SHA3_256\nSignature Algorithm      ECDSA_P256\n")),(0,i.kt)("h2",{id:"arguments"},"Arguments"),(0,i.kt)("h3",{id:"message"},"Message"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: ",(0,i.kt)("inlineCode",{parentName:"li"},"message"))),(0,i.kt)("p",null,"Message data used for creating the signature."),(0,i.kt)("h3",{id:"signature"},"Signature"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: ",(0,i.kt)("inlineCode",{parentName:"li"},"signature"))),(0,i.kt)("p",null,"Message signature that will be verified."),(0,i.kt)("h3",{id:"public-key"},"Public Key"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: ",(0,i.kt)("inlineCode",{parentName:"li"},"public key"))),(0,i.kt)("p",null,"Public key of the private key used for creating the signature. "),(0,i.kt)("h2",{id:"flags"},"Flags"),(0,i.kt)("h3",{id:"public-key-signature-algorithm"},"Public Key Signature Algorithm"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--sig-algo")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,i.kt)("inlineCode",{parentName:"li"},'"ECDSA_P256", "ECDSA_secp256k1"'))),(0,i.kt)("p",null,"Specify the ECDSA signature algorithm of the key pair used for signing."),(0,i.kt)("p",null,"Flow supports the secp256k1 and P-256 curves."),(0,i.kt)("h3",{id:"public-key-hash-algorithm"},"Public Key Hash Algorithm"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--hash-algo")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,i.kt)("inlineCode",{parentName:"li"},'"SHA2_256", "SHA3_256"')),(0,i.kt)("li",{parentName:"ul"},"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},'"SHA3_256"'))),(0,i.kt)("p",null,"Specify the hash algorithm of the key pair used for signing. "),(0,i.kt)("h3",{id:"filter"},"Filter"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--filter")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-x")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: case-sensitive name of the result property.")),(0,i.kt)("p",null,"Specify any property name from the result you want to return as the only value."),(0,i.kt)("h3",{id:"output"},"Output"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--output")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-o")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,i.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"inline"))),(0,i.kt)("p",null,"Specify in which format you want to display the result."),(0,i.kt)("h3",{id:"save"},"Save"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--save")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-s")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: valid filename")),(0,i.kt)("p",null,"Specify the filename where you want the result to be saved."),(0,i.kt)("h3",{id:"log"},"Log"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--log")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-l")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,i.kt)("inlineCode",{parentName:"li"},"none"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"debug")),(0,i.kt)("li",{parentName:"ul"},"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"info"))),(0,i.kt)("p",null,"Specify the log level. Control how much output you want to see while command execution."),(0,i.kt)("h3",{id:"version-check"},"Version Check"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--skip-version-check")),(0,i.kt)("li",{parentName:"ul"},"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"))),(0,i.kt)("p",null,"Skip version check during start up to speed up process for slow connections."))}d.isMDXComponent=!0}}]);