"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8516],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},86383:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={title:"Built-in Functions"},i=void 0,l={unversionedId:"cadence/language/built-in-functions",id:"cadence/language/built-in-functions",title:"Built-in Functions",description:"panic",source:"@site/docs/cadence/language/built-in-functions.mdx",sourceDirName:"cadence/language",slug:"/cadence/language/built-in-functions",permalink:"/cadence/language/built-in-functions",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682538265,formattedLastUpdatedAt:"Apr 26, 2023",frontMatter:{title:"Built-in Functions"},sidebar:"tutorialSidebar",previous:{title:"Attachments",permalink:"/cadence/language/attachments"},next:{title:"Capability-based Access Control",permalink:"/cadence/language/capability-based-access-control"}},s={},c=[{value:"panic",id:"panic",level:2},{value:"assert",id:"assert",level:2},{value:"unsafeRandom",id:"unsaferandom",level:2},{value:"RLP",id:"rlp",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"panic"},"panic"),(0,r.kt)("h1",{id:""}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"fun panic(_ message: String): Never\n")),(0,r.kt)("p",null,"  Terminates the program unconditionally\nand reports a message which explains why the unrecoverable error occurred."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},'let optionalAccount: AuthAccount? = // ...\nlet account = optionalAccount ?? panic("missing account")\n')),(0,r.kt)("h2",{id:"assert"},"assert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"fun assert(_ condition: Bool, message: String)\n")),(0,r.kt)("p",null,"  Terminates the program if the given condition is false,\nand reports a message which explains how the condition is false.\nUse this function for internal sanity checks."),(0,r.kt)("p",null,"  The message argument is optional."),(0,r.kt)("h2",{id:"unsaferandom"},"unsafeRandom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"fun unsafeRandom(): UInt64\n")),(0,r.kt)("p",null,"  Returns a pseudo-random number."),(0,r.kt)("p",null,"  NOTE:\nSmart contract developers should be mindful about the limitations of unsafeRandom.\nThe stream of random numbers produced is potentially unsafe in the following two regards:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The sequence of random numbers is potentially predictable by transactions within the same block\nand by other smart contracts calling into your smart contract.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A transaction calling into your smart contract can potentially bias the sequence of random numbers which\nyour smart contract internally generates. "),(0,r.kt)("p",{parentName:"li"},'We are working towards removing these limitations incrementally. Once these points are addressed,\nFlow\u2019s randomness is safe and we will remove the "unsafe" qualifier.'),(0,r.kt)("p",{parentName:"li"},"Nevertheless, there is an additional safety-relevant aspect that developers need to be mindful about:"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"A transaction can atomically revert all its action at any time. Therefore, it is possible for a transaction calling into\nyour smart contract to post-select favourable results and revert the transaction for unfavourable results.\n(",(0,r.kt)("a",{parentName:"p",href:"https://consensys.github.io/smart-contract-best-practices/development-recommendations/general/public-data/"},"example"),")"),(0,r.kt)("p",{parentName:"li"},"This limitation is inherent to any smart contract platform that allows transactions to roll back atomically and cannot be\nsolved through safe randomness alone.  Providing additional Cadence language primitives to simplify this challenge for\ndevelopers is on our roadmap as well. Nevertheless, with safe randomness (points 1 and 2 above resolved), developers can prevent\nclients from post-select favourable outcomes using approaches such as described in the\n",(0,r.kt)("a",{parentName:"p",href:"https://consensys.github.io/smart-contract-best-practices/development-recommendations/general/public-data/"},"example"),"."))),(0,r.kt)("h2",{id:"rlp"},"RLP"),(0,r.kt)("p",null,"RLP (Recursive Length Prefix) serialization allows the encoding of arbitrarily nested arrays of binary data."),(0,r.kt)("p",null,"Cadence provides RLP decoding functions in the built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"RLP")," contract, which does not need to be imported."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"fun decodeString(_ input: [UInt8]): [UInt8]\n")),(0,r.kt)("p",{parentName:"li"},"   Decodes an RLP-encoded byte array (called string in the context of RLP).\nThe byte array should only contain of a single encoded value for a string; if the encoded value type does not match, or it has trailing unnecessary bytes, the program aborts.\nIf any error is encountered while decoding, the program aborts."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"```cadence\nfun decodeList(_ input: [UInt8]): [[UInt8]]`\n```\n\nDecodes an RLP-encoded list into an array of RLP-encoded items.\nNote that this function does not recursively decode, so each element of the resulting array is RLP-encoded data.\nThe byte array should only contain of a single encoded value for a list; if the encoded value type does not match, or it has trailing unnecessary bytes, the program aborts.\nIf any error is encountered while decoding, the program aborts.\n")))}p.isMDXComponent=!0}}]);