"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[18750],{25363:(o,e,t)=>{t.r(e),t.d(e,{CH:()=>d,assets:()=>i,chCodeConfig:()=>y,contentTitle:()=>l,default:()=>F,frontMatter:()=>c,metadata:()=>p,toc:()=>a});t(67294);var n=t(85893),s=t(11151),r=t(59794);const c={title:"Values and Types",sidebar_position:4},l=void 0,p={unversionedId:"cadence/language/values-and-types",id:"version-stable/cadence/language/values-and-types",title:"Values and Types",description:"Values are objects, like for example booleans, integers, or arrays.",source:"@site/versioned_docs/version-stable/cadence/language/values-and-types.mdx",sourceDirName:"cadence/language",slug:"/cadence/language/values-and-types",permalink:"/docs/cadence/language/values-and-types",draft:!1,editUrl:"https://github.com/onflow/docs/tree/main/docs/cadence/language/values-and-types.mdx",tags:[],version:"stable",lastUpdatedBy:"Alex",lastUpdatedAt:1695138068,formattedLastUpdatedAt:"Sep 19, 2023",sidebarPosition:4,frontMatter:{title:"Values and Types",sidebar_position:4},sidebar:"cadence",previous:{title:"Type Annotations",permalink:"/docs/cadence/language/type-annotations"},next:{title:"Operators",permalink:"/docs/cadence/language/operators"}},i={},a=[{value:"Booleans",id:"booleans",level:2},{value:"Numeric Literals",id:"numeric-literals",level:2},{value:"Integers",id:"integers",level:2},{value:"Integer Functions",id:"integer-functions",level:3},{value:"Fixed-Point Numbers",id:"fixed-point-numbers",level:2},{value:"Fixed-Point Number Functions",id:"fixed-point-number-functions",level:3},{value:"Minimum and maximum values",id:"minimum-and-maximum-values",level:2},{value:"Saturation Arithmetic",id:"saturation-arithmetic",level:2},{value:"Floating-Point Numbers",id:"floating-point-numbers",level:2},{value:"Addresses",id:"addresses",level:2},{value:"Address Functions",id:"address-functions",level:3},{value:"AnyStruct and AnyResource",id:"anystruct-and-anyresource",level:2},{value:"Optionals",id:"optionals",level:2},{value:"Never",id:"never",level:2},{value:"Strings and Characters",id:"strings-and-characters",level:2},{value:"String Fields and Functions",id:"string-fields-and-functions",level:3},{value:"Character Fields and Functions",id:"character-fields-and-functions",level:3},{value:"Arrays",id:"arrays",level:2},{value:"Array Types",id:"array-types",level:3},{value:"Array Indexing",id:"array-indexing",level:3},{value:"Array Fields and Functions",id:"array-fields-and-functions",level:3},{value:"Variable-size Array Functions",id:"variable-size-array-functions",level:4},{value:"Dictionaries",id:"dictionaries",level:2},{value:"Dictionary Types",id:"dictionary-types",level:3},{value:"Dictionary Access",id:"dictionary-access",level:3},{value:"Dictionary Fields and Functions",id:"dictionary-fields-and-functions",level:3},{value:"Dictionary Keys",id:"dictionary-keys",level:3}],d={annotations:r.ds,Code:r.EK},y={staticMediaQuery:"not screen, (max-width: 768px)",theme:{name:"nord",type:"dark",semanticHighlighting:!0,colors:{focusBorder:"#3b4252",foreground:"#d8dee9","activityBar.background":"#2e3440","activityBar.dropBackground":"#3b4252","activityBar.foreground":"#d8dee9","activityBar.activeBorder":"#88c0d0","activityBar.activeBackground":"#3b4252","activityBarBadge.background":"#88c0d0","activityBarBadge.foreground":"#2e3440","badge.foreground":"#2e3440","badge.background":"#88c0d0","button.background":"#88c0d0ee","button.foreground":"#2e3440","button.hoverBackground":"#88c0d0","button.secondaryBackground":"#434c5e","button.secondaryForeground":"#d8dee9","button.secondaryHoverBackground":"#4c566a","charts.red":"#bf616a","charts.blue":"#81a1c1","charts.yellow":"#ebcb8b","charts.orange":"#d08770","charts.green":"#a3be8c","charts.purple":"#b48ead","charts.foreground":"#d8dee9","charts.lines":"#88c0d0","debugConsole.infoForeground":"#88c0d0","debugConsole.warningForeground":"#ebcb8b","debugConsole.errorForeground":"#bf616a","debugConsole.sourceForeground":"#616e88","debugConsoleInputIcon.foreground":"#81a1c1","debugExceptionWidget.background":"#4c566a","debugExceptionWidget.border":"#2e3440","debugToolBar.background":"#3b4252",descriptionForeground:"#d8dee9e6","diffEditor.insertedTextBackground":"#81a1c133","diffEditor.removedTextBackground":"#bf616a4d","dropdown.background":"#3b4252","dropdown.border":"#3b4252","dropdown.foreground":"#d8dee9","editorActiveLineNumber.foreground":"#d8dee9cc","editorCursor.foreground":"#d8dee9","editorHint.border":"#ebcb8b00","editorHint.foreground":"#ebcb8b","editorIndentGuide.background":"#434c5eb3","editorIndentGuide.activeBackground":"#4c566a","editorInlayHint.background":"#434c5e","editorInlayHint.foreground":"#d8dee9","editorLineNumber.foreground":"#4c566a","editorLineNumber.activeForeground":"#d8dee9","editorWhitespace.foreground":"#4c566ab3","editorWidget.background":"#2e3440","editorWidget.border":"#3b4252","editor.background":"#2e3440","editor.foreground":"#d8dee9","editor.hoverHighlightBackground":"#3b4252","editor.findMatchBackground":"#88c0d066","editor.findMatchHighlightBackground":"#88c0d033","editor.findRangeHighlightBackground":"#88c0d033","editor.lineHighlightBackground":"#3b4252","editor.lineHighlightBorder":"#3b4252","editor.inactiveSelectionBackground":"#434c5ecc","editor.inlineValuesBackground":"#4c566a","editor.inlineValuesForeground":"#eceff4","editor.selectionBackground":"#434c5ecc","editor.selectionHighlightBackground":"#434c5ecc","editor.rangeHighlightBackground":"#434c5e52","editor.wordHighlightBackground":"#81a1c166","editor.wordHighlightStrongBackground":"#81a1c199","editor.stackFrameHighlightBackground":"#5e81ac","editor.focusedStackFrameHighlightBackground":"#5e81ac","editorError.foreground":"#bf616a","editorError.border":"#bf616a00","editorWarning.foreground":"#ebcb8b","editorWarning.border":"#ebcb8b00","editorBracketMatch.background":"#2e344000","editorBracketMatch.border":"#88c0d0","editorBracketHighlight.foreground1":"#8fbcbb","editorBracketHighlight.foreground2":"#88c0d0","editorBracketHighlight.foreground3":"#81a1c1","editorBracketHighlight.foreground4":"#5e81ac","editorBracketHighlight.foreground5":"#8fbcbb","editorBracketHighlight.foreground6":"#88c0d0","editorBracketHighlight.unexpectedBracket.foreground":"#bf616a","editorCodeLens.foreground":"#4c566a","editorGroup.background":"#2e3440","editorGroup.border":"#3b425201","editorGroup.dropBackground":"#3b425299","editorGroupHeader.border":"#3b425200","editorGroupHeader.noTabsBackground":"#2e3440","editorGroupHeader.tabsBackground":"#2e3440","editorGroupHeader.tabsBorder":"#3b425200","editorGutter.background":"#2e3440","editorGutter.modifiedBackground":"#ebcb8b","editorGutter.addedBackground":"#a3be8c","editorGutter.deletedBackground":"#bf616a","editorHoverWidget.background":"#3b4252","editorHoverWidget.border":"#3b4252","editorLink.activeForeground":"#88c0d0","editorMarkerNavigation.background":"#5e81acc0","editorMarkerNavigationError.background":"#bf616ac0","editorMarkerNavigationWarning.background":"#ebcb8bc0","editorOverviewRuler.border":"#3b4252","editorOverviewRuler.currentContentForeground":"#3b4252","editorOverviewRuler.incomingContentForeground":"#3b4252","editorOverviewRuler.findMatchForeground":"#88c0d066","editorOverviewRuler.rangeHighlightForeground":"#88c0d066","editorOverviewRuler.selectionHighlightForeground":"#88c0d066","editorOverviewRuler.wordHighlightForeground":"#88c0d066","editorOverviewRuler.wordHighlightStrongForeground":"#88c0d066","editorOverviewRuler.modifiedForeground":"#ebcb8b","editorOverviewRuler.addedForeground":"#a3be8c","editorOverviewRuler.deletedForeground":"#bf616a","editorOverviewRuler.errorForeground":"#bf616a","editorOverviewRuler.warningForeground":"#ebcb8b","editorOverviewRuler.infoForeground":"#81a1c1","editorRuler.foreground":"#434c5e","editorSuggestWidget.background":"#2e3440","editorSuggestWidget.border":"#3b4252","editorSuggestWidget.foreground":"#d8dee9","editorSuggestWidget.focusHighlightForeground":"#88c0d0","editorSuggestWidget.highlightForeground":"#88c0d0","editorSuggestWidget.selectedBackground":"#434c5e","editorSuggestWidget.selectedForeground":"#d8dee9","extensionButton.prominentForeground":"#d8dee9","extensionButton.prominentBackground":"#434c5e","extensionButton.prominentHoverBackground":"#4c566a",errorForeground:"#bf616a","gitDecoration.modifiedResourceForeground":"#ebcb8b","gitDecoration.deletedResourceForeground":"#bf616a","gitDecoration.untrackedResourceForeground":"#a3be8c","gitDecoration.ignoredResourceForeground":"#d8dee966","gitDecoration.conflictingResourceForeground":"#5e81ac","gitDecoration.submoduleResourceForeground":"#8fbcbb","gitDecoration.stageDeletedResourceForeground":"#bf616a","gitDecoration.stageModifiedResourceForeground":"#ebcb8b","input.background":"#3b4252","input.foreground":"#d8dee9","input.placeholderForeground":"#d8dee999","input.border":"#3b4252","inputOption.activeBackground":"#5e81ac","inputOption.activeBorder":"#5e81ac","inputOption.activeForeground":"#eceff4","inputValidation.errorBackground":"#bf616a","inputValidation.errorBorder":"#bf616a","inputValidation.infoBackground":"#81a1c1","inputValidation.infoBorder":"#81a1c1","inputValidation.warningBackground":"#d08770","inputValidation.warningBorder":"#d08770","keybindingLabel.background":"#4c566a","keybindingLabel.border":"#4c566a","keybindingLabel.bottomBorder":"#4c566a","keybindingLabel.foreground":"#d8dee9","list.activeSelectionBackground":"#88c0d0","list.activeSelectionForeground":"#2e3440","list.inactiveSelectionBackground":"#434c5e","list.inactiveSelectionForeground":"#d8dee9","list.inactiveFocusBackground":"#434c5ecc","list.hoverForeground":"#eceff4","list.focusForeground":"#d8dee9","list.focusBackground":"#88c0d099","list.focusHighlightForeground":"#eceff4","list.hoverBackground":"#3b4252","list.dropBackground":"#88c0d099","list.highlightForeground":"#88c0d0","list.errorForeground":"#bf616a","list.warningForeground":"#ebcb8b","merge.currentHeaderBackground":"#81a1c166","merge.currentContentBackground":"#81a1c14d","merge.incomingHeaderBackground":"#8fbcbb66","merge.incomingContentBackground":"#8fbcbb4d","merge.border":"#3b425200","minimap.background":"#2e3440","minimap.errorHighlight":"#bf616acc","minimap.findMatchHighlight":"#88c0d0","minimap.selectionHighlight":"#88c0d0cc","minimap.warningHighlight":"#ebcb8bcc","minimapGutter.addedBackground":"#a3be8c","minimapGutter.deletedBackground":"#bf616a","minimapGutter.modifiedBackground":"#ebcb8b","minimapSlider.activeBackground":"#434c5eaa","minimapSlider.background":"#434c5e99","minimapSlider.hoverBackground":"#434c5eaa","notification.background":"#3b4252","notification.buttonBackground":"#434c5e","notification.buttonForeground":"#d8dee9","notification.buttonHoverBackground":"#4c566a","notification.errorBackground":"#bf616a","notification.errorForeground":"#2e3440","notification.foreground":"#d8dee9","notification.infoBackground":"#88c0d0","notification.infoForeground":"#2e3440","notification.warningBackground":"#ebcb8b","notification.warningForeground":"#2e3440","notificationCenter.border":"#3b425200","notificationCenterHeader.background":"#2e3440","notificationCenterHeader.foreground":"#88c0d0","notificationLink.foreground":"#88c0d0","notifications.background":"#3b4252","notifications.border":"#2e3440","notifications.foreground":"#d8dee9","notificationToast.border":"#3b425200","panel.background":"#2e3440","panel.border":"#3b4252","panelTitle.activeBorder":"#88c0d000","panelTitle.activeForeground":"#88c0d0","panelTitle.inactiveForeground":"#d8dee9","peekView.border":"#4c566a","peekViewEditor.background":"#2e3440","peekViewEditorGutter.background":"#2e3440","peekViewEditor.matchHighlightBackground":"#88c0d04d","peekViewResult.background":"#2e3440","peekViewResult.fileForeground":"#88c0d0","peekViewResult.lineForeground":"#d8dee966","peekViewResult.matchHighlightBackground":"#88c0d0cc","peekViewResult.selectionBackground":"#434c5e","peekViewResult.selectionForeground":"#d8dee9","peekViewTitle.background":"#3b4252","peekViewTitleDescription.foreground":"#d8dee9","peekViewTitleLabel.foreground":"#88c0d0","pickerGroup.border":"#3b4252","pickerGroup.foreground":"#88c0d0","progressBar.background":"#88c0d0","quickInputList.focusBackground":"#88c0d0","quickInputList.focusForeground":"#2e3440","sash.hoverBorder":"#88c0d0","scrollbar.shadow":"#00000066","scrollbarSlider.activeBackground":"#434c5eaa","scrollbarSlider.background":"#434c5e99","scrollbarSlider.hoverBackground":"#434c5eaa","selection.background":"#88c0d099","sideBar.background":"#2e3440","sideBar.foreground":"#d8dee9","sideBar.border":"#3b4252","sideBarSectionHeader.background":"#3b4252","sideBarSectionHeader.foreground":"#d8dee9","sideBarTitle.foreground":"#d8dee9","statusBar.background":"#3b4252","statusBar.debuggingBackground":"#5e81ac","statusBar.debuggingForeground":"#d8dee9","statusBar.noFolderForeground":"#d8dee9","statusBar.noFolderBackground":"#3b4252","statusBar.foreground":"#d8dee9","statusBarItem.activeBackground":"#4c566a","statusBarItem.hoverBackground":"#434c5e","statusBarItem.prominentBackground":"#3b4252","statusBarItem.prominentHoverBackground":"#434c5e","statusBarItem.errorBackground":"#3b4252","statusBarItem.errorForeground":"#bf616a","statusBarItem.warningBackground":"#ebcb8b","statusBarItem.warningForeground":"#2e3440","statusBar.border":"#3b425200","tab.activeBackground":"#3b4252","tab.activeForeground":"#d8dee9","tab.border":"#3b425200","tab.activeBorder":"#88c0d000","tab.unfocusedActiveBorder":"#88c0d000","tab.inactiveBackground":"#2e3440","tab.inactiveForeground":"#d8dee966","tab.unfocusedActiveForeground":"#d8dee999","tab.unfocusedInactiveForeground":"#d8dee966","tab.hoverBackground":"#3b4252cc","tab.unfocusedHoverBackground":"#3b4252b3","tab.hoverBorder":"#88c0d000","tab.unfocusedHoverBorder":"#88c0d000","tab.activeBorderTop":"#88c0d000","tab.unfocusedActiveBorderTop":"#88c0d000","tab.lastPinnedBorder":"#4c566a","terminal.background":"#2e3440","terminal.foreground":"#d8dee9","terminal.ansiBlack":"#3b4252","terminal.ansiRed":"#bf616a","terminal.ansiGreen":"#a3be8c","terminal.ansiYellow":"#ebcb8b","terminal.ansiBlue":"#81a1c1","terminal.ansiMagenta":"#b48ead","terminal.ansiCyan":"#88c0d0","terminal.ansiWhite":"#e5e9f0","terminal.ansiBrightBlack":"#4c566a","terminal.ansiBrightRed":"#bf616a","terminal.ansiBrightGreen":"#a3be8c","terminal.ansiBrightYellow":"#ebcb8b","terminal.ansiBrightBlue":"#81a1c1","terminal.ansiBrightMagenta":"#b48ead","terminal.ansiBrightCyan":"#8fbcbb","terminal.ansiBrightWhite":"#eceff4","terminal.tab.activeBorder":"#88c0d0","textBlockQuote.background":"#3b4252","textBlockQuote.border":"#81a1c1","textCodeBlock.background":"#4c566a","textLink.activeForeground":"#88c0d0","textLink.foreground":"#88c0d0","textPreformat.foreground":"#8fbcbb","textSeparator.foreground":"#eceff4","titleBar.activeBackground":"#2e3440","titleBar.activeForeground":"#d8dee9","titleBar.border":"#2e344000","titleBar.inactiveBackground":"#2e3440","titleBar.inactiveForeground":"#d8dee966","tree.indentGuidesStroke":"#616e88","walkThrough.embeddedEditorBackground":"#2e3440","welcomePage.buttonBackground":"#434c5e","welcomePage.buttonHoverBackground":"#4c566a","widget.shadow":"#00000066"},tokenColors:[{settings:{foreground:"#d8dee9ff",background:"#2e3440ff"}},{scope:"emphasis",settings:{fontStyle:"italic"}},{scope:"strong",settings:{fontStyle:"bold"}},{name:"Comment",scope:"comment",settings:{foreground:"#616E88"}},{name:"Constant Character",scope:"constant.character",settings:{foreground:"#EBCB8B"}},{name:"Constant Character Escape",scope:"constant.character.escape",settings:{foreground:"#EBCB8B"}},{name:"Constant Language",scope:"constant.language",settings:{foreground:"#81A1C1"}},{name:"Constant Numeric",scope:"constant.numeric",settings:{foreground:"#B48EAD"}},{name:"Constant Regexp",scope:"constant.regexp",settings:{foreground:"#EBCB8B"}},{name:"Entity Name Class/Type",scope:["entity.name.class","entity.name.type.class"],settings:{foreground:"#8FBCBB"}},{name:"Entity Name Function",scope:"entity.name.function",settings:{foreground:"#88C0D0"}},{name:"Entity Name Tag",scope:"entity.name.tag",settings:{foreground:"#81A1C1"}},{name:"Entity Other Attribute Name",scope:"entity.other.attribute-name",settings:{foreground:"#8FBCBB"}},{name:"Entity Other Inherited Class",scope:"entity.other.inherited-class",settings:{fontStyle:"bold",foreground:"#8FBCBB"}},{name:"Invalid Deprecated",scope:"invalid.deprecated",settings:{foreground:"#D8DEE9",background:"#EBCB8B"}},{name:"Invalid Illegal",scope:"invalid.illegal",settings:{foreground:"#D8DEE9",background:"#BF616A"}},{name:"Keyword",scope:"keyword",settings:{foreground:"#81A1C1"}},{name:"Keyword Operator",scope:"keyword.operator",settings:{foreground:"#81A1C1"}},{name:"Keyword Other New",scope:"keyword.other.new",settings:{foreground:"#81A1C1"}},{name:"Markup Bold",scope:"markup.bold",settings:{fontStyle:"bold"}},{name:"Markup Changed",scope:"markup.changed",settings:{foreground:"#EBCB8B"}},{name:"Markup Deleted",scope:"markup.deleted",settings:{foreground:"#BF616A"}},{name:"Markup Inserted",scope:"markup.inserted",settings:{foreground:"#A3BE8C"}},{name:"Meta Preprocessor",scope:"meta.preprocessor",settings:{foreground:"#5E81AC"}},{name:"Punctuation",scope:"punctuation",settings:{foreground:"#ECEFF4"}},{name:"Punctuation Definition Parameters",scope:["punctuation.definition.method-parameters","punctuation.definition.function-parameters","punctuation.definition.parameters"],settings:{foreground:"#ECEFF4"}},{name:"Punctuation Definition Tag",scope:"punctuation.definition.tag",settings:{foreground:"#81A1C1"}},{name:"Punctuation Definition Comment",scope:["punctuation.definition.comment","punctuation.end.definition.comment","punctuation.start.definition.comment"],settings:{foreground:"#616E88"}},{name:"Punctuation Section",scope:"punctuation.section",settings:{foreground:"#ECEFF4"}},{name:"Punctuation Section Embedded",scope:["punctuation.section.embedded.begin","punctuation.section.embedded.end"],settings:{foreground:"#81A1C1"}},{name:"Punctuation Terminator",scope:"punctuation.terminator",settings:{foreground:"#81A1C1"}},{name:"Punctuation Variable",scope:"punctuation.definition.variable",settings:{foreground:"#81A1C1"}},{name:"Storage",scope:"storage",settings:{foreground:"#81A1C1"}},{name:"String",scope:"string",settings:{foreground:"#A3BE8C"}},{name:"String Regexp",scope:"string.regexp",settings:{foreground:"#EBCB8B"}},{name:"Support Class",scope:"support.class",settings:{foreground:"#8FBCBB"}},{name:"Support Constant",scope:"support.constant",settings:{foreground:"#81A1C1"}},{name:"Support Function",scope:"support.function",settings:{foreground:"#88C0D0"}},{name:"Support Function Construct",scope:"support.function.construct",settings:{foreground:"#81A1C1"}},{name:"Support Type",scope:"support.type",settings:{foreground:"#8FBCBB"}},{name:"Support Type Exception",scope:"support.type.exception",settings:{foreground:"#8FBCBB"}},{name:"Token Debug",scope:"token.debug-token",settings:{foreground:"#b48ead"}},{name:"Token Error",scope:"token.error-token",settings:{foreground:"#bf616a"}},{name:"Token Info",scope:"token.info-token",settings:{foreground:"#88c0d0"}},{name:"Token Warning",scope:"token.warn-token",settings:{foreground:"#ebcb8b"}},{name:"Variable",scope:"variable.other",settings:{foreground:"#D8DEE9"}},{name:"Variable Language",scope:"variable.language",settings:{foreground:"#81A1C1"}},{name:"Variable Parameter",scope:"variable.parameter",settings:{foreground:"#D8DEE9"}},{name:"[C/CPP] Punctuation Separator Pointer-Access",scope:"punctuation.separator.pointer-access.c",settings:{foreground:"#81A1C1"}},{name:"[C/CPP] Meta Preprocessor Include",scope:["source.c meta.preprocessor.include","source.c string.quoted.other.lt-gt.include"],settings:{foreground:"#8FBCBB"}},{name:"[C/CPP] Conditional Directive",scope:["source.cpp keyword.control.directive.conditional","source.cpp punctuation.definition.directive","source.c keyword.control.directive.conditional","source.c punctuation.definition.directive"],settings:{foreground:"#5E81AC",fontStyle:"bold"}},{name:"[CSS] Constant Other Color RGB Value",scope:"source.css constant.other.color.rgb-value",settings:{foreground:"#B48EAD"}},{name:"[CSS](Function) Meta Property-Value",scope:"source.css meta.property-value",settings:{foreground:"#88C0D0"}},{name:"[CSS] Media Queries",scope:["source.css keyword.control.at-rule.media","source.css keyword.control.at-rule.media punctuation.definition.keyword"],settings:{foreground:"#D08770"}},{name:"[CSS] Punctuation Definition Keyword",scope:"source.css punctuation.definition.keyword",settings:{foreground:"#81A1C1"}},{name:"[CSS] Support Type Property Name",scope:"source.css support.type.property-name",settings:{foreground:"#D8DEE9"}},{name:"[diff] Meta Range Context",scope:"source.diff meta.diff.range.context",settings:{foreground:"#8FBCBB"}},{name:"[diff] Meta Header From-File",scope:"source.diff meta.diff.header.from-file",settings:{foreground:"#8FBCBB"}},{name:"[diff] Punctuation Definition From-File",scope:"source.diff punctuation.definition.from-file",settings:{foreground:"#8FBCBB"}},{name:"[diff] Punctuation Definition Range",scope:"source.diff punctuation.definition.range",settings:{foreground:"#8FBCBB"}},{name:"[diff] Punctuation Definition Separator",scope:"source.diff punctuation.definition.separator",settings:{foreground:"#81A1C1"}},{name:"[Elixir](JakeBecker.elixir-ls) module names",scope:"entity.name.type.module.elixir",settings:{foreground:"#8FBCBB"}},{name:"[Elixir](JakeBecker.elixir-ls) module attributes",scope:"variable.other.readwrite.module.elixir",settings:{foreground:"#D8DEE9",fontStyle:"bold"}},{name:"[Elixir](JakeBecker.elixir-ls) atoms",scope:"constant.other.symbol.elixir",settings:{foreground:"#D8DEE9",fontStyle:"bold"}},{name:"[Elixir](JakeBecker.elixir-ls) modules",scope:"variable.other.constant.elixir",settings:{foreground:"#8FBCBB"}},{name:"[Go] String Format Placeholder",scope:"source.go constant.other.placeholder.go",settings:{foreground:"#EBCB8B"}},{name:"[Java](JavaDoc) Comment Block Documentation HTML Entities",scope:"source.java comment.block.documentation.javadoc punctuation.definition.entity.html",settings:{foreground:"#81A1C1"}},{name:"[Java](JavaDoc) Constant Other",scope:"source.java constant.other",settings:{foreground:"#D8DEE9"}},{name:"[Java](JavaDoc) Keyword Other Documentation",scope:"source.java keyword.other.documentation",settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Keyword Other Documentation Author",scope:"source.java keyword.other.documentation.author.javadoc",settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Keyword Other Documentation Directive/Custom",scope:["source.java keyword.other.documentation.directive","source.java keyword.other.documentation.custom"],settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Keyword Other Documentation See",scope:"source.java keyword.other.documentation.see.javadoc",settings:{foreground:"#8FBCBB"}},{name:"[Java] Meta Method-Call",scope:"source.java meta.method-call meta.method",settings:{foreground:"#88C0D0"}},{name:"[Java](JavaDoc) Meta Tag Template Link",scope:["source.java meta.tag.template.link.javadoc","source.java string.other.link.title.javadoc"],settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Meta Tag Template Value",scope:"source.java meta.tag.template.value.javadoc",settings:{foreground:"#88C0D0"}},{name:"[Java](JavaDoc) Punctuation Definition Keyword",scope:"source.java punctuation.definition.keyword.javadoc",settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Punctuation Definition Tag",scope:["source.java punctuation.definition.tag.begin.javadoc","source.java punctuation.definition.tag.end.javadoc"],settings:{foreground:"#616E88"}},{name:"[Java] Storage Modifier Import",scope:"source.java storage.modifier.import",settings:{foreground:"#8FBCBB"}},{name:"[Java] Storage Modifier Package",scope:"source.java storage.modifier.package",settings:{foreground:"#8FBCBB"}},{name:"[Java] Storage Type",scope:"source.java storage.type",settings:{foreground:"#8FBCBB"}},{name:"[Java] Storage Type Annotation",scope:"source.java storage.type.annotation",settings:{foreground:"#D08770"}},{name:"[Java] Storage Type Generic",scope:"source.java storage.type.generic",settings:{foreground:"#8FBCBB"}},{name:"[Java] Storage Type Primitive",scope:"source.java storage.type.primitive",settings:{foreground:"#81A1C1"}},{name:"[JavaScript] Decorator",scope:["source.js punctuation.decorator","source.js meta.decorator variable.other.readwrite","source.js meta.decorator entity.name.function"],settings:{foreground:"#D08770"}},{name:"[JavaScript] Meta Object-Literal Key",scope:"source.js meta.object-literal.key",settings:{foreground:"#88C0D0"}},{name:"[JavaScript](JSDoc) Storage Type Class",scope:"source.js storage.type.class.jsdoc",settings:{foreground:"#8FBCBB"}},{name:"[JavaScript] String Template Literals Punctuation",scope:["source.js string.quoted.template punctuation.quasi.element.begin","source.js string.quoted.template punctuation.quasi.element.end","source.js string.template punctuation.definition.template-expression"],settings:{foreground:"#81A1C1"}},{name:"[JavaScript] Interpolated String Template Punctuation Functions",scope:"source.js string.quoted.template meta.method-call.with-arguments",settings:{foreground:"#ECEFF4"}},{name:"[JavaScript] String Template Literal Variable",scope:["source.js string.template meta.template.expression support.variable.property","source.js string.template meta.template.expression variable.other.object"],settings:{foreground:"#D8DEE9"}},{name:"[JavaScript] Support Type Primitive",scope:"source.js support.type.primitive",settings:{foreground:"#81A1C1"}},{name:"[JavaScript] Variable Other Object",scope:"source.js variable.other.object",settings:{foreground:"#D8DEE9"}},{name:"[JavaScript] Variable Other Read-Write Alias",scope:"source.js variable.other.readwrite.alias",settings:{foreground:"#8FBCBB"}},{name:"[JavaScript] Parentheses in Template Strings",scope:["source.js meta.embedded.line meta.brace.square","source.js meta.embedded.line meta.brace.round","source.js string.quoted.template meta.brace.square","source.js string.quoted.template meta.brace.round"],settings:{foreground:"#ECEFF4"}},{name:"[HTML] Constant Character Entity",scope:"text.html.basic constant.character.entity.html",settings:{foreground:"#EBCB8B"}},{name:"[HTML] Constant Other Inline-Data",scope:"text.html.basic constant.other.inline-data",settings:{foreground:"#D08770",fontStyle:"italic"}},{name:"[HTML] Meta Tag SGML Doctype",scope:"text.html.basic meta.tag.sgml.doctype",settings:{foreground:"#5E81AC"}},{name:"[HTML] Punctuation Definition Entity",scope:"text.html.basic punctuation.definition.entity",settings:{foreground:"#81A1C1"}},{name:"[INI] Entity Name Section Group-Title",scope:"source.properties entity.name.section.group-title.ini",settings:{foreground:"#88C0D0"}},{name:"[INI] Punctuation Separator Key-Value",scope:"source.properties punctuation.separator.key-value.ini",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Markup Fenced Code Block",scope:["text.html.markdown markup.fenced_code.block","text.html.markdown markup.fenced_code.block punctuation.definition"],settings:{foreground:"#8FBCBB"}},{name:"[Markdown] Markup Heading",scope:"markup.heading",settings:{foreground:"#88C0D0"}},{name:"[Markdown] Markup Inline",scope:["text.html.markdown markup.inline.raw","text.html.markdown markup.inline.raw punctuation.definition.raw"],settings:{foreground:"#8FBCBB"}},{name:"[Markdown] Markup Italic",scope:"text.html.markdown markup.italic",settings:{fontStyle:"italic"}},{name:"[Markdown] Markup Link",scope:"text.html.markdown markup.underline.link",settings:{fontStyle:"underline"}},{name:"[Markdown] Markup List Numbered/Unnumbered",scope:"text.html.markdown beginning.punctuation.definition.list",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Markup Quote Punctuation Definition",scope:"text.html.markdown beginning.punctuation.definition.quote",settings:{foreground:"#8FBCBB"}},{name:"[Markdown] Markup Quote Punctuation Definition",scope:"text.html.markdown markup.quote",settings:{foreground:"#616E88"}},{name:"[Markdown] Markup Math Constant",scope:"text.html.markdown constant.character.math.tex",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Markup Math Definition Marker",scope:["text.html.markdown punctuation.definition.math.begin","text.html.markdown punctuation.definition.math.end"],settings:{foreground:"#5E81AC"}},{name:"[Markdown] Markup Math Function Definition Marker",scope:"text.html.markdown punctuation.definition.function.math.tex",settings:{foreground:"#88C0D0"}},{name:"[Markdown] Markup Math Operator",scope:"text.html.markdown punctuation.math.operator.latex",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Punctuation Definition Heading",scope:"text.html.markdown punctuation.definition.heading",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Punctuation Definition Constant/String",scope:["text.html.markdown punctuation.definition.constant","text.html.markdown punctuation.definition.string"],settings:{foreground:"#81A1C1"}},{name:"[Markdown] String Other Link Description/Title",scope:["text.html.markdown constant.other.reference.link","text.html.markdown string.other.link.description","text.html.markdown string.other.link.title"],settings:{foreground:"#88C0D0"}},{name:"[Perl] Perl Sigils",scope:"source.perl punctuation.definition.variable",settings:{foreground:"#D8DEE9"}},{name:"[PHP] Meta Function-Call Object",scope:["source.php meta.function-call","source.php meta.function-call.object"],settings:{foreground:"#88C0D0"}},{name:"[Python] Decorator",scope:["source.python entity.name.function.decorator","source.python meta.function.decorator support.type"],settings:{foreground:"#D08770"}},{name:"[Python] Function Call",scope:"source.python meta.function-call.generic",settings:{foreground:"#88C0D0"}},{name:"[Python] Support Type",scope:"source.python support.type",settings:{foreground:"#88C0D0"}},{name:"[Python] Function Parameter",scope:["source.python variable.parameter.function.language"],settings:{foreground:"#D8DEE9"}},{name:"[Python] Function Parameter Special",scope:["source.python meta.function.parameters variable.parameter.function.language.special.self"],settings:{foreground:"#81A1C1"}},{name:"[Rust] Entity types",scope:"source.rust entity.name.type",settings:{foreground:"#8FBCBB"}},{name:"[Rust] Macro",scope:"source.rust meta.macro entity.name.function",settings:{fontStyle:"bold",foreground:"#88C0D0"}},{name:"[Rust] Attributes",scope:["source.rust meta.attribute","source.rust meta.attribute punctuation","source.rust meta.attribute keyword.operator"],settings:{foreground:"#5E81AC"}},{name:"[Rust] Traits",scope:"source.rust entity.name.type.trait",settings:{fontStyle:"bold"}},{name:"[Rust] Interpolation Bracket Curly",scope:"source.rust punctuation.definition.interpolation",settings:{foreground:"#EBCB8B"}},{name:"[SCSS] Punctuation Definition Interpolation Bracket Curly",scope:["source.css.scss punctuation.definition.interpolation.begin.bracket.curly","source.css.scss punctuation.definition.interpolation.end.bracket.curly"],settings:{foreground:"#81A1C1"}},{name:"[SCSS] Variable Interpolation",scope:"source.css.scss variable.interpolation",settings:{foreground:"#D8DEE9",fontStyle:"italic"}},{name:"[TypeScript] Decorators",scope:["source.ts punctuation.decorator","source.ts meta.decorator variable.other.readwrite","source.ts meta.decorator entity.name.function","source.tsx punctuation.decorator","source.tsx meta.decorator variable.other.readwrite","source.tsx meta.decorator entity.name.function"],settings:{foreground:"#D08770"}},{name:"[TypeScript] Object-literal keys",scope:["source.ts meta.object-literal.key","source.tsx meta.object-literal.key"],settings:{foreground:"#D8DEE9"}},{name:"[TypeScript] Object-literal functions",scope:["source.ts meta.object-literal.key entity.name.function","source.tsx meta.object-literal.key entity.name.function"],settings:{foreground:"#88C0D0"}},{name:"[TypeScript] Type/Class",scope:["source.ts support.class","source.ts support.type","source.ts entity.name.type","source.ts entity.name.class","source.tsx support.class","source.tsx support.type","source.tsx entity.name.type","source.tsx entity.name.class"],settings:{foreground:"#8FBCBB"}},{name:"[TypeScript] Static Class Support",scope:["source.ts support.constant.math","source.ts support.constant.dom","source.ts support.constant.json","source.tsx support.constant.math","source.tsx support.constant.dom","source.tsx support.constant.json"],settings:{foreground:"#8FBCBB"}},{name:"[TypeScript] Variables",scope:["source.ts support.variable","source.tsx support.variable"],settings:{foreground:"#D8DEE9"}},{name:"[TypeScript] Parentheses in Template Strings",scope:["source.ts meta.embedded.line meta.brace.square","source.ts meta.embedded.line meta.brace.round","source.tsx meta.embedded.line meta.brace.square","source.tsx meta.embedded.line meta.brace.round"],settings:{foreground:"#ECEFF4"}},{name:"[XML] Entity Name Tag Namespace",scope:"text.xml entity.name.tag.namespace",settings:{foreground:"#8FBCBB"}},{name:"[XML] Keyword Other Doctype",scope:"text.xml keyword.other.doctype",settings:{foreground:"#5E81AC"}},{name:"[XML] Meta Tag Preprocessor",scope:"text.xml meta.tag.preprocessor entity.name.tag",settings:{foreground:"#5E81AC"}},{name:"[XML] Entity Name Tag Namespace",scope:["text.xml string.unquoted.cdata","text.xml string.unquoted.cdata punctuation.definition.string"],settings:{foreground:"#D08770",fontStyle:"italic"}},{name:"[YAML] Entity Name Tag",scope:"source.yaml entity.name.tag",settings:{foreground:"#8FBCBB"}}]},lineNumbers:!0,showCopyButton:!0,autoImport:!0,skipLanguages:[],filepath:"/home/runner/work/docs/docs/versioned_docs/version-stable/cadence/language/values-and-types.mdx"};function E(o){const e=Object.assign({p:"p",h2:"h2",code:"code",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",strong:"strong",em:"em",ul:"ul",li:"li",a:"a",h3:"h3",h4:"h4"},(0,s.ah)(),o.components),{Callout:t}=e;return d||h("CH",!1),d.Code||h("CH.Code",!0),t||h("Callout",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:"Values are objects, like for example booleans, integers, or arrays.\nValues are typed."}),"\n",(0,n.jsx)(e.h2,{id:"booleans",children:"Booleans"}),"\n",(0,n.jsxs)(e.p,{children:["The two boolean values ",(0,n.jsx)(e.code,{children:"true"})," and ",(0,n.jsx)(e.code,{children:"false"})," have the type ",(0,n.jsx)(e.code,{children:"Bool"}),"."]}),"\n",(0,n.jsx)(e.h2,{id:"numeric-literals",children:"Numeric Literals"}),"\n",(0,n.jsx)(e.p,{children:"Numbers can be written in various bases. Numbers are assumed to be decimal by default.\nNon-decimal literals have a specific prefix."}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{align:"left",children:"Numeral system"}),(0,n.jsx)(e.th,{align:"left",children:"Prefix"}),(0,n.jsx)(e.th,{align:"left",children:"Characters"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{align:"left",children:(0,n.jsx)(e.strong,{children:"Decimal"})}),(0,n.jsx)(e.td,{align:"left",children:(0,n.jsx)(e.em,{children:"None"})}),(0,n.jsxs)(e.td,{align:"left",children:["one or more numbers (",(0,n.jsx)(e.code,{children:"0"})," to ",(0,n.jsx)(e.code,{children:"9"}),")"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{align:"left",children:(0,n.jsx)(e.strong,{children:"Binary"})}),(0,n.jsx)(e.td,{align:"left",children:(0,n.jsx)(e.code,{children:"0b"})}),(0,n.jsxs)(e.td,{align:"left",children:["one or more zeros or ones (",(0,n.jsx)(e.code,{children:"0"})," or ",(0,n.jsx)(e.code,{children:"1"}),")"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{align:"left",children:(0,n.jsx)(e.strong,{children:"Octal"})}),(0,n.jsx)(e.td,{align:"left",children:(0,n.jsx)(e.code,{children:"0o"})}),(0,n.jsxs)(e.td,{align:"left",children:["one or more numbers in the range ",(0,n.jsx)(e.code,{children:"0"})," to ",(0,n.jsx)(e.code,{children:"7"})]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{align:"left",children:(0,n.jsx)(e.strong,{children:"Hexadecimal"})}),(0,n.jsx)(e.td,{align:"left",children:(0,n.jsx)(e.code,{children:"0x"})}),(0,n.jsxs)(e.td,{align:"left",children:["one or more numbers, or characters ",(0,n.jsx)(e.code,{children:"a"})," to ",(0,n.jsx)(e.code,{children:"f"}),", lowercase or uppercase"]})]})]})]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// A decimal number",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"1234567890  ",props:{style:{color:"#B48EAD"}}},{content:"// is `1234567890`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// A binary number",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"0b101010  ",props:{style:{color:"#B48EAD"}}},{content:"// is `42`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// An octal number",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"0o12345670  ",props:{style:{color:"#B48EAD"}}},{content:"// is `2739128`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// A hexadecimal number",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"0x1234567890ABCabc  ",props:{style:{color:"#B48EAD"}}},{content:"// is `1311768467294898876`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: unsupported prefix 0z",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"0z0",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// A decimal number with leading zeros. Not an octal number!",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"00123 ",props:{style:{color:"#B48EAD"}}},{content:"// is `123`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// A binary number with several trailing zeros.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"0b001000  ",props:{style:{color:"#B48EAD"}}},{content:"// is `8`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Decimal numbers may contain underscores (",(0,n.jsx)(e.code,{children:"_"}),") to logically separate components."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" largeNumber = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1_000_000",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Value is not a number literal, but a variable.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" notNumber = _123",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Underscores are allowed for all numeral systems."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" binaryNumber = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0b10_11_01",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"integers",children:"Integers"}),"\n",(0,n.jsxs)(e.p,{children:["Integers are numbers without a fractional part.\nThey are either ",(0,n.jsx)(e.em,{children:"signed"})," (positive, zero, or negative)\nor ",(0,n.jsx)(e.em,{children:"unsigned"})," (positive or zero)."]}),"\n",(0,n.jsxs)(e.p,{children:["Signed integer types which check for overflow and underflow have an ",(0,n.jsx)(e.code,{children:"Int"})," prefix\nand can represent values in the following ranges:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Int8"})}),": -2^7 through 2^7 \u2212 1 (-128 through 127)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Int16"})}),": -2^15 through 2^15 \u2212 1 (-32768 through 32767)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Int32"})}),": -2^31 through 2^31 \u2212 1 (-2147483648 through 2147483647)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Int64"})}),": -2^63 through 2^63 \u2212 1 (-9223372036854775808 through 9223372036854775807)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Int128"})}),": -2^127 through 2^127 \u2212 1"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Int256"})}),": -2^255 through 2^255 \u2212 1"]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Unsigned integer types which check for overflow and underflow have a ",(0,n.jsx)(e.code,{children:"UInt"})," prefix\nand can represent values in the following ranges:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"UInt8"})}),": 0 through 2^8 \u2212 1 (255)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"UInt16"})}),": 0 through 2^16 \u2212 1 (65535)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"UInt32"})}),": 0 through 2^32 \u2212 1 (4294967295)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"UInt64"})}),": 0 through 2^64 \u2212 1 (18446744073709551615)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"UInt128"})}),": 0 through 2^128 \u2212 1"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"UInt256"})}),": 0 through 2^256 \u2212 1"]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Unsigned integer types which do ",(0,n.jsx)(e.strong,{children:"not"})," check for overflow and underflow,\ni.e. wrap around, have the ",(0,n.jsx)(e.code,{children:"Word"})," prefix\nand can represent values in the following ranges:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Word8"})}),": 0 through 2^8 \u2212 1 (255)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Word16"})}),": 0 through 2^16 \u2212 1 (65535)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Word32"})}),": 0 through 2^32 \u2212 1 (4294967295)"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Word64"})}),": 0 through 2^64 \u2212 1 (18446744073709551615)"]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"The types are independent types, i.e. not subtypes of each other."}),"\n",(0,n.jsxs)(e.p,{children:["See the section about ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/operators#arithmetic-operators",children:"arithmetic operators"})," for further\ninformation about the behavior of the different integer types."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant that has type `UInt8` and the value 10.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" smallNumber: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"10",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Invalid: negative literal cannot be used as an unsigned integer",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" invalidNumber: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"-10",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["In addition, the arbitrary precision integer type ",(0,n.jsx)(e.code,{children:"Int"})," is provided."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" veryLargeNumber: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"10000000000000000000000000000000",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Integer literals are ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/type-inference",children:"inferred"})," to have type ",(0,n.jsx)(e.code,{children:"Int"}),",\nor if the literal occurs in a position that expects an explicit type,\ne.g. in a variable declaration with an explicit type annotation."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someNumber = ",props:{style:{color:"#D8DEE9FF"}}},{content:"123",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `someNumber` has type `Int`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Negative integers are encoded in two's complement representation."}),"\n",(0,n.jsx)(e.p,{children:"Integer types are not converted automatically. Types must be explicitly converted,\nwhich can be done by calling the constructor of the type with the integer type."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int16",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: the types of the operands, `Int8` and `Int16` are incompatible.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" z = x ",props:{style:{color:"#D8DEE9FF"}}},{content:"+",props:{style:{color:"#81A1C1"}}},{content:" y",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Explicitly convert `x` from `Int8` to `Int16`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int16",props:{style:{color:"#88C0D0"}}},{content:"(x",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:"+",props:{style:{color:"#81A1C1"}}},{content:" y",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `a` has type `Int16`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: The integer literal is expected to be of type `Int8`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// but the large integer literal does not fit in the range of `Int8`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b = x ",props:{style:{color:"#D8DEE9FF"}}},{content:"+ ",props:{style:{color:"#81A1C1"}}},{content:"1000000000000000000000000",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h3,{id:"integer-functions",children:"Integer Functions"}),"\n",(0,n.jsx)(e.p,{children:"Integers have multiple built-in functions you can use."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Returns the string representation of the integer."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" answer = ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"answer.",props:{style:{color:"#D8DEE9FF"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:'// is "42"',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"toBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:":",props:{style:{color:"#81A1C1"}}},{content:" [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns the byte array representation (",(0,n.jsx)(e.code,{children:"[UInt8]"}),") in big-endian order of the integer."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" largeNumber = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1234567890",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"largeNumber.",props:{style:{color:"#D8DEE9FF"}}},{content:"toBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:"// is `[73, 150, 2, 210]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"All integer types support the following functions:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"T",props:{style:{color:"#88C0D0"}}},{content:".fromString",props:{style:{color:"#D8DEE9FF"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"input",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"String",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": T",props:{style:{color:"#81A1C1"}}},{content:"?",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Attempts to parse an integer value from a base-10 encoded string, returning ",(0,n.jsx)(e.code,{children:"nil"})," if the string is invalid."]}),"\n",(0,n.jsxs)(e.p,{children:["For a given integer ",(0,n.jsx)(e.code,{children:"n"})," of type ",(0,n.jsx)(e.code,{children:"T"}),", ",(0,n.jsx)(e.code,{children:"T.fromString(n.toString())"})," is equivalent to wrapping ",(0,n.jsx)(e.code,{children:"n"})," up in an ",(0,n.jsx)(e.a,{href:"#optionals",children:"optional"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"Strings are invalid if:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"they contain non-digit characters"}),"\n",(0,n.jsx)(e.li,{children:"they don't fit in the target type"}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["For signed integer types like ",(0,n.jsx)(e.code,{children:"Int64"}),", and ",(0,n.jsx)(e.code,{children:"Int"}),", the string may optionally begin with ",(0,n.jsx)(e.code,{children:"+"})," or ",(0,n.jsx)(e.code,{children:"-"})," sign prefix."]}),"\n",(0,n.jsxs)(e.p,{children:["For unsigned integer types like ",(0,n.jsx)(e.code,{children:"Word64"}),", ",(0,n.jsx)(e.code,{children:"UInt64"}),", and ",(0,n.jsx)(e.code,{children:"UInt"}),", sign prefices are not allowed."]}),"\n",(0,n.jsx)(e.p,{children:"Examples:"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" fortyTwo: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int64",props:{style:{color:"#81A1C1"}}},{content:"? = Int64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"42",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// ok",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" twenty: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt",props:{style:{color:"#81A1C1"}}},{content:"? = UInt.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"20",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// ok",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" nilWord: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Word8",props:{style:{color:"#81A1C1"}}},{content:"? = Word8.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"1024",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// nil, out of bounds",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" negTwenty: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = Int.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"-20",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// ok",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"T",props:{style:{color:"#88C0D0"}}},{content:".fromBigEndianBytes",props:{style:{color:"#D8DEE9FF"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"bytes",props:{style:{color:"#D8DEE9"}}},{content:": [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": T",props:{style:{color:"#81A1C1"}}},{content:"?",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Attempts to parse an integer value from a byte array representation (",(0,n.jsx)(e.code,{children:"[UInt8]"}),") in big-endian order, returning ",(0,n.jsx)(e.code,{children:"nil"})," if the input bytes are invalid."]}),"\n",(0,n.jsxs)(e.p,{children:["For a given integer ",(0,n.jsx)(e.code,{children:"n"})," of type ",(0,n.jsx)(e.code,{children:"T"}),", ",(0,n.jsx)(e.code,{children:"T.fromBigEndianBytes(n.toBigEndianBytes())"})," is equivalent to wrapping ",(0,n.jsx)(e.code,{children:"n"})," up in an ",(0,n.jsx)(e.a,{href:"#optionals",children:"optional"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"The bytes are invalid if:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"length of the bytes array exceeds the number of bytes needed for the target type"}),"\n",(0,n.jsx)(e.li,{children:"they don't fit in the target type"}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Examples:"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" fortyTwo: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt32",props:{style:{color:"#81A1C1"}}},{content:"? = UInt32.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:"// ok",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" twenty: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt",props:{style:{color:"#81A1C1"}}},{content:"? = UInt.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"20",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:"// ok",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" nilWord: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Word8",props:{style:{color:"#81A1C1"}}},{content:"? = Word8.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"[0, 22, 0, 0, 0, 0, 0, 0, 0]",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// nil, out of bounds",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" nilWord2: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Word8",props:{style:{color:"#81A1C1"}}},{content:"? = Word8.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"[0, 0]",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// nil, size (2) exceeds number of bytes needed for Word8 (1)",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" negativeNumber: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int64",props:{style:{color:"#81A1C1"}}},{content:"? = Int64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:"128",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:"// ok -9223372036854775807",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"fixed-point-numbers",children:"Fixed-Point Numbers"}),"\n",(0,n.jsx)(t,{type:"info",children:(0,n.jsxs)(e.p,{children:["\ud83d\udea7 Status: Currently only the 64-bit wide ",(0,n.jsx)(e.code,{children:"Fix64"})," and ",(0,n.jsx)(e.code,{children:"UFix64"})," types are available.\nMore fixed-point number types will be added in a future release."]})}),"\n",(0,n.jsx)(e.p,{children:"Fixed-point numbers are useful for representing fractional values.\nThey have a fixed number of digits after decimal point."}),"\n",(0,n.jsx)(e.p,{children:"They are essentially integers which are scaled by a factor.\nFor example, the value 1.23 can be represented as 1230 with a scaling factor of 1/1000.\nThe scaling factor is the same for all values of the same type\nand stays the same during calculations."}),"\n",(0,n.jsx)(e.p,{children:"Fixed-point numbers in Cadence have a scaling factor with a power of 10, instead of a power of 2,\ni.e. they are decimal, not binary."}),"\n",(0,n.jsxs)(e.p,{children:["Signed fixed-point number types have the prefix ",(0,n.jsx)(e.code,{children:"Fix"}),",\nhave the following factors, and can represent values in the following ranges:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"Fix64"})}),": Factor 1/100,000,000; -92233720368.54775808 through 92233720368.54775807"]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Unsigned fixed-point number types have the prefix ",(0,n.jsx)(e.code,{children:"UFix"}),",\nhave the following factors, and can represent values in the following ranges:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"UFix64"})}),": Factor 1/100,000,000; 0.0 through 184467440737.09551615"]}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"fixed-point-number-functions",children:"Fixed-Point Number Functions"}),"\n",(0,n.jsx)(e.p,{children:"Fixed-Point numbers have multiple built-in functions you can use."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Returns the string representation of the fixed-point number."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" fix = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:".",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"fix.",props:{style:{color:"#D8DEE9FF"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:'// is "1.23000000"',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"toBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:":",props:{style:{color:"#81A1C1"}}},{content:" [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns the byte array representation (",(0,n.jsx)(e.code,{children:"[UInt8]"}),") in big-endian order of the fixed-point number."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" fix = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:".",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"fix.",props:{style:{color:"#D8DEE9FF"}}},{content:"toBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:"// is `[0, 0, 0, 0, 7, 84, 212, 192]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"All fixed-point types support the following functions:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"T",props:{style:{color:"#88C0D0"}}},{content:".fromString",props:{style:{color:"#D8DEE9FF"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"input",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"String",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": T",props:{style:{color:"#81A1C1"}}},{content:"?",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Attempts to parse a fixed-point value from a base-10 encoded string, returning ",(0,n.jsx)(e.code,{children:"nil"})," if the string is invalid."]}),"\n",(0,n.jsxs)(e.p,{children:["For a given fixed-point numeral ",(0,n.jsx)(e.code,{children:"n"})," of type ",(0,n.jsx)(e.code,{children:"T"}),", ",(0,n.jsx)(e.code,{children:"T.fromString(n.toString())"})," is equivalent to wrapping ",(0,n.jsx)(e.code,{children:"n"})," up in an ",(0,n.jsx)(e.code,{children:"optional"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"Strings are invalid if:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"they contain non-digit characters."}),"\n",(0,n.jsx)(e.li,{children:"they don't fit in the target type."}),"\n",(0,n.jsx)(e.li,{children:'they\'re missing a decimal or fractional component. For example, both "0." and ".1" are invalid strings, but "0.1" is accepted.'}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["For signed types like ",(0,n.jsx)(e.code,{children:"Fix64"}),", the string may optionally begin with ",(0,n.jsx)(e.code,{children:"+"})," or ",(0,n.jsx)(e.code,{children:"-"})," sign prefix."]}),"\n",(0,n.jsxs)(e.p,{children:["For unsigned types like ",(0,n.jsx)(e.code,{children:"UFix64"}),", sign prefices are not allowed."]}),"\n",(0,n.jsx)(e.p,{children:"Examples:"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" nil1: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UFix64",props:{style:{color:"#81A1C1"}}},{content:"? = UFix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"0.",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// nil, fractional part is required",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" nil2: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UFix64",props:{style:{color:"#81A1C1"}}},{content:"? = UFix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:".1",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// nil, decimal part is required",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" smol: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UFix64",props:{style:{color:"#81A1C1"}}},{content:"? = UFix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"0.1",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// ok",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" smolString: ",props:{style:{color:"#D8DEE9FF"}}},{content:"String",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"-0.1",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" nil3: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UFix64",props:{style:{color:"#81A1C1"}}},{content:"? = UFix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(smolString",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:"// nil, unsigned types don't allow a sign prefix",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" smolFix64: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Fix64",props:{style:{color:"#81A1C1"}}},{content:"? = Fix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(smolString",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:"// ok",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"T",props:{style:{color:"#88C0D0"}}},{content:".fromBigEndianBytes",props:{style:{color:"#D8DEE9FF"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"bytes",props:{style:{color:"#D8DEE9"}}},{content:": [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": T",props:{style:{color:"#81A1C1"}}},{content:"?",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Attempts to parse an integer value from a byte array representation (",(0,n.jsx)(e.code,{children:"[UInt8]"}),") in big-endian order, returning ",(0,n.jsx)(e.code,{children:"nil"})," if the input bytes are invalid."]}),"\n",(0,n.jsxs)(e.p,{children:["For a given integer ",(0,n.jsx)(e.code,{children:"n"})," of type ",(0,n.jsx)(e.code,{children:"T"}),", ",(0,n.jsx)(e.code,{children:"T.fromBigEndianBytes(n.toBigEndianBytes())"})," is equivalent to wrapping ",(0,n.jsx)(e.code,{children:"n"})," up in an ",(0,n.jsx)(e.a,{href:"#optionals",children:"optional"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"The bytes are invalid if:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"length of the bytes array exceeds the number of bytes needed for the target type"}),"\n",(0,n.jsx)(e.li,{children:"they don't fit in the target type"}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Examples:"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" fortyTwo: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UFix64",props:{style:{color:"#81A1C1"}}},{content:"? = UFix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"250",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"86",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"234",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:"// ok, 42.0",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" nilWord: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UFix64",props:{style:{color:"#81A1C1"}}},{content:"? = UFix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"[100, 22, 0, 0, 0, 0, 0, 0, 0]",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// nil, out of bounds",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" nilWord2: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Fix64",props:{style:{color:"#81A1C1"}}},{content:"? = Fix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"[0, 22, 0, 0, 0, 0, 0, 0, 0]",props:{style:{color:"#A3BE8C"}}},{content:'") ',props:{style:{color:"#ECEFF4"}}},{content:"// // nil, size (9) exceeds number of bytes needed for Fix64 (8)",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" negativeNumber: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Fix64",props:{style:{color:"#81A1C1"}}},{content:"? = Fix64.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBigEndianBytes",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:"255",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"255",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"255",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"255",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"250",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"10",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:"// ok, -1",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"minimum-and-maximum-values",children:"Minimum and maximum values"}),"\n",(0,n.jsxs)(e.p,{children:["The minimum and maximum values for all integer and fixed-point number types are available through the fields ",(0,n.jsx)(e.code,{children:"min"})," and ",(0,n.jsx)(e.code,{children:"max"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"For example:"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" max = UInt8.max",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `max` is 255, the maximum value of the type `UInt8`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" max = UFix64.max",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `max` is 184467440737.09551615, the maximum value of the type `UFix64`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"saturation-arithmetic",children:"Saturation Arithmetic"}),"\n",(0,n.jsx)(e.p,{children:"Integers and fixed-point numbers support saturation arithmetic:\nArithmetic operations, such as addition or multiplications, are saturating at the numeric bounds instead of overflowing."}),"\n",(0,n.jsx)(e.p,{children:"If the result of an operation is greater than the maximum value of the operands' type, the maximum is returned.\nIf the result is lower than the minimum of the operands' type, the minimum is returned."}),"\n",(0,n.jsxs)(e.p,{children:["Saturating addition, subtraction, multiplication, and division are provided as functions with the prefix ",(0,n.jsx)(e.code,{children:"saturating"}),":"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"Int8"}),", ",(0,n.jsx)(e.code,{children:"Int16"}),", ",(0,n.jsx)(e.code,{children:"Int32"}),", ",(0,n.jsx)(e.code,{children:"Int64"}),", ",(0,n.jsx)(e.code,{children:"Int128"}),", ",(0,n.jsx)(e.code,{children:"Int256"}),", ",(0,n.jsx)(e.code,{children:"Fix64"}),":"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"saturatingAdd"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"saturatingSubtract"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"saturatingMultiply"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"saturatingDivide"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"Int"}),":"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"none"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"UInt8"}),", ",(0,n.jsx)(e.code,{children:"UInt16"}),", ",(0,n.jsx)(e.code,{children:"UInt32"}),", ",(0,n.jsx)(e.code,{children:"UInt64"}),", ",(0,n.jsx)(e.code,{children:"UInt128"}),", ",(0,n.jsx)(e.code,{children:"UInt256"}),", ",(0,n.jsx)(e.code,{children:"UFix64"}),":"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"saturatingAdd"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"saturatingSubtract"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"saturatingMultiply"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"UInt"}),":"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"saturatingSubtract"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"200",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"100",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" result = a.",props:{style:{color:"#D8DEE9FF"}}},{content:"saturatingAdd",props:{style:{color:"#88C0D0"}}},{content:"(b",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `result` is 255, the maximum value of the type `UInt8`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"floating-point-numbers",children:"Floating-Point Numbers"}),"\n",(0,n.jsxs)(e.p,{children:["There is ",(0,n.jsx)(e.strong,{children:"no"})," support for floating point numbers."]}),"\n",(0,n.jsx)(e.p,{children:"Smart Contracts are not intended to work with values with error margins\nand therefore floating point arithmetic is not appropriate here."}),"\n",(0,n.jsxs)(e.p,{children:["Instead, consider using ",(0,n.jsx)(e.a,{href:"#fixed-point-numbers",children:"fixed point numbers"}),"."]}),"\n",(0,n.jsx)(e.h2,{id:"addresses",children:"Addresses"}),"\n",(0,n.jsxs)(e.p,{children:["The type ",(0,n.jsx)(e.code,{children:"Address"})," represents an address.\nAddresses are unsigned integers with a size of 64 bits (8 bytes).\nHexadecimal integer literals can be used to create address values."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant that has type `Address`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someAddress: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0x436164656E636521",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Initial value is not compatible with type `Address`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// it is not a number.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" notAnAddress: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:'""',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Initial value is not compatible with type `Address`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The integer literal is valid, however, it is larger than 64 bits.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" alsoNotAnAddress: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0x436164656E63652146757265766572",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Integer literals are not inferred to be an address."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a number. Even though it happens to be a valid address,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// it is not inferred as it.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" aNumber = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0x436164656E636521",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `aNumber` has type `Int`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Address can also be created using a byte array or string."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an address with hex representation as 0x436164656E636521.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someAddress: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:" = Address.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBytes",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:"67",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"97",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"100",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"101",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"110",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"99",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"101",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"33",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Provided value is not compatible with type `Address`. The function panics.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" invalidAddress: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:" = Address.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromBytes",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"34",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"56",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"11",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"22",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"33",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"44",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"55",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"66",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"77",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"88",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"99",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"111",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// Declare an address with the string representation as "0x436164656E636521".',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" addressFromString: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:"? = Address.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"0x436164656E636521",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// Invalid: Provided value does not have the "0x" prefix. Returns Nil',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" addressFromStringWithoutPrefix: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:"? = Address.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"436164656E636521",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Provided value is an invalid hex string. Return Nil.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" invalidAddressForInvalidHex: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:"? = Address.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"0xZZZ",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Provided value is larger than 64 bits. Return Nil.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" invalidAddressForOverflow: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:"? = Address.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"0x436164656E63652146757265766572",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h3,{id:"address-functions",children:"Address Functions"}),"\n",(0,n.jsx)(e.p,{children:"Addresses have multiple built-in functions you can use."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns the string representation of the address.\nThe result has a ",(0,n.jsx)(e.code,{children:"0x"})," prefix and is zero-padded."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someAddress: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0x436164656E636521",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"someAddress.",props:{style:{color:"#D8DEE9FF"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")   ",props:{style:{color:"#ECEFF4"}}},{content:'// is "0x436164656E636521"',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" shortAddress: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0x1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"shortAddress.",props:{style:{color:"#D8DEE9FF"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:'// is "0x0000000000000001"',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"toBytes",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:":",props:{style:{color:"#81A1C1"}}},{content:" [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns the byte array representation (",(0,n.jsx)(e.code,{children:"[UInt8]"}),") of the address."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someAddress: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Address",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0x436164656E636521",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"someAddress.",props:{style:{color:"#D8DEE9FF"}}},{content:"toBytes",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:"// is `[67, 97, 100, 101, 110, 99, 101, 33]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"anystruct-and-anyresource",children:"AnyStruct and AnyResource"}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"AnyStruct"})," is the top type of all non-resource types,\ni.e., all non-resource types are a subtype of it."]}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"AnyResource"})," is the top type of all resource types."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a variable that has the type `AnyStruct`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// Any non-resource typed value can be assigned to it, for example an integer,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// but not resource-typed values.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" someStruct: ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Assign a value with a different non-resource type, `Bool`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"someStruct ",props:{style:{color:"#D8DEE9FF"}}},{content:"= true",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a structure named `TestStruct`, create an instance of it,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// and assign it to the `AnyStruct`-typed variable",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"struct",props:{style:{color:"#81A1C1"}}},{content:" TestStruct ",props:{style:{color:"#D8DEE9FF"}}},{content:"{}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" testStruct = ",props:{style:{color:"#D8DEE9FF"}}},{content:"TestStruct",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"someStruct ",props:{style:{color:"#D8DEE9FF"}}},{content:"=",props:{style:{color:"#81A1C1"}}},{content:" testStruct",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a resource named `TestResource`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"resource",props:{style:{color:"#81A1C1"}}},{content:" TestResource ",props:{style:{color:"#D8DEE9FF"}}},{content:"{}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a variable that has the type `AnyResource`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// Any resource-typed value can be assigned to it,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// but not non-resource typed values.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" someResource: @",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyResource",props:{style:{color:"#81A1C1"}}},{content:" <- ",props:{style:{color:"#D8DEE9FF"}}},{content:"create ",props:{style:{color:"#81A1C1"}}},{content:"TestResource",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Resource-typed values can not be assigned",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// to `AnyStruct`-typed variables",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"someStruct ",props:{style:{color:"#D8DEE9FF"}}},{content:"<- create ",props:{style:{color:"#81A1C1"}}},{content:"TestResource",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Non-resource typed values can not be assigned",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// to `AnyResource`-typed variables",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"someResource ",props:{style:{color:"#D8DEE9FF"}}},{content:"= ",props:{style:{color:"#81A1C1"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["However, using ",(0,n.jsx)(e.code,{children:"AnyStruct"})," and ",(0,n.jsx)(e.code,{children:"AnyResource"})," does not opt-out of type checking.\nIt is invalid to access fields and call functions on these types,\nas they have no fields and functions."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a variable that has the type `AnyStruct`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The initial value is an integer,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// but the variable still has the explicit type `AnyStruct`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Operator cannot be used for an `AnyStruct` value (`a`, left-hand side)",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// and an `Int` value (`2`, right-hand side).",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"+ ",props:{style:{color:"#81A1C1"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"AnyStruct"})," and ",(0,n.jsx)(e.code,{children:"AnyResource"})," may be used like other types,\nfor example, they may be the element type of ",(0,n.jsx)(e.a,{href:"#arrays",children:"arrays"}),"\nor be the element type of an ",(0,n.jsx)(e.a,{href:"#optionals",children:"optional type"}),"."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a variable that has the type `[AnyStruct]`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// i.e. an array of elements of any non-resource type.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" anyValues: [",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:"] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"2",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a variable that has the type `AnyStruct?`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// i.e. an optional type of any non-resource type.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" maybeSomething: ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"maybeSomething ",props:{style:{color:"#D8DEE9FF"}}},{content:"= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"twenty-four",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"maybeSomething ",props:{style:{color:"#D8DEE9FF"}}},{content:"= nil",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"AnyStruct"})," is also the super-type of all non-resource optional types,\nand ",(0,n.jsx)(e.code,{children:"AnyResource"})," is the super-type of all resource optional types."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" maybeInt: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" anything: ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:" = maybeInt",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"/docs/cadence/language/operators#conditional-downcasting-operator-as",children:"Conditional downcasting"})," allows coercing\na value which has the type ",(0,n.jsx)(e.code,{children:"AnyStruct"})," or ",(0,n.jsx)(e.code,{children:"AnyResource"})," back to its original type."]}),"\n",(0,n.jsx)(e.h2,{id:"optionals",children:"Optionals"}),"\n",(0,n.jsx)(e.p,{children:"Optionals are values which can represent the absence of a value. Optionals have two cases:\neither there is a value, or there is nothing."}),"\n",(0,n.jsxs)(e.p,{children:["An optional type is declared using the ",(0,n.jsx)(e.code,{children:"?"})," suffix for another type.\nFor example, ",(0,n.jsx)(e.code,{children:"Int"})," is a non-optional integer, and ",(0,n.jsx)(e.code,{children:"Int?"})," is an optional integer,\ni.e. either nothing, or an integer."]}),"\n",(0,n.jsxs)(e.p,{children:["The value representing nothing is ",(0,n.jsx)(e.code,{children:"nil"}),"."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant which has an optional integer type,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// with nil as its initial value.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a constant which has an optional integer type,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// with 42 as its initial value.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: `b` has type `Int?`, which does not support arithmetic.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"b ",props:{style:{color:"#D8DEE9FF"}}},{content:"+ ",props:{style:{color:"#81A1C1"}}},{content:"23",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Declare a constant with a non-optional integer type `Int`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// but the initial value is `nil`, which in this context has type `Int?`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Optionals can be created for any value, not just for literals."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant which has a non-optional integer type,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// with 1 as its initial value.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a constant which has an optional integer type.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// An optional with the value of `x` is created.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = x",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a variable which has an optional any type, i.e. the variable",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// may be `nil`, or any other value.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// An optional with the value of `x` is created.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" z: ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:"? = x",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"A non-optional type is a subtype of its optional type."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"=",props:{style:{color:"#81A1C1"}}},{content:" b",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `a` is `2`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Optional types may be contained in other types, for example ",(0,n.jsx)(e.a,{href:"#arrays",children:"arrays"})," or even optionals."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant which has an array type of optional integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" xs: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"?] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a constant which has a double optional type.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" doubleOptional: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"?? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["See the ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/operators#optional-operators",children:"optional operators"})," section for information\non how to work with optionals."]}),"\n",(0,n.jsx)(e.h2,{id:"never",children:"Never"}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"Never"})," is the bottom type, i.e., it is a subtype of all types.\nThere is no value that has type ",(0,n.jsx)(e.code,{children:"Never"}),".\n",(0,n.jsx)(e.code,{children:"Never"})," can be used as the return type for functions that never return normally.\nFor example, it is the return type of the function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/built-in-functions#panic",children:(0,n.jsx)(e.code,{children:"panic"})}),"."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a function named `crashAndBurn` which will never return,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// because it calls the function named `panic`, which never returns.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"crashAndBurn",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": Never ",props:{style:{color:"#81A1C1"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"    panic",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"An unrecoverable error occurred",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Declare a constant with a `Never` type, but the initial value is an integer.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Never",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Declare a function which returns an invalid return value `nil`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// which is not a value of type `Never`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"returnNever",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": Never ",props:{style:{color:"#81A1C1"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"    return nil",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"strings-and-characters",children:"Strings and Characters"}),"\n",(0,n.jsxs)(e.p,{children:["Strings are collections of characters.\nStrings have the type ",(0,n.jsx)(e.code,{children:"String"}),", and characters have the type ",(0,n.jsx)(e.code,{children:"Character"}),".\nStrings can be used to work with text in a Unicode-compliant way.\nStrings are immutable."]}),"\n",(0,n.jsxs)(e.p,{children:["String and character literals are enclosed in double quotation marks (",(0,n.jsx)(e.code,{children:'"'}),")."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someString = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Hello, world!",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["String literals may contain escape sequences. An escape sequence starts with a backslash (",(0,n.jsx)(e.code,{children:"\\"}),"):"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\\0"}),": Null character"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\\\\"}),": Backslash"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\\t"}),": Horizontal tab"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\\n"}),": Line feed"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\\r"}),": Carriage return"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:'\\"'}),": Double quotation mark"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\\'"}),": Single quotation mark"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\\u"}),": A Unicode scalar value, written as ",(0,n.jsx)(e.code,{children:"\\u{x}"}),",\nwhere ",(0,n.jsx)(e.code,{children:"x"})," is a 1\u20138 digit hexadecimal number\nwhich needs to be a valid Unicode scalar value,\ni.e., in the range 0 to 0xD7FF and 0xE000 to 0x10FFFF inclusive"]}),"\n"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant which contains two lines of text",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// (separated by the line feed character `\\n`), and ends",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// with a thumbs up emoji, which has code point U+1F44D (0x1F44D).",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" thumbsUpText =",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'    "',props:{style:{color:"#ECEFF4"}}},{content:"This is the first line.",props:{style:{color:"#A3BE8C"}}},{content:"\\n",props:{style:{color:"#EBCB8B"}}},{content:"This is the second line with an emoji: ",props:{style:{color:"#A3BE8C"}}},{content:"\\u{1F44D}",props:{style:{color:"#EBCB8B"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["The type ",(0,n.jsx)(e.code,{children:"Character"})," represents a single, human-readable character.\nCharacters are extended grapheme clusters,\nwhich consist of one or more Unicode scalars."]}),"\n",(0,n.jsxs)(e.p,{children:["For example, the single character ",(0,n.jsx)(e.code,{children:"\xfc"})," can be represented\nin several ways in Unicode.\nFirst, it can be represented by a single Unicode scalar value ",(0,n.jsx)(e.code,{children:"\xfc"}),'\n("LATIN SMALL LETTER U WITH DIAERESIS", code point U+00FC).\nSecond, the same single character can be represented\nby two Unicode scalar values:\n',(0,n.jsx)(e.code,{children:"u"}),' ("LATIN SMALL LETTER U", code point U+0075),\nand "COMBINING DIAERESIS" (code point U+0308).\nThe combining Unicode scalar value is applied to the scalar before it,\nwhich turns a ',(0,n.jsx)(e.code,{children:"u"})," into a ",(0,n.jsx)(e.code,{children:"\xfc"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["Still, both variants represent the same human-readable character ",(0,n.jsx)(e.code,{children:"\xfc"}),"."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" singleScalar: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Character",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"\\u{FC}",props:{style:{color:"#EBCB8B"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `singleScalar` is `\xfc`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" twoScalars: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Character",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"\\u{75}\\u{308}",props:{style:{color:"#EBCB8B"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `twoScalars` is `\xfc`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:'Another example where multiple Unicode scalar values are rendered as a single,\nhuman-readable character is a flag emoji.\nThese emojis consist of two "REGIONAL INDICATOR SYMBOL LETTER" Unicode scalar values.'}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant for a string with a single character, the emoji",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// for the Canadian flag, which consists of two Unicode scalar values:",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// - REGIONAL INDICATOR SYMBOL LETTER C (U+1F1E8)",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// - REGIONAL INDICATOR SYMBOL LETTER A (U+1F1E6)",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" canadianFlag: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Character",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"\\u{1F1E8}\\u{1F1E6}",props:{style:{color:"#EBCB8B"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `canadianFlag` is `\ud83c\udde8\ud83c\udde6`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h3,{id:"string-fields-and-functions",children:"String Fields and Functions"}),"\n",(0,n.jsx)(e.p,{children:"Strings have multiple built-in functions you can use:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" length: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Returns the number of characters in the string as an integer."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" example = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"hello",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Find the number of elements of the string.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" length = example.length",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `length` is `5`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" utf8: [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"The byte array of the UTF-8 encoding"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" flowers = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Flowers ",props:{style:{color:"#A3BE8C"}}},{content:"\\u{1F490}",props:{style:{color:"#EBCB8B"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" bytes = flowers.utf8",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `bytes` is `[70, 108, 111, 119, 101, 114, 115, 32, 240, 159, 146, 144]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"concat",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"other",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"String",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Concatenates the string ",(0,n.jsx)(e.code,{children:"other"})," to the end of the original string,\nbut does not modify the original string.\nThis function creates a new string whose length is the sum of the lengths\nof the string the function is called on and the string given as a parameter."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" example = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"hello",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" new = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"world",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Concatenate the new string onto the example string and return the new string.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" helloWorld = example.",props:{style:{color:"#D8DEE9FF"}}},{content:"concat",props:{style:{color:"#88C0D0"}}},{content:"(new",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:'// `helloWorld` is now `"helloworld"`',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"slice",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"from",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"upTo",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns a string slice of the characters\nin the given string from start index ",(0,n.jsx)(e.code,{children:"from"})," up to,\nbut not including, the end index ",(0,n.jsx)(e.code,{children:"upTo"}),".\nThis function creates a new string whose length is ",(0,n.jsx)(e.code,{children:"upTo - from"}),".\nIt does not modify the original string.\nIf either of the parameters are out of the bounds of the string,\nor the indices are invalid (",(0,n.jsx)(e.code,{children:"from > upTo"}),"), then the function will fail."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" example = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"helloworld",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Create a new slice of part of the original string.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" slice = example.",props:{style:{color:"#D8DEE9FF"}}},{content:"slice",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"from",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"upTo",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"6",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:'// `slice` is now `"low"`',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: Out of bounds index, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" outOfBounds = example.",props:{style:{color:"#D8DEE9FF"}}},{content:"slice",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"from",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"upTo",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"10",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: Invalid indices, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" invalidIndices = example.",props:{style:{color:"#D8DEE9FF"}}},{content:"slice",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"from",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"upTo",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"decodeHex",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:":",props:{style:{color:"#81A1C1"}}},{content:" [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Returns an array containing the bytes represented by the given hexadecimal string."}),"\n",(0,n.jsx)(e.p,{children:"The given string must only contain hexadecimal characters and must have an even length.\nIf the string is malformed, the program aborts"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" example = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"436164656e636521",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"example.",props:{style:{color:"#D8DEE9FF"}}},{content:"decodeHex",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:"// is `[67, 97, 100, 101, 110, 99, 101, 33]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"toLower",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Returns a string where all upper case letters are replaced with lowercase characters"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" example = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Flowers",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"example.",props:{style:{color:"#D8DEE9FF"}}},{content:"toLower",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:"// is `flowers`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["The ",(0,n.jsx)(e.code,{children:"String"})," type also provides the following functions:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"String",props:{style:{color:"#88C0D0"}}},{content:".encodeHex",props:{style:{color:"#D8DEE9FF"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"data",props:{style:{color:"#D8DEE9"}}},{content:": [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Returns a hexadecimal string for the given byte array"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" data = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:" as UInt8, ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0xCA",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"0xDE",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"String.",props:{style:{color:"#D8DEE9FF"}}},{content:"encodeHex",props:{style:{color:"#88C0D0"}}},{content:"(data",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:'// is `"010203cade"`',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"String"}),"s are also indexable, returning a ",(0,n.jsx)(e.code,{children:"Character"})," value."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" str = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" c = str[",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:'// is the Character "a"',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"String",props:{style:{color:"#88C0D0"}}},{content:".fromUTF8",props:{style:{color:"#D8DEE9FF"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"input",props:{style:{color:"#D8DEE9"}}},{content:": [",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}},{content:"?",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Attempts to convert a UTF-8 encoded byte array into a ",(0,n.jsx)(e.code,{children:"String"}),". This function returns ",(0,n.jsx)(e.code,{children:"nil"})," if the byte array contains invalid UTF-8,\nsuch as incomplete codepoint sequences or undefined graphemes."]}),"\n",(0,n.jsxs)(e.p,{children:["For a given string ",(0,n.jsx)(e.code,{children:"s"}),", ",(0,n.jsx)(e.code,{children:"String.fromUTF8(s.utf8)"})," is equivalent to wrapping ",(0,n.jsx)(e.code,{children:"s"})," up in an ",(0,n.jsx)(e.a,{href:"#optionals",children:"optional"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"character-fields-and-functions",children:"Character Fields and Functions"}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:"Character"})," values can be converted into ",(0,n.jsx)(e.code,{children:"String"})," values using the ",(0,n.jsx)(e.code,{children:"toString"})," function:"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}},{content:"`",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Returns the string representation of the character."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" c: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Character",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"x",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"c.",props:{style:{color:"#D8DEE9FF"}}},{content:"toString",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")  ",props:{style:{color:"#ECEFF4"}}},{content:'// is "x"',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"String",props:{style:{color:"#88C0D0"}}},{content:".fromCharacters",props:{style:{color:"#D8DEE9FF"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"characters",props:{style:{color:"#D8DEE9"}}},{content:": [",props:{style:{color:"#D8DEE9FF"}}},{content:"Character",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": String",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Builds a new ",(0,n.jsx)(e.code,{children:"String"})," value from an array of ",(0,n.jsx)(e.code,{children:"Character"}),"s. Because ",(0,n.jsx)(e.code,{children:"String"}),"s are immutable, this operation makes a copy of the input array."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" rawUwU: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Character",props:{style:{color:"#81A1C1"}}},{content:"] = [",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"U",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"w",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"U",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" uwu: ",props:{style:{color:"#D8DEE9FF"}}},{content:"String",props:{style:{color:"#81A1C1"}}},{content:" = String.",props:{style:{color:"#D8DEE9FF"}}},{content:"fromCharacters",props:{style:{color:"#88C0D0"}}},{content:"(rawUwU",props:{style:{color:"#D8DEE9FF"}}},{content:") ",props:{style:{color:"#ECEFF4"}}},{content:'// "UwU"',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"arrays",children:"Arrays"}),"\n",(0,n.jsxs)(e.p,{children:["Arrays are mutable, ordered collections of values.\nArrays may contain a value multiple times.\nArray literals start with an opening square bracket ",(0,n.jsx)(e.code,{children:"["})," and end with a closing square bracket ",(0,n.jsx)(e.code,{children:"]"}),"."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// An empty array",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"[]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// An array with integers",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h3,{id:"array-types",children:"Array Types"}),"\n",(0,n.jsx)(e.p,{children:"Arrays either have a fixed size or are variably sized, i.e., elements can be added and removed."}),"\n",(0,n.jsxs)(e.p,{children:["Fixed-size array types have the form ",(0,n.jsx)(e.code,{children:"[T; N]"}),", where ",(0,n.jsx)(e.code,{children:"T"})," is the element type,\nand ",(0,n.jsx)(e.code,{children:"N"})," is the size of the array. ",(0,n.jsx)(e.code,{children:"N"})," has to be statically known, meaning\nthat it needs to be an integer literal.\nFor example, a fixed-size array of 3 ",(0,n.jsx)(e.code,{children:"Int8"})," elements has the type ",(0,n.jsx)(e.code,{children:"[Int8; 3]"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["Variable-size array types have the form ",(0,n.jsx)(e.code,{children:"[T]"}),", where ",(0,n.jsx)(e.code,{children:"T"})," is the element type.\nFor example, the type ",(0,n.jsx)(e.code,{children:"[Int16]"})," specifies a variable-size array of elements that have type ",(0,n.jsx)(e.code,{children:"Int16"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["All values in an array must have a type which is a subtype of the array's element type (",(0,n.jsx)(e.code,{children:"T"}),")."]}),"\n",(0,n.jsx)(e.p,{children:"It is important to understand that arrays are value types and are only ever copied\nwhen used as an initial value for a constant or variable,\nwhen assigning to a variable,\nwhen used as function argument,\nor when returned from a function call."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" size = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"// Invalid: Array-size must be an integer literal",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"; ",props:{style:{color:"#D8DEE9FF"}}},{content:"size",props:{style:{color:"#81A1C1"}}},{content:"] = []",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a fixed-sized array of integers",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// which always contains exactly two elements.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" array: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int8",props:{style:{color:"#81A1C1"}}},{content:"; 2] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a fixed-sized array of fixed-sized arrays of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The inner arrays always contain exactly three elements,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// the outer array always contains two elements.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" arrays: [[",props:{style:{color:"#D8DEE9FF"}}},{content:"Int16",props:{style:{color:"#81A1C1"}}},{content:"; 3]; 2] = [",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:"],",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    [",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"5",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"6",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a variable length array of integers",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" variableLengthArray: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"] = []",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Mixing values with different types is possible",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// by declaring the expected array type",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// with the common supertype of all values.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" mixedValues: [",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:"] = [",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"some string",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Array types are covariant in their element types.\nFor example, ",(0,n.jsx)(e.code,{children:"[Int]"})," is a subtype of ",(0,n.jsx)(e.code,{children:"[AnyStruct]"}),".\nThis is safe because arrays are value types and not reference types."]}),"\n",(0,n.jsx)(e.h3,{id:"array-indexing",children:"Array Indexing"}),"\n",(0,n.jsxs)(e.p,{children:["To get the element of an array at a specific index, the indexing syntax can be used:\nThe array is followed by an opening square bracket ",(0,n.jsx)(e.code,{children:"["}),", the indexing value,\nand ends with a closing square bracket ",(0,n.jsx)(e.code,{children:"]"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"Indexes start at 0 for the first element in the array."}),"\n",(0,n.jsx)(e.p,{children:"Accessing an element which is out of bounds results in a fatal error at run-time\nand aborts the program."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Get the first number of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers[",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `42`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Get the second number of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `23`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: Index 2 is out of bounds, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers[",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of arrays of integers, i.e. the type is `[[Int]]`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" arrays = [[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"], [",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:"]]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Get the first number of the second array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"arrays[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"][",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `3`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"To set an element of an array at a specific index, the indexing syntax can be used as well."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Change the second number in the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// NOTE: The declaration `numbers` is constant, which means that",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// the *name* is constant, not the *value* \u2013 the value, i.e. the array,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// is mutable and can be changed.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"= ",props:{style:{color:"#81A1C1"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `numbers` is `[42, 2]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h3,{id:"array-fields-and-functions",children:"Array Fields and Functions"}),"\n",(0,n.jsx)(e.p,{children:"Arrays have multiple built-in fields and functions\nthat can be used to get information about and manipulate the contents of the array."}),"\n",(0,n.jsxs)(e.p,{children:["The field ",(0,n.jsx)(e.code,{children:"length"}),", and the functions ",(0,n.jsx)(e.code,{children:"concat"}),", and ",(0,n.jsx)(e.code,{children:"contains"}),"\nare available for both variable-sized and fixed-sized or variable-sized arrays."]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" length: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"The number of elements in the array."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Find the number of elements of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" length = numbers.length",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `length` is `4`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"concat",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"array",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"T",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": T",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Concatenates the parameter ",(0,n.jsx)(e.code,{children:"array"})," to the end\nof the array the function is called on,\nbut does not modify that array."]}),"\n",(0,n.jsxs)(e.p,{children:["Both arrays must be the same type ",(0,n.jsx)(e.code,{children:"T"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"This function creates a new array whose length is the sum of the length of the array\nthe function is called on and the length of the array given as the parameter."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare two arrays of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" moreNumbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"11",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"27",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Concatenate the array `moreNumbers` to the array `numbers`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// and declare a new variable for the result.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" allNumbers = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"concat",props:{style:{color:"#88C0D0"}}},{content:"(moreNumbers",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `allNumbers` is `[42, 23, 31, 12, 11, 27]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// `numbers` is still `[42, 23, 31, 12]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// `moreNumbers` is still `[11, 27]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"contains",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"element",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"T",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": Bool",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns true if the given element of type ",(0,n.jsx)(e.code,{children:"T"})," is in the array."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Check if the array contains 11.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" containsEleven = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"contains",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"11",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `containsEleven` is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Check if the array contains 12.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" containsTwelve = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"contains",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `containsTwelve` is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// Invalid: Check if the array contains the string "Kitty".',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// This results in a type error, as the array only contains integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" containsKitty = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"contains",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Kitty",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"firstIndex",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"of",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"T",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": Int",props:{style:{color:"#81A1C1"}}},{content:"?",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns the index of the first element matching the given object in the array, nil if no match.\nAvailable if ",(0,n.jsx)(e.code,{children:"T"})," is not resource-kinded and equatable."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:" // Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:" let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:" // Check if the array contains 31",props:{style:{color:"#616E88"}}}]},{tokens:[{content:" let",props:{style:{color:"#81A1C1"}}},{content:" index = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"firstIndex",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"of",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:" // `index` is 2",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:" // Check if the array contains 22",props:{style:{color:"#616E88"}}}]},{tokens:[{content:" let",props:{style:{color:"#81A1C1"}}},{content:" index = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"firstIndex",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"of",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"22",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:" // `index` is nil",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"slice",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"from",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"upTo",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:":",props:{style:{color:"#81A1C1"}}},{content:" [",props:{style:{color:"#D8DEE9FF"}}},{content:"T",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns an array slice of the elements\nin the given array from start index ",(0,n.jsx)(e.code,{children:"from"})," up to,\nbut not including, the end index ",(0,n.jsx)(e.code,{children:"upTo"}),".\nThis function creates a new array whose length is ",(0,n.jsx)(e.code,{children:"upTo - from"}),".\nIt does not modify the original array.\nIf either of the parameters are out of the bounds of the array,\nor the indices are invalid (",(0,n.jsx)(e.code,{children:"from > upTo"}),"), then the function will fail."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" example = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Create a new slice of part of the original array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" slice = example.",props:{style:{color:"#D8DEE9FF"}}},{content:"slice",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"from",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"upTo",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `slice` is now `[2, 3]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: Out of bounds index, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" outOfBounds = example.",props:{style:{color:"#D8DEE9FF"}}},{content:"slice",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"from",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"upTo",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"10",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: Invalid indices, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" invalidIndices = example.",props:{style:{color:"#D8DEE9FF"}}},{content:"slice",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"from",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"upTo",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h4,{id:"variable-size-array-functions",children:"Variable-size Array Functions"}),"\n",(0,n.jsx)(e.p,{children:"The following functions can only be used on variable-sized arrays.\nIt is invalid to use one of these functions on a fixed-sized array."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"append",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"element",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"T",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": Void",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Adds the new element ",(0,n.jsx)(e.code,{children:"element"})," of type ",(0,n.jsx)(e.code,{children:"T"})," to the end of the array."]}),"\n",(0,n.jsx)(e.p,{children:"The new element must be the same type as all the other elements in the array."}),"\n",(0,n.jsxs)(e.p,{children:["This function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/access-control",children:"mutates"})," the array."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Add a new element to the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"append",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"20",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `numbers` is now `[42, 23, 31, 12, 20]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: The parameter has the wrong type `String`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"append",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"SneakyString",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"appendAll",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"array",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"T",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": Void",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Adds all the elements from ",(0,n.jsx)(e.code,{children:"array"})," to the end of the array\nthe function is called on."]}),"\n",(0,n.jsxs)(e.p,{children:["Both arrays must be the same type ",(0,n.jsx)(e.code,{children:"T"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["This function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/access-control",children:"mutates"})," the array."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Add new elements to the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"appendAll",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"20",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `numbers` is now `[42, 23, 31, 12, 20]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: The parameter has the wrong type `[String]`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"appendAll",props:{style:{color:"#88C0D0"}}},{content:"([",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Sneaky",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"String",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"insert",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"at",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"element",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"T",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": Void",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Inserts the new element ",(0,n.jsx)(e.code,{children:"element"})," of type ",(0,n.jsx)(e.code,{children:"T"}),"\nat the given ",(0,n.jsx)(e.code,{children:"index"})," of the array."]}),"\n",(0,n.jsx)(e.p,{children:"The new element must be of the same type as the other elements in the array."}),"\n",(0,n.jsxs)(e.p,{children:["The ",(0,n.jsx)(e.code,{children:"index"})," must be within the bounds of the array.\nIf the index is outside the bounds, the program aborts."]}),"\n",(0,n.jsx)(e.p,{children:"The existing element at the supplied index is not overwritten."}),"\n",(0,n.jsx)(e.p,{children:"All the elements after the new inserted element\nare shifted to the right by one."}),"\n",(0,n.jsxs)(e.p,{children:["This function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/access-control",children:"mutates"})," the array."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Insert a new element at position 1 of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"insert",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"at",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"20",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `numbers` is now `[42, 20, 23, 31, 12]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: Out of bounds index, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"insert",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"at",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"12",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"39",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"remove",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"at",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": T",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Removes the element at the given ",(0,n.jsx)(e.code,{children:"index"})," from the array and returns it."]}),"\n",(0,n.jsxs)(e.p,{children:["The ",(0,n.jsx)(e.code,{children:"index"})," must be within the bounds of the array.\nIf the index is outside the bounds, the program aborts."]}),"\n",(0,n.jsxs)(e.p,{children:["This function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/access-control",children:"mutates"})," the array."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"31",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Remove element at position 1 of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" twentyThree = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"remove",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"at",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `numbers` is now `[42, 31]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// `twentyThree` is `23`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: Out of bounds index, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"remove",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"at",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#ECEFF4"}}},{content:"19",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"removeFirst",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": T",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Removes the first element from the array and returns it."}),"\n",(0,n.jsx)(e.p,{children:"The array must not be empty.\nIf the array is empty, the program aborts."}),"\n",(0,n.jsxs)(e.p,{children:["This function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/access-control",children:"mutates"})," the array."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Remove the first element of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" fortytwo = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"removeFirst",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `numbers` is now `[23]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// `fortywo` is `42`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Remove the first element of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" twentyThree = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"removeFirst",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `numbers` is now `[]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// `twentyThree` is `23`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: The array is empty, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"removeFirst",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"removeLast",props:{style:{color:"#88C0D0"}}},{content:"()",props:{style:{color:"#ECEFF4"}}},{content:": T",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Removes the last element from the array and returns it."}),"\n",(0,n.jsx)(e.p,{children:"The array must not be empty.\nIf the array is empty, the program aborts."}),"\n",(0,n.jsxs)(e.p,{children:["This function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/access-control",children:"mutates"})," the array."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Remove the last element of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" twentyThree = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"removeLast",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `numbers` is now `[42]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// `twentyThree` is `23`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Remove the last element of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" fortyTwo = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"removeLast",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `numbers` is now `[]`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// `fortyTwo` is `42`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: The array is empty, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"removeLast",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"dictionaries",children:"Dictionaries"}),"\n",(0,n.jsx)(e.p,{children:"Dictionaries are mutable, unordered collections of key-value associations.\nDictionaries may contain a key only once\nand may contain a value multiple times."}),"\n",(0,n.jsxs)(e.p,{children:["Dictionary literals start with an opening brace ",(0,n.jsx)(e.code,{children:"{"}),"\nand end with a closing brace ",(0,n.jsx)(e.code,{children:"}"}),".\nKeys are separated from values by a colon,\nand key-value associations are separated by commas."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// An empty dictionary",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"{}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// A dictionary which associates integers with booleans",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"    1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}},{content:",",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    2",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"false",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h3,{id:"dictionary-types",children:"Dictionary Types"}),"\n",(0,n.jsxs)(e.p,{children:["Dictionary types have the form ",(0,n.jsx)(e.code,{children:"{K: V}"}),",\nwhere ",(0,n.jsx)(e.code,{children:"K"})," is the type of the key,\nand ",(0,n.jsx)(e.code,{children:"V"})," is the type of the value.\nFor example, a dictionary with ",(0,n.jsx)(e.code,{children:"Int"})," keys and ",(0,n.jsx)(e.code,{children:"Bool"}),"\nvalues has type ",(0,n.jsx)(e.code,{children:"{Int: Bool}"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["In a dictionary, all keys must have a type that is a subtype of the dictionary's key type (",(0,n.jsx)(e.code,{children:"K"}),")\nand all values must have a type that is a subtype of the dictionary's value type (",(0,n.jsx)(e.code,{children:"V"}),")."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant that has type `{Int: Bool}`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// a dictionary mapping integers to booleans.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" booleans = ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"    1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}},{content:",",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    0",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"false",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a constant that has type `{Bool: Int}`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// a dictionary mapping booleans to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" integers = ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"    true",props:{style:{color:"#81A1C1"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:",",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    false",props:{style:{color:"#81A1C1"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Mixing keys with different types, and mixing values with different types,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// is possible by declaring the expected dictionary type with the common supertype",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// of all keys, and the common supertype of all values.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" mixedValues: {",props:{style:{color:"#D8DEE9FF"}}},{content:"String",props:{style:{color:"#81A1C1"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:"} = ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:'    "',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:",",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'    "',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Dictionary types are covariant in their key and value types.\nFor example, ",(0,n.jsx)(e.code,{children:"{Int: String}"})," is a subtype of ",(0,n.jsx)(e.code,{children:"{AnyStruct: String}"}),"\nand also a subtype of ",(0,n.jsx)(e.code,{children:"{Int: AnyStruct}"}),".\nThis is safe because dictionaries are value types and not reference types."]}),"\n",(0,n.jsx)(e.h3,{id:"dictionary-access",children:"Dictionary Access"}),"\n",(0,n.jsxs)(e.p,{children:["To get the value for a specific key from a dictionary,\nthe access syntax can be used:\nThe dictionary is followed by an opening square bracket ",(0,n.jsx)(e.code,{children:"["}),", the key,\nand ends with a closing square bracket ",(0,n.jsx)(e.code,{children:"]"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["Accessing a key returns an ",(0,n.jsx)(e.a,{href:"#optionals",children:"optional"}),":\nIf the key is found in the dictionary, the value for the given key is returned,\nand if the key is not found, ",(0,n.jsx)(e.code,{children:"nil"})," is returned."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant that has type `{Int: Bool}`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// a dictionary mapping integers to booleans.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" booleans = ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"    1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}},{content:",",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    0",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"false",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// The result of accessing a key has type `Bool?`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"booleans[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"]  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"booleans[",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"]  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"booleans[",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"]  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `nil`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Accessing a key which does not have type `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"booleans[",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant that has type `{Bool: Int}`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// a dictionary mapping booleans to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" integers = ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"    true",props:{style:{color:"#81A1C1"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:",",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    false",props:{style:{color:"#81A1C1"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// The result of accessing a key has type `Int?`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"integers[",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `1`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"integers[",props:{style:{color:"#D8DEE9FF"}}},{content:"false",props:{style:{color:"#81A1C1"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `0`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"To set the value for a key of a dictionary,\nthe access syntax can be used as well."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant that has type `{Int: Bool}`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// a dictionary mapping booleans to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" booleans = ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"    1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}},{content:",",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    0",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"false",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Assign new values for the keys `1` and `0`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"booleans[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"= false",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"booleans[",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"= true",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"// `booleans` is `{1: false, 0: true}`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h3,{id:"dictionary-fields-and-functions",children:"Dictionary Fields and Functions"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" length: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"The number of entries in the dictionary."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a dictionary mapping strings to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"fortyTwo",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"twentyThree",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Find the number of entries of the dictionary.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" length = numbers.length",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `length` is `2`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"insert",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"key",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"K",props:{style:{color:"#81A1C1"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"value",props:{style:{color:"#D8DEE9"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"V",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": V",props:{style:{color:"#81A1C1"}}},{content:"?",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Inserts the given value of type ",(0,n.jsx)(e.code,{children:"V"})," into the dictionary under the given ",(0,n.jsx)(e.code,{children:"key"})," of type ",(0,n.jsx)(e.code,{children:"K"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"The inserted key must have the same type as the dictionary's key type, and the inserted value must have the same type as the dictionary's value type."}),"\n",(0,n.jsxs)(e.p,{children:["Returns the previous value as an optional\nif the dictionary contained the key,\notherwise ",(0,n.jsx)(e.code,{children:"nil"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"Updates the value if the dictionary already contained the key."}),"\n",(0,n.jsxs)(e.p,{children:["This function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/access-control",children:"mutates"})," the dictionary."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a dictionary mapping strings to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"twentyThree",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// Insert the key `"fortyTwo"` with the value `42` into the dictionary.',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The key did not previously exist in the dictionary,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// so the result is `nil`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" old = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"insert",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"key",props:{style:{color:"#88C0D0"}}},{content:': "',props:{style:{color:"#ECEFF4"}}},{content:"fortyTwo",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `old` is `nil`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:'// `numbers` is `{"twentyThree": 23, "fortyTwo": 42}`',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"remove",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"key",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"K",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": V",props:{style:{color:"#81A1C1"}}},{content:"?",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Removes the value for the given ",(0,n.jsx)(e.code,{children:"key"})," of type ",(0,n.jsx)(e.code,{children:"K"})," from the dictionary."]}),"\n",(0,n.jsxs)(e.p,{children:["Returns the value of type ",(0,n.jsx)(e.code,{children:"V"})," as an optional\nif the dictionary contained the key,\notherwise ",(0,n.jsx)(e.code,{children:"nil"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["This function ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/access-control",children:"mutates"})," the dictionary."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a dictionary mapping strings to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"fortyTwo",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"twentyThree",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// Remove the key `"fortyTwo"` from the dictionary.',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The key exists in the dictionary,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// so the value associated with the key is returned.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" fortyTwo = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"remove",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"key",props:{style:{color:"#88C0D0"}}},{content:': "',props:{style:{color:"#ECEFF4"}}},{content:"fortyTwo",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `fortyTwo` is `42`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:'// `numbers` is `{"twentyThree": 23}`',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// Remove the key `"oneHundred"` from the dictionary.',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The key does not exist in the dictionary, so `nil` is returned.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" oneHundred = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"remove",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"key",props:{style:{color:"#88C0D0"}}},{content:': "',props:{style:{color:"#ECEFF4"}}},{content:"oneHundred",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `oneHundred` is `nil`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:'// `numbers` is `{"twentyThree": 23}`',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" keys: [",props:{style:{color:"#D8DEE9FF"}}},{content:"K",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns an array of the keys of type ",(0,n.jsx)(e.code,{children:"K"})," in the dictionary. This does not\nmodify the dictionary, just returns a copy of the keys as an array.\nIf the dictionary is empty, this returns an empty array. The ordering of the keys is undefined."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a dictionary mapping strings to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"fortyTwo",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"twentyThree",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Find the keys of the dictionary.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" keys = numbers.keys",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// `keys` has type `[String]` and is `["fortyTwo","twentyThree"]`',props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" values: [",props:{style:{color:"#D8DEE9FF"}}},{content:"V",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns an array of the values of type ",(0,n.jsx)(e.code,{children:"V"})," in the dictionary. This does not\nmodify the dictionary, just returns a copy of the values as an array.\nIf the dictionary is empty, this returns an empty array."]}),"\n",(0,n.jsxs)(e.p,{children:["This field is not available if ",(0,n.jsx)(e.code,{children:"V"})," is a resource type."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a dictionary mapping strings to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"fortyTwo",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"twentyThree",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Find the values of the dictionary.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" values = numbers.values",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `values` has type [Int] and is `[42, 23]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"containsKey",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"key",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"K",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": Bool",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Returns true if the given key of type ",(0,n.jsx)(e.code,{children:"K"})," is in the dictionary."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a dictionary mapping strings to integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"fortyTwo",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"twentyThree",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"23",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// Check if the dictionary contains the key "twentyFive".',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" containsKeyTwentyFive = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"containsKey",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"twentyFive",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `containsKeyTwentyFive` is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'// Check if the dictionary contains the key "fortyTwo".',props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" containsKeyFortyTwo = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"containsKey",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"fortyTwo",props:{style:{color:"#A3BE8C"}}},{content:'")',props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"// `containsKeyFortyTwo` is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Check if the dictionary contains the key 42.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// This results in a type error, as the key type of the dictionary is `String`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" containsKey42 = numbers.",props:{style:{color:"#D8DEE9FF"}}},{content:"containsKey",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"42",props:{style:{color:"#B48EAD"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"forEachKey",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"_ ",props:{style:{color:"#88C0D0"}}},{content:"function",props:{style:{color:"#D8DEE9"}}},{content:": ((",props:{style:{color:"#D8DEE9FF"}}},{content:"K",props:{style:{color:"#81A1C1"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": Bool",props:{style:{color:"#81A1C1"}}},{content:")): ",props:{style:{color:"#D8DEE9FF"}}},{content:"Void",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Iterate through all the keys in the dictionary, exiting early if the passed function returns false.\nThis is more efficient than calling ",(0,n.jsx)(e.code,{children:".keys"})," and iterating over the resulting array, since an intermediate allocation is avoided.\nThe order of key iteration is undefined, similar to ",(0,n.jsx)(e.code,{children:".keys"}),"."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Take in a targetKey to look for, and a dictionary to iterate through.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"fun ",props:{style:{color:"#81A1C1"}}},{content:"myContainsKey",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#ECEFF4"}}},{content:"targetKey",props:{style:{color:"#88C0D0"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"String",props:{style:{color:"#81A1C1"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"dictionary",props:{style:{color:"#88C0D0"}}},{content:": {",props:{style:{color:"#D8DEE9FF"}}},{content:"String",props:{style:{color:"#81A1C1"}}},{content:": ",props:{style:{color:"#D8DEE9"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"}",props:{style:{color:"#D8DEE9FF"}}},{content:") {",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"  // Declare an accumulator that we'll capture inside a closure.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"  var",props:{style:{color:"#81A1C1"}}},{content:" found = ",props:{style:{color:"#D8DEE9FF"}}},{content:"false",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"  // At each step, `key` will be bound to another key from `dictionary`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"  dictionary.",props:{style:{color:"#D8DEE9FF"}}},{content:"forEachKey",props:{style:{color:"#88C0D0"}}},{content:"(",props:{style:{color:"#D8DEE9FF"}}},{content:"fun",props:{style:{color:"#88C0D0"}}},{content:" (",props:{style:{color:"#D8DEE9FF"}}},{content:"key",props:{style:{color:"#88C0D0"}}},{content:":",props:{style:{color:"#ECEFF4"}}},{content:" String",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}},{content:": Bool {",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    found ",props:{style:{color:"#D8DEE9FF"}}},{content:"=",props:{style:{color:"#81A1C1"}}},{content:" key ",props:{style:{color:"#D8DEE9FF"}}},{content:"==",props:{style:{color:"#81A1C1"}}},{content:" targetKey",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"    // The returned boolean value, signals whether to continue iterating.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"    // This allows for control flow during the iteration process:",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"    //  true = `continue`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"    //  false = `break`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"    return ",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}},{content:"found",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"  }",props:{style:{color:"#D8DEE9FF"}}},{content:")",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"  return",props:{style:{color:"#81A1C1"}}},{content:" found",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"dictionary-keys",children:"Dictionary Keys"}),"\n",(0,n.jsx)(e.p,{children:"Dictionary keys must be hashable and equatable."}),"\n",(0,n.jsx)(e.p,{children:"Most of the built-in types, like booleans and integers,\nare hashable and equatable, so can be used as keys in dictionaries."})]})}const F=function(o){void 0===o&&(o={});const{wrapper:e}=Object.assign({},(0,s.ah)(),o.components);return e?(0,n.jsx)(e,Object.assign({},o,{children:(0,n.jsx)(E,o)})):E(o)};function h(o,e){throw new Error("Expected "+(e?"component":"object")+" `"+o+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);