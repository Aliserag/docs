"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[69868],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,u=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),d=s(n),m=l,k=d["".concat(u,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,o=new Array(i);o[0]=m;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r[d]="string"==typeof e?e:l,o[1]=r;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46979:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>s});var a=n(87462),l=(n(67294),n(3905));const i={title:"Build a Transaction with the Flow CLI",sidebar_title:"Build a Transaction",description:"How to build a Flow transaction from the command line"},o=void 0,r={unversionedId:"tools/flow-cli/build-transactions",id:"version-legacy/tools/flow-cli/build-transactions",title:"Build a Transaction with the Flow CLI",description:"How to build a Flow transaction from the command line",source:"@site/versioned_docs/version-legacy/tools/flow-cli/build-transactions.md",sourceDirName:"tools/flow-cli",slug:"/tools/flow-cli/build-transactions",permalink:"/docs/tools/flow-cli/build-transactions",draft:!1,tags:[],version:"legacy",lastUpdatedBy:"Alex",lastUpdatedAt:1682971554,formattedLastUpdatedAt:"May 1, 2023",frontMatter:{title:"Build a Transaction with the Flow CLI",sidebar_title:"Build a Transaction",description:"How to build a Flow transaction from the command line"},sidebar:"tutorialSidebar",previous:{title:"Update a Contract with the Flow CLI",permalink:"/docs/tools/flow-cli/account-update-contract"},next:{title:"Send Complex Transaction with the Flow CLI",permalink:"/docs/tools/flow-cli/complex-transactions"}},u={},s=[{value:"Example Usage",id:"example-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Code Filename",id:"code-filename",level:3},{value:"Arguments",id:"arguments-1",level:3},{value:"Flags",id:"flags",level:2},{value:"Payer",id:"payer",level:3},{value:"Proposer",id:"proposer",level:3},{value:"Proposer Key Index",id:"proposer-key-index",level:3},{value:"Authorizer",id:"authorizer",level:3},{value:"Arguments JSON",id:"arguments-json",level:3},{value:"Gas Limit",id:"gas-limit",level:3},{value:"Host",id:"host",level:3},{value:"Network Key",id:"network-key",level:3},{value:"Network",id:"network",level:3},{value:"Include Fields",id:"include-fields",level:3},{value:"Filter",id:"filter",level:3},{value:"Output",id:"output",level:3},{value:"Save",id:"save",level:3},{value:"Log",id:"log",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Version Check",id:"version-check",level:3}],p={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,l.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The Flow CLI provides a command to build a transactions with options to specify\nauthorizer accounts, payer account and proposer account. "),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"build")," command doesn't produce any signatures and instead\nis designed to be used with the ",(0,l.kt)("inlineCode",{parentName:"p"},"sign")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"send-signed")," commands. "),(0,l.kt)("p",null,"Use this functionality in the following order:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Use this command (",(0,l.kt)("inlineCode",{parentName:"li"},"build"),") to build the transaction."),(0,l.kt)("li",{parentName:"ol"},"Use the ",(0,l.kt)("inlineCode",{parentName:"li"},"sign")," command to sign with each account specified in the build process."),(0,l.kt)("li",{parentName:"ol"},"Use the ",(0,l.kt)("inlineCode",{parentName:"li"},"send-signed")," command to submit the signed transaction to the Flow network.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"flow transactions build <code filename> [<argument> <argument>...] [flags]\n")),(0,l.kt)("h2",{id:"example-usage"},"Example Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'> flow transactions build ./transaction.cdc "Meow" \\\n  --authorizer alice \\\n  --proposer bob \\\n  --payer charlie \\\n  --filter payload --save built.rlp\n\nID      e8c0a69952fbe50a66703985e220307c8d44b8fa36c76cbca03f8c43d0167847\nPayer       e03daebed8ca0615\nAuthorizers [f3fcd2c1a78f5eee]\n\nProposal Key:   \n    Address 179b6b1cb6755e31\n    Index   0\n    Sequence    1\n\nNo Payload Signatures\n\nNo Envelope Signatures\n\n\nArguments (1):\n    - Argument 0: {"type":"String","value":"Meow"}\n\n\nCode\n\ntransaction(greeting: String) {\n  let guest: Address\n\n  prepare(authorizer: AuthAccount) {\n    self.guest = authorizer.address\n  }\n\n  execute {\n    log(greeting.concat(",").concat(self.guest.toString()))\n  }\n}\n\n\nPayload:\nf9013df90138b8d17472616e...73616374696f6e286eeec0c0\n')),(0,l.kt)("p",null,"JSON arguments from a file example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'> flow transactions build tx1.cdc --args-json "$(cat args.json)"\n')),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("h3",{id:"code-filename"},"Code Filename"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Name: ",(0,l.kt)("inlineCode",{parentName:"li"},"filename")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: Any filename and path valid on the system.")),(0,l.kt)("p",null,"The first argument is a path to a Cadence file containing the\ntransaction to be executed."),(0,l.kt)("h3",{id:"arguments-1"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Name: ",(0,l.kt)("inlineCode",{parentName:"li"},"argument")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: valid ",(0,l.kt)("a",{parentName:"li",href:"https://docs.onflow.org/cadence/json-cadence-spec/"},"cadence values"),"\nmatching argument type in transaction code.")),(0,l.kt)("p",null,"Input arguments values matching corresponding types in the source code and passed in the same order.\nFor passing complex argument values see ",(0,l.kt)("a",{parentName:"p",href:"/docs/tools/flow-cli/send-transactions#example-usage"},"send transaction")," document. "),(0,l.kt)("h2",{id:"flags"},"Flags"),(0,l.kt)("h3",{id:"payer"},"Payer"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--payer")),(0,l.kt)("li",{parentName:"ul"},"Valid Inputs: Flow address or account name from configuration."),(0,l.kt)("li",{parentName:"ul"},"Default: service account")),(0,l.kt)("p",null,"Specify account address that will be paying for the transaction.\nRead more about payers ",(0,l.kt)("a",{parentName:"p",href:"https://docs.onflow.org/concepts/accounts-and-keys/"},"here"),"."),(0,l.kt)("h3",{id:"proposer"},"Proposer"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--proposer")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: Flow address or account name from configuration."),(0,l.kt)("li",{parentName:"ul"},"Default: service account")),(0,l.kt)("p",null,"Specify a name of the account that is proposing the transaction.\nAccount must be defined in flow configuration."),(0,l.kt)("h3",{id:"proposer-key-index"},"Proposer Key Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--proposer-key-index")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: number of existing key index"),(0,l.kt)("li",{parentName:"ul"},"Default: 0")),(0,l.kt)("p",null,"Specify key index for the proposer account."),(0,l.kt)("h3",{id:"authorizer"},"Authorizer"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--authorizer")),(0,l.kt)("li",{parentName:"ul"},"Valid Inputs: Flow address or account name from configuration."),(0,l.kt)("li",{parentName:"ul"},"Default: service account")),(0,l.kt)("p",null,"Additional authorizer addresses to add to the transaction.\nRead more about authorizers ",(0,l.kt)("a",{parentName:"p",href:"https://docs.onflow.org/concepts/accounts-and-keys/"},"here"),"."),(0,l.kt)("h3",{id:"arguments-json"},"Arguments JSON"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--args-json")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: arguments in JSON-Cadence form."),(0,l.kt)("li",{parentName:"ul"},"Example: ",(0,l.kt)("inlineCode",{parentName:"li"},'flow transactions build ./tx.cdc \'[{"type": "String", "value": "Hello World"}]\''))),(0,l.kt)("p",null,"Arguments passed to the Cadence transaction in Cadence JSON format.\nCadence JSON format contains ",(0,l.kt)("inlineCode",{parentName:"p"},"type")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," keys and is\n",(0,l.kt)("a",{parentName:"p",href:"https://docs.onflow.org/cadence/json-cadence-spec/"},"documented here"),"."),(0,l.kt)("h3",{id:"gas-limit"},"Gas Limit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--gas-limit")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: an integer greater than zero."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"1000"))),(0,l.kt)("p",null,"Specify the gas limit for this transaction."),(0,l.kt)("h3",{id:"host"},"Host"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--host")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: an IP address or hostname."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"127.0.0.1:3569")," (Flow Emulator)")),(0,l.kt)("p",null,"Specify the hostname of the Access API that will be\nused to execute the commands."),(0,l.kt)("h3",{id:"network-key"},"Network Key"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--network-key")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: A valid network public key of the host in hex string format")),(0,l.kt)("p",null,"Specify the network public key of the Access API that will be\nused to create a secure GRPC client when executing the command."),(0,l.kt)("h3",{id:"network"},"Network"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--network")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-n")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: the name of a network defined in the configuration (",(0,l.kt)("inlineCode",{parentName:"li"},"flow.json"),")"),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"emulator"))),(0,l.kt)("p",null,"Specify which network you want the command to use for execution."),(0,l.kt)("h3",{id:"include-fields"},"Include Fields"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--include")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"code"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"payload"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"signatures"))),(0,l.kt)("p",null,"Specify fields to include in the result output. Applies only to the text output."),(0,l.kt)("h3",{id:"filter"},"Filter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--filter")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-x")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: case-sensitive name of the result property.")),(0,l.kt)("p",null,"Specify any property name from the result you want to return as the only value."),(0,l.kt)("h3",{id:"output"},"Output"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--output")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-o")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"inline"))),(0,l.kt)("p",null,"Specify in which format you want to display the result."),(0,l.kt)("h3",{id:"save"},"Save"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--save")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-s")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: valid filename")),(0,l.kt)("p",null,"Specify the filename where you want the result to be saved."),(0,l.kt)("h3",{id:"log"},"Log"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--log")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-l")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"none"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"debug")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"info"))),(0,l.kt)("p",null,"Specify the log level. Control how much output you want to see while command execution."),(0,l.kt)("h3",{id:"configuration"},"Configuration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--config-path")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-f")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: valid filename")),(0,l.kt)("p",null,"Specify a filename for the configuration files, you can provide multiple configuration\nfiles by using ",(0,l.kt)("inlineCode",{parentName:"p"},"-f")," flag multiple times."),(0,l.kt)("h3",{id:"version-check"},"Version Check"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--skip-version-check")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)("p",null,"Skip version check during start up to speed up process for slow connections."))}c.isMDXComponent=!0}}]);