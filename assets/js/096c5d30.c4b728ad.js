"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5886],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=u(n),d=l,f=s["".concat(p,".").concat(d)]||s[d]||m[d]||r;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},22380:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(87462),l=(n(67294),n(3905));const r={title:"Create Flow app from scaffold",sidebar_title:"Create App",description:"How to create a Flow app with recommended structure"},i=void 0,o={unversionedId:"Tooling/flow-cli/project-app",id:"Tooling/flow-cli/project-app",title:"Create Flow app from scaffold",description:"How to create a Flow app with recommended structure",source:"@site/docs/Tooling/flow-cli/project-app.md",sourceDirName:"Tooling/flow-cli",slug:"/Tooling/flow-cli/project-app",permalink:"/docs/Tooling/flow-cli/project-app",draft:!1,tags:[],version:"current",lastUpdatedBy:"Alex",lastUpdatedAt:1683063625,formattedLastUpdatedAt:"May 2, 2023",frontMatter:{title:"Create Flow app from scaffold",sidebar_title:"Create App",description:"How to create a Flow app with recommended structure"},sidebar:"tutorialSidebar",previous:{title:"Manage Flow Configuration",permalink:"/docs/Tooling/flow-cli/manage-configuration"},next:{title:"Add Contracts to a Flow Project",permalink:"/docs/Tooling/flow-cli/project-contracts"}},p={},u=[{value:"Example Usage",id:"example-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Path",id:"path",level:3},{value:"Flags",id:"flags",level:2},{value:"Filter",id:"filter",level:3},{value:"Output",id:"output",level:3},{value:"Save",id:"save",level:3},{value:"Log",id:"log",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Version Check",id:"version-check",level:3}],c={toc:u},s="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(s,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The Flow CLI provides a command to create an app from examples\nand templates."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"flow app create\n")),(0,l.kt)("h2",{id:"example-usage"},"Example Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"> flow app create my-app\n\n\u2714 Example\n\u2714 kitty-items\nEnumerating objects: 5632, done.\nCounting objects: 100% (1342/1342), done.\nCompressing objects: 100% (692/692), done.\nTotal 5632 (delta 768), reused 708 (delta 649), pack-reused 4290\n\nCreated  /Users/dapper/Dev/flyinglimao/flow-cli/test4\nExample  kitty-items\n\n")),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("h3",{id:"path"},"Path"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Name: ",(0,l.kt)("inlineCode",{parentName:"li"},"path")),(0,l.kt)("li",{parentName:"ul"},"Valid Input: Path")),(0,l.kt)("p",null,"A relative path to the app location. Can be a new folder name or existing empty folder.",(0,l.kt)("br",{parentName:"p"}),"\n","You can start with a fully featured example or a custom template."),(0,l.kt)("p",null,"If you choose example, we will automatically clone a project for you from the list of possible examples: (may not up-to-date):"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kitty-items"),": An app based on CryptoKitties. (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/onflow/kitty-items"},"Repo"),")")),(0,l.kt)("p",null,"If you start with a template, three folders will be generated for you ",(0,l.kt)("inlineCode",{parentName:"p"},"api"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"cadence"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"web"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"api"),": A place to put your files implementing the backend functionality."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cadence"),": Cadence contracts, transactions and scripts should be located in this folder."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"web"),": Save your frontend files in this folder. You can use ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/onflow/fcl-js"},"fcl.js")," to implement a frontend.")),(0,l.kt)("h2",{id:"flags"},"Flags"),(0,l.kt)("h3",{id:"filter"},"Filter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--filter")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-x")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: a case-sensitive name of the result property.")),(0,l.kt)("p",null,"Specify any property name from the result you want to return as the only value."),(0,l.kt)("h3",{id:"output"},"Output"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--output")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-o")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"inline"))),(0,l.kt)("p",null,"Specify the format of the command results."),(0,l.kt)("h3",{id:"save"},"Save"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--save")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-s")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem.")),(0,l.kt)("p",null,"Specify the filename where you want the result to be saved"),(0,l.kt)("h3",{id:"log"},"Log"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--log")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-l")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"none"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"debug")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"info"))),(0,l.kt)("p",null,"Specify the log level. Control how much output you want to see during command execution."),(0,l.kt)("h3",{id:"configuration"},"Configuration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--config-path")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-f")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"flow.json"))),(0,l.kt)("p",null,"Specify the path to the ",(0,l.kt)("inlineCode",{parentName:"p"},"flow.json")," configuration file.\nYou can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"-f")," flag multiple times to merge\nseveral configuration files."),(0,l.kt)("h3",{id:"version-check"},"Version Check"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--skip-version-check")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)("p",null,"Skip version check during start up to speed up process for slow connections."))}m.isMDXComponent=!0}}]);