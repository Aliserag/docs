"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1956],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),f=o,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||a;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2192:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={},c="Scripts",i={unversionedId:"tools/fcl-js/reference/scripts",id:"tools/fcl-js/reference/scripts",title:"Scripts",description:"Scripts let you run non-permanent Cadence scripts on the Flow blockchain. They can return data.",source:"@site/docs/tools/fcl-js/reference/scripts.mdx",sourceDirName:"tools/fcl-js/reference",slug:"/tools/fcl-js/reference/scripts",permalink:"/docs/tools/fcl-js/reference/scripts",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682709940,formattedLastUpdatedAt:"Apr 28, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Proving Ownership of a Flow Account",permalink:"/docs/tools/fcl-js/reference/proving-authentication"},next:{title:"sdk-guidelines",permalink:"/docs/tools/fcl-js/reference/sdk-guidelines"}},s={},l=[{value:"Sending your first Script",id:"sending-your-first-script",level:3},{value:"A more complicated Script",id:"a-more-complicated-script",level:3},{value:"Transforming the data we get back with custom decoders.",id:"transforming-the-data-we-get-back-with-custom-decoders",level:3}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"scripts"},"Scripts"),(0,o.kt)("p",null,"Scripts let you run non-permanent Cadence scripts on the Flow blockchain. They can return data."),(0,o.kt)("p",null,"They always need to contain a ",(0,o.kt)("inlineCode",{parentName:"p"},"pub fun main()")," function as an entry point to the script."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"fcl.query")," is a function that sends Cadence scripts to the chain and receives back decoded responses."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"cadence")," key inside the object sent to the ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," function is a ",(0,o.kt)("a",{parentName:"p",href:"https://styled-components.com/docs/advanced#tagged-template-literals"},"JavaScript Tagged Template Literal")," that we can pass Cadence code into."),(0,o.kt)("h3",{id:"sending-your-first-script"},"Sending your first Script"),(0,o.kt)("p",null,"In the following code snippet we are going to send a script to the Flow blockchain.\nThe script is going to add two numbers, and return them."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import * as fcl from "@onflow/fcl"\n\nconst response = await fcl.query({\n  cadence: `\n    pub fun main(): Int {\n      return 1 + 2\n    }\n  `\n})\n\nconsole.log(response) // 3\n')),(0,o.kt)("h3",{id:"a-more-complicated-script"},"A more complicated Script"),(0,o.kt)("p",null,"Things like ",(0,o.kt)("a",{parentName:"p",href:"https://docs.onflow.org/docs/cadence#resources"},"Resources")," and ",(0,o.kt)("a",{parentName:"p",href:"https://docs.onflow.org/docs/cadence#structures"},"Structs")," are fairly common place in Cadence."),(0,o.kt)("p",null,"In the following code snippet, our script defines a struct called ",(0,o.kt)("inlineCode",{parentName:"p"},"Point"),", it then returns a list of them."),(0,o.kt)("p",null,"The closest thing to a Structure in JavaScript is an object. In this case when we decode this response, we would be expecting to get back an array of objects, where the objects have an ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," value."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import * as fcl from "@onflow/fcl"\n\nconst response = await fcl.query({\n  cadence: `\n    pub struct Point {\n      pub var x: Int\n      pub var y: Int\n\n      init(x: Int, y: Int) {\n        self.x = x\n        self.y = y\n      }\n    }\n\n    pub fun main(): [Point] {\n      return [Point(x: 1, y: 1), Point(x: 2, y: 2)]\n    }\n  `\n})\n\nconsole.log(response) // [{x:1, y:1}, {x:2, y:2}]\n')),(0,o.kt)("h3",{id:"transforming-the-data-we-get-back-with-custom-decoders"},"Transforming the data we get back with custom decoders."),(0,o.kt)("p",null,"In our dapp, we probably have a way of representing these Cadence values internally. In the above example it might be a ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," class."),(0,o.kt)("p",null,"FCL enables us to provide custom decoders that we can use to transform the data we receive from the Flow blockchain at the edge, before anything else in our dapp gets a chance to look at it."),(0,o.kt)("p",null,"We add these custom decoders by ",(0,o.kt)("a",{parentName:"p",href:"/docs/tools/fcl-js/reference/configure-fcl"},"Configuring FCL"),".\nThis lets us set it once when our dapp starts up and use our normalized data through out the rest of our dapp."),(0,o.kt)("p",null,"In the below example we will use the concept of a ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," again, but this time, we will add a custom decoder, that enables ",(0,o.kt)("inlineCode",{parentName:"p"},"fcl.decode")," to transform it into a custom JavaScript ",(0,o.kt)("inlineCode",{parentName:"p"},"Point")," class."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import * as fcl from "@onflow/fcl"\n\nclass Point {\n  constructor({ x, y }) {\n    this.x = x\n    this.y = y\n  }\n}\n\nfcl.config()\n  .put("decoder.Point", point => new Point(point))\n\nconst response = await fcl.query({\n  cadence: `\n    pub struct Point {\n      pub var x: Int\n      pub var y: Int\n\n      init(x: Int, y: Int) {\n        self.x = x\n        self.y = y\n      }\n    }\n\n    pub fun main(): [Point] {\n      return [Point(x: 1, y: 1), Point(x: 2, y: 2)]\n    }\n  `\n})\n\nconsole.log(response) // [Point{x:1, y:1}, Point{x:2, y:2}]\n')),(0,o.kt)("p",null,"To learn more about ",(0,o.kt)("inlineCode",{parentName:"p"},"query"),", check out the ",(0,o.kt)("a",{parentName:"p",href:"/docs/tools/fcl-js/reference/api#query"},"API documentation"),"."))}d.isMDXComponent=!0}}]);