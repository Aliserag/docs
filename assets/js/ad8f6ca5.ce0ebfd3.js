"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[91959],{62653:(o,e,t)=>{t.r(e),t.d(e,{CH:()=>d,assets:()=>a,chCodeConfig:()=>y,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>p,toc:()=>i});t(67294);var n=t(85893),s=t(11151),r=t(59794);const c={title:"Operators",sidebar_position:5},l=void 0,p={unversionedId:"cadence/language/operators",id:"version-stable/cadence/language/operators",title:"Operators",description:"Operators are special symbols that perform a computation",source:"@site/versioned_docs/version-stable/cadence/language/operators.md",sourceDirName:"cadence/language",slug:"/cadence/language/operators",permalink:"/docs/cadence/language/operators",draft:!1,editUrl:"https://github.com/onflow/docs/tree/main/docs/cadence/language/operators.md",tags:[],version:"stable",lastUpdatedBy:"Alex",lastUpdatedAt:1693250206,formattedLastUpdatedAt:"Aug 28, 2023",sidebarPosition:5,frontMatter:{title:"Operators",sidebar_position:5},sidebar:"cadence",previous:{title:"Values and Types",permalink:"/docs/cadence/language/values-and-types"},next:{title:"Functions",permalink:"/docs/cadence/language/functions"}},a={},i=[{value:"Assignment Operator (<code>=</code>)",id:"assignment-operator-",level:2},{value:"Force-assignment operator (<code>&lt;-!</code>)",id:"force-assignment-operator--",level:2},{value:"Swapping Operator (<code>&lt;-&gt;</code>)",id:"swapping-operator--",level:2},{value:"Arithmetic Operators",id:"arithmetic-operators",level:2},{value:"Arithmetics on number super-types",id:"arithmetics-on-number-super-types",level:3},{value:"Logical Operators",id:"logical-operators",level:2},{value:"Comparison Operators",id:"comparison-operators",level:2},{value:"Comparing number super-types",id:"comparing-number-super-types",level:3},{value:"Bitwise Operators",id:"bitwise-operators",level:2},{value:"Bitwise Shifting Operators",id:"bitwise-shifting-operators",level:3},{value:"Ternary Conditional Operator",id:"ternary-conditional-operator",level:2},{value:"Casting Operators",id:"casting-operators",level:2},{value:"Static Casting Operator (<code>as</code>)",id:"static-casting-operator-as",level:3},{value:"Conditional Downcasting Operator (<code>as?</code>)",id:"conditional-downcasting-operator-as",level:3},{value:"Force-downcasting Operator (<code>as!</code>)",id:"force-downcasting-operator-as",level:3},{value:"Optional Operators",id:"optional-operators",level:2},{value:"Nil-Coalescing Operator (<code>??</code>)",id:"nil-coalescing-operator-",level:3},{value:"Force Unwrap Operator (<code>!</code>)",id:"force-unwrap-operator-",level:3},{value:"Precedence and Associativity",id:"precedence-and-associativity",level:2}],d={annotations:r.ds,Code:r.EK},y={staticMediaQuery:"not screen, (max-width: 768px)",theme:{name:"nord",type:"dark",semanticHighlighting:!0,colors:{focusBorder:"#3b4252",foreground:"#d8dee9","activityBar.background":"#2e3440","activityBar.dropBackground":"#3b4252","activityBar.foreground":"#d8dee9","activityBar.activeBorder":"#88c0d0","activityBar.activeBackground":"#3b4252","activityBarBadge.background":"#88c0d0","activityBarBadge.foreground":"#2e3440","badge.foreground":"#2e3440","badge.background":"#88c0d0","button.background":"#88c0d0ee","button.foreground":"#2e3440","button.hoverBackground":"#88c0d0","button.secondaryBackground":"#434c5e","button.secondaryForeground":"#d8dee9","button.secondaryHoverBackground":"#4c566a","charts.red":"#bf616a","charts.blue":"#81a1c1","charts.yellow":"#ebcb8b","charts.orange":"#d08770","charts.green":"#a3be8c","charts.purple":"#b48ead","charts.foreground":"#d8dee9","charts.lines":"#88c0d0","debugConsole.infoForeground":"#88c0d0","debugConsole.warningForeground":"#ebcb8b","debugConsole.errorForeground":"#bf616a","debugConsole.sourceForeground":"#616e88","debugConsoleInputIcon.foreground":"#81a1c1","debugExceptionWidget.background":"#4c566a","debugExceptionWidget.border":"#2e3440","debugToolBar.background":"#3b4252",descriptionForeground:"#d8dee9e6","diffEditor.insertedTextBackground":"#81a1c133","diffEditor.removedTextBackground":"#bf616a4d","dropdown.background":"#3b4252","dropdown.border":"#3b4252","dropdown.foreground":"#d8dee9","editorActiveLineNumber.foreground":"#d8dee9cc","editorCursor.foreground":"#d8dee9","editorHint.border":"#ebcb8b00","editorHint.foreground":"#ebcb8b","editorIndentGuide.background":"#434c5eb3","editorIndentGuide.activeBackground":"#4c566a","editorInlayHint.background":"#434c5e","editorInlayHint.foreground":"#d8dee9","editorLineNumber.foreground":"#4c566a","editorLineNumber.activeForeground":"#d8dee9","editorWhitespace.foreground":"#4c566ab3","editorWidget.background":"#2e3440","editorWidget.border":"#3b4252","editor.background":"#2e3440","editor.foreground":"#d8dee9","editor.hoverHighlightBackground":"#3b4252","editor.findMatchBackground":"#88c0d066","editor.findMatchHighlightBackground":"#88c0d033","editor.findRangeHighlightBackground":"#88c0d033","editor.lineHighlightBackground":"#3b4252","editor.lineHighlightBorder":"#3b4252","editor.inactiveSelectionBackground":"#434c5ecc","editor.inlineValuesBackground":"#4c566a","editor.inlineValuesForeground":"#eceff4","editor.selectionBackground":"#434c5ecc","editor.selectionHighlightBackground":"#434c5ecc","editor.rangeHighlightBackground":"#434c5e52","editor.wordHighlightBackground":"#81a1c166","editor.wordHighlightStrongBackground":"#81a1c199","editor.stackFrameHighlightBackground":"#5e81ac","editor.focusedStackFrameHighlightBackground":"#5e81ac","editorError.foreground":"#bf616a","editorError.border":"#bf616a00","editorWarning.foreground":"#ebcb8b","editorWarning.border":"#ebcb8b00","editorBracketMatch.background":"#2e344000","editorBracketMatch.border":"#88c0d0","editorBracketHighlight.foreground1":"#8fbcbb","editorBracketHighlight.foreground2":"#88c0d0","editorBracketHighlight.foreground3":"#81a1c1","editorBracketHighlight.foreground4":"#5e81ac","editorBracketHighlight.foreground5":"#8fbcbb","editorBracketHighlight.foreground6":"#88c0d0","editorBracketHighlight.unexpectedBracket.foreground":"#bf616a","editorCodeLens.foreground":"#4c566a","editorGroup.background":"#2e3440","editorGroup.border":"#3b425201","editorGroup.dropBackground":"#3b425299","editorGroupHeader.border":"#3b425200","editorGroupHeader.noTabsBackground":"#2e3440","editorGroupHeader.tabsBackground":"#2e3440","editorGroupHeader.tabsBorder":"#3b425200","editorGutter.background":"#2e3440","editorGutter.modifiedBackground":"#ebcb8b","editorGutter.addedBackground":"#a3be8c","editorGutter.deletedBackground":"#bf616a","editorHoverWidget.background":"#3b4252","editorHoverWidget.border":"#3b4252","editorLink.activeForeground":"#88c0d0","editorMarkerNavigation.background":"#5e81acc0","editorMarkerNavigationError.background":"#bf616ac0","editorMarkerNavigationWarning.background":"#ebcb8bc0","editorOverviewRuler.border":"#3b4252","editorOverviewRuler.currentContentForeground":"#3b4252","editorOverviewRuler.incomingContentForeground":"#3b4252","editorOverviewRuler.findMatchForeground":"#88c0d066","editorOverviewRuler.rangeHighlightForeground":"#88c0d066","editorOverviewRuler.selectionHighlightForeground":"#88c0d066","editorOverviewRuler.wordHighlightForeground":"#88c0d066","editorOverviewRuler.wordHighlightStrongForeground":"#88c0d066","editorOverviewRuler.modifiedForeground":"#ebcb8b","editorOverviewRuler.addedForeground":"#a3be8c","editorOverviewRuler.deletedForeground":"#bf616a","editorOverviewRuler.errorForeground":"#bf616a","editorOverviewRuler.warningForeground":"#ebcb8b","editorOverviewRuler.infoForeground":"#81a1c1","editorRuler.foreground":"#434c5e","editorSuggestWidget.background":"#2e3440","editorSuggestWidget.border":"#3b4252","editorSuggestWidget.foreground":"#d8dee9","editorSuggestWidget.focusHighlightForeground":"#88c0d0","editorSuggestWidget.highlightForeground":"#88c0d0","editorSuggestWidget.selectedBackground":"#434c5e","editorSuggestWidget.selectedForeground":"#d8dee9","extensionButton.prominentForeground":"#d8dee9","extensionButton.prominentBackground":"#434c5e","extensionButton.prominentHoverBackground":"#4c566a",errorForeground:"#bf616a","gitDecoration.modifiedResourceForeground":"#ebcb8b","gitDecoration.deletedResourceForeground":"#bf616a","gitDecoration.untrackedResourceForeground":"#a3be8c","gitDecoration.ignoredResourceForeground":"#d8dee966","gitDecoration.conflictingResourceForeground":"#5e81ac","gitDecoration.submoduleResourceForeground":"#8fbcbb","gitDecoration.stageDeletedResourceForeground":"#bf616a","gitDecoration.stageModifiedResourceForeground":"#ebcb8b","input.background":"#3b4252","input.foreground":"#d8dee9","input.placeholderForeground":"#d8dee999","input.border":"#3b4252","inputOption.activeBackground":"#5e81ac","inputOption.activeBorder":"#5e81ac","inputOption.activeForeground":"#eceff4","inputValidation.errorBackground":"#bf616a","inputValidation.errorBorder":"#bf616a","inputValidation.infoBackground":"#81a1c1","inputValidation.infoBorder":"#81a1c1","inputValidation.warningBackground":"#d08770","inputValidation.warningBorder":"#d08770","keybindingLabel.background":"#4c566a","keybindingLabel.border":"#4c566a","keybindingLabel.bottomBorder":"#4c566a","keybindingLabel.foreground":"#d8dee9","list.activeSelectionBackground":"#88c0d0","list.activeSelectionForeground":"#2e3440","list.inactiveSelectionBackground":"#434c5e","list.inactiveSelectionForeground":"#d8dee9","list.inactiveFocusBackground":"#434c5ecc","list.hoverForeground":"#eceff4","list.focusForeground":"#d8dee9","list.focusBackground":"#88c0d099","list.focusHighlightForeground":"#eceff4","list.hoverBackground":"#3b4252","list.dropBackground":"#88c0d099","list.highlightForeground":"#88c0d0","list.errorForeground":"#bf616a","list.warningForeground":"#ebcb8b","merge.currentHeaderBackground":"#81a1c166","merge.currentContentBackground":"#81a1c14d","merge.incomingHeaderBackground":"#8fbcbb66","merge.incomingContentBackground":"#8fbcbb4d","merge.border":"#3b425200","minimap.background":"#2e3440","minimap.errorHighlight":"#bf616acc","minimap.findMatchHighlight":"#88c0d0","minimap.selectionHighlight":"#88c0d0cc","minimap.warningHighlight":"#ebcb8bcc","minimapGutter.addedBackground":"#a3be8c","minimapGutter.deletedBackground":"#bf616a","minimapGutter.modifiedBackground":"#ebcb8b","minimapSlider.activeBackground":"#434c5eaa","minimapSlider.background":"#434c5e99","minimapSlider.hoverBackground":"#434c5eaa","notification.background":"#3b4252","notification.buttonBackground":"#434c5e","notification.buttonForeground":"#d8dee9","notification.buttonHoverBackground":"#4c566a","notification.errorBackground":"#bf616a","notification.errorForeground":"#2e3440","notification.foreground":"#d8dee9","notification.infoBackground":"#88c0d0","notification.infoForeground":"#2e3440","notification.warningBackground":"#ebcb8b","notification.warningForeground":"#2e3440","notificationCenter.border":"#3b425200","notificationCenterHeader.background":"#2e3440","notificationCenterHeader.foreground":"#88c0d0","notificationLink.foreground":"#88c0d0","notifications.background":"#3b4252","notifications.border":"#2e3440","notifications.foreground":"#d8dee9","notificationToast.border":"#3b425200","panel.background":"#2e3440","panel.border":"#3b4252","panelTitle.activeBorder":"#88c0d000","panelTitle.activeForeground":"#88c0d0","panelTitle.inactiveForeground":"#d8dee9","peekView.border":"#4c566a","peekViewEditor.background":"#2e3440","peekViewEditorGutter.background":"#2e3440","peekViewEditor.matchHighlightBackground":"#88c0d04d","peekViewResult.background":"#2e3440","peekViewResult.fileForeground":"#88c0d0","peekViewResult.lineForeground":"#d8dee966","peekViewResult.matchHighlightBackground":"#88c0d0cc","peekViewResult.selectionBackground":"#434c5e","peekViewResult.selectionForeground":"#d8dee9","peekViewTitle.background":"#3b4252","peekViewTitleDescription.foreground":"#d8dee9","peekViewTitleLabel.foreground":"#88c0d0","pickerGroup.border":"#3b4252","pickerGroup.foreground":"#88c0d0","progressBar.background":"#88c0d0","quickInputList.focusBackground":"#88c0d0","quickInputList.focusForeground":"#2e3440","sash.hoverBorder":"#88c0d0","scrollbar.shadow":"#00000066","scrollbarSlider.activeBackground":"#434c5eaa","scrollbarSlider.background":"#434c5e99","scrollbarSlider.hoverBackground":"#434c5eaa","selection.background":"#88c0d099","sideBar.background":"#2e3440","sideBar.foreground":"#d8dee9","sideBar.border":"#3b4252","sideBarSectionHeader.background":"#3b4252","sideBarSectionHeader.foreground":"#d8dee9","sideBarTitle.foreground":"#d8dee9","statusBar.background":"#3b4252","statusBar.debuggingBackground":"#5e81ac","statusBar.debuggingForeground":"#d8dee9","statusBar.noFolderForeground":"#d8dee9","statusBar.noFolderBackground":"#3b4252","statusBar.foreground":"#d8dee9","statusBarItem.activeBackground":"#4c566a","statusBarItem.hoverBackground":"#434c5e","statusBarItem.prominentBackground":"#3b4252","statusBarItem.prominentHoverBackground":"#434c5e","statusBarItem.errorBackground":"#3b4252","statusBarItem.errorForeground":"#bf616a","statusBarItem.warningBackground":"#ebcb8b","statusBarItem.warningForeground":"#2e3440","statusBar.border":"#3b425200","tab.activeBackground":"#3b4252","tab.activeForeground":"#d8dee9","tab.border":"#3b425200","tab.activeBorder":"#88c0d000","tab.unfocusedActiveBorder":"#88c0d000","tab.inactiveBackground":"#2e3440","tab.inactiveForeground":"#d8dee966","tab.unfocusedActiveForeground":"#d8dee999","tab.unfocusedInactiveForeground":"#d8dee966","tab.hoverBackground":"#3b4252cc","tab.unfocusedHoverBackground":"#3b4252b3","tab.hoverBorder":"#88c0d000","tab.unfocusedHoverBorder":"#88c0d000","tab.activeBorderTop":"#88c0d000","tab.unfocusedActiveBorderTop":"#88c0d000","tab.lastPinnedBorder":"#4c566a","terminal.background":"#2e3440","terminal.foreground":"#d8dee9","terminal.ansiBlack":"#3b4252","terminal.ansiRed":"#bf616a","terminal.ansiGreen":"#a3be8c","terminal.ansiYellow":"#ebcb8b","terminal.ansiBlue":"#81a1c1","terminal.ansiMagenta":"#b48ead","terminal.ansiCyan":"#88c0d0","terminal.ansiWhite":"#e5e9f0","terminal.ansiBrightBlack":"#4c566a","terminal.ansiBrightRed":"#bf616a","terminal.ansiBrightGreen":"#a3be8c","terminal.ansiBrightYellow":"#ebcb8b","terminal.ansiBrightBlue":"#81a1c1","terminal.ansiBrightMagenta":"#b48ead","terminal.ansiBrightCyan":"#8fbcbb","terminal.ansiBrightWhite":"#eceff4","terminal.tab.activeBorder":"#88c0d0","textBlockQuote.background":"#3b4252","textBlockQuote.border":"#81a1c1","textCodeBlock.background":"#4c566a","textLink.activeForeground":"#88c0d0","textLink.foreground":"#88c0d0","textPreformat.foreground":"#8fbcbb","textSeparator.foreground":"#eceff4","titleBar.activeBackground":"#2e3440","titleBar.activeForeground":"#d8dee9","titleBar.border":"#2e344000","titleBar.inactiveBackground":"#2e3440","titleBar.inactiveForeground":"#d8dee966","tree.indentGuidesStroke":"#616e88","walkThrough.embeddedEditorBackground":"#2e3440","welcomePage.buttonBackground":"#434c5e","welcomePage.buttonHoverBackground":"#4c566a","widget.shadow":"#00000066"},tokenColors:[{settings:{foreground:"#d8dee9ff",background:"#2e3440ff"}},{scope:"emphasis",settings:{fontStyle:"italic"}},{scope:"strong",settings:{fontStyle:"bold"}},{name:"Comment",scope:"comment",settings:{foreground:"#616E88"}},{name:"Constant Character",scope:"constant.character",settings:{foreground:"#EBCB8B"}},{name:"Constant Character Escape",scope:"constant.character.escape",settings:{foreground:"#EBCB8B"}},{name:"Constant Language",scope:"constant.language",settings:{foreground:"#81A1C1"}},{name:"Constant Numeric",scope:"constant.numeric",settings:{foreground:"#B48EAD"}},{name:"Constant Regexp",scope:"constant.regexp",settings:{foreground:"#EBCB8B"}},{name:"Entity Name Class/Type",scope:["entity.name.class","entity.name.type.class"],settings:{foreground:"#8FBCBB"}},{name:"Entity Name Function",scope:"entity.name.function",settings:{foreground:"#88C0D0"}},{name:"Entity Name Tag",scope:"entity.name.tag",settings:{foreground:"#81A1C1"}},{name:"Entity Other Attribute Name",scope:"entity.other.attribute-name",settings:{foreground:"#8FBCBB"}},{name:"Entity Other Inherited Class",scope:"entity.other.inherited-class",settings:{fontStyle:"bold",foreground:"#8FBCBB"}},{name:"Invalid Deprecated",scope:"invalid.deprecated",settings:{foreground:"#D8DEE9",background:"#EBCB8B"}},{name:"Invalid Illegal",scope:"invalid.illegal",settings:{foreground:"#D8DEE9",background:"#BF616A"}},{name:"Keyword",scope:"keyword",settings:{foreground:"#81A1C1"}},{name:"Keyword Operator",scope:"keyword.operator",settings:{foreground:"#81A1C1"}},{name:"Keyword Other New",scope:"keyword.other.new",settings:{foreground:"#81A1C1"}},{name:"Markup Bold",scope:"markup.bold",settings:{fontStyle:"bold"}},{name:"Markup Changed",scope:"markup.changed",settings:{foreground:"#EBCB8B"}},{name:"Markup Deleted",scope:"markup.deleted",settings:{foreground:"#BF616A"}},{name:"Markup Inserted",scope:"markup.inserted",settings:{foreground:"#A3BE8C"}},{name:"Meta Preprocessor",scope:"meta.preprocessor",settings:{foreground:"#5E81AC"}},{name:"Punctuation",scope:"punctuation",settings:{foreground:"#ECEFF4"}},{name:"Punctuation Definition Parameters",scope:["punctuation.definition.method-parameters","punctuation.definition.function-parameters","punctuation.definition.parameters"],settings:{foreground:"#ECEFF4"}},{name:"Punctuation Definition Tag",scope:"punctuation.definition.tag",settings:{foreground:"#81A1C1"}},{name:"Punctuation Definition Comment",scope:["punctuation.definition.comment","punctuation.end.definition.comment","punctuation.start.definition.comment"],settings:{foreground:"#616E88"}},{name:"Punctuation Section",scope:"punctuation.section",settings:{foreground:"#ECEFF4"}},{name:"Punctuation Section Embedded",scope:["punctuation.section.embedded.begin","punctuation.section.embedded.end"],settings:{foreground:"#81A1C1"}},{name:"Punctuation Terminator",scope:"punctuation.terminator",settings:{foreground:"#81A1C1"}},{name:"Punctuation Variable",scope:"punctuation.definition.variable",settings:{foreground:"#81A1C1"}},{name:"Storage",scope:"storage",settings:{foreground:"#81A1C1"}},{name:"String",scope:"string",settings:{foreground:"#A3BE8C"}},{name:"String Regexp",scope:"string.regexp",settings:{foreground:"#EBCB8B"}},{name:"Support Class",scope:"support.class",settings:{foreground:"#8FBCBB"}},{name:"Support Constant",scope:"support.constant",settings:{foreground:"#81A1C1"}},{name:"Support Function",scope:"support.function",settings:{foreground:"#88C0D0"}},{name:"Support Function Construct",scope:"support.function.construct",settings:{foreground:"#81A1C1"}},{name:"Support Type",scope:"support.type",settings:{foreground:"#8FBCBB"}},{name:"Support Type Exception",scope:"support.type.exception",settings:{foreground:"#8FBCBB"}},{name:"Token Debug",scope:"token.debug-token",settings:{foreground:"#b48ead"}},{name:"Token Error",scope:"token.error-token",settings:{foreground:"#bf616a"}},{name:"Token Info",scope:"token.info-token",settings:{foreground:"#88c0d0"}},{name:"Token Warning",scope:"token.warn-token",settings:{foreground:"#ebcb8b"}},{name:"Variable",scope:"variable.other",settings:{foreground:"#D8DEE9"}},{name:"Variable Language",scope:"variable.language",settings:{foreground:"#81A1C1"}},{name:"Variable Parameter",scope:"variable.parameter",settings:{foreground:"#D8DEE9"}},{name:"[C/CPP] Punctuation Separator Pointer-Access",scope:"punctuation.separator.pointer-access.c",settings:{foreground:"#81A1C1"}},{name:"[C/CPP] Meta Preprocessor Include",scope:["source.c meta.preprocessor.include","source.c string.quoted.other.lt-gt.include"],settings:{foreground:"#8FBCBB"}},{name:"[C/CPP] Conditional Directive",scope:["source.cpp keyword.control.directive.conditional","source.cpp punctuation.definition.directive","source.c keyword.control.directive.conditional","source.c punctuation.definition.directive"],settings:{foreground:"#5E81AC",fontStyle:"bold"}},{name:"[CSS] Constant Other Color RGB Value",scope:"source.css constant.other.color.rgb-value",settings:{foreground:"#B48EAD"}},{name:"[CSS](Function) Meta Property-Value",scope:"source.css meta.property-value",settings:{foreground:"#88C0D0"}},{name:"[CSS] Media Queries",scope:["source.css keyword.control.at-rule.media","source.css keyword.control.at-rule.media punctuation.definition.keyword"],settings:{foreground:"#D08770"}},{name:"[CSS] Punctuation Definition Keyword",scope:"source.css punctuation.definition.keyword",settings:{foreground:"#81A1C1"}},{name:"[CSS] Support Type Property Name",scope:"source.css support.type.property-name",settings:{foreground:"#D8DEE9"}},{name:"[diff] Meta Range Context",scope:"source.diff meta.diff.range.context",settings:{foreground:"#8FBCBB"}},{name:"[diff] Meta Header From-File",scope:"source.diff meta.diff.header.from-file",settings:{foreground:"#8FBCBB"}},{name:"[diff] Punctuation Definition From-File",scope:"source.diff punctuation.definition.from-file",settings:{foreground:"#8FBCBB"}},{name:"[diff] Punctuation Definition Range",scope:"source.diff punctuation.definition.range",settings:{foreground:"#8FBCBB"}},{name:"[diff] Punctuation Definition Separator",scope:"source.diff punctuation.definition.separator",settings:{foreground:"#81A1C1"}},{name:"[Elixir](JakeBecker.elixir-ls) module names",scope:"entity.name.type.module.elixir",settings:{foreground:"#8FBCBB"}},{name:"[Elixir](JakeBecker.elixir-ls) module attributes",scope:"variable.other.readwrite.module.elixir",settings:{foreground:"#D8DEE9",fontStyle:"bold"}},{name:"[Elixir](JakeBecker.elixir-ls) atoms",scope:"constant.other.symbol.elixir",settings:{foreground:"#D8DEE9",fontStyle:"bold"}},{name:"[Elixir](JakeBecker.elixir-ls) modules",scope:"variable.other.constant.elixir",settings:{foreground:"#8FBCBB"}},{name:"[Go] String Format Placeholder",scope:"source.go constant.other.placeholder.go",settings:{foreground:"#EBCB8B"}},{name:"[Java](JavaDoc) Comment Block Documentation HTML Entities",scope:"source.java comment.block.documentation.javadoc punctuation.definition.entity.html",settings:{foreground:"#81A1C1"}},{name:"[Java](JavaDoc) Constant Other",scope:"source.java constant.other",settings:{foreground:"#D8DEE9"}},{name:"[Java](JavaDoc) Keyword Other Documentation",scope:"source.java keyword.other.documentation",settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Keyword Other Documentation Author",scope:"source.java keyword.other.documentation.author.javadoc",settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Keyword Other Documentation Directive/Custom",scope:["source.java keyword.other.documentation.directive","source.java keyword.other.documentation.custom"],settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Keyword Other Documentation See",scope:"source.java keyword.other.documentation.see.javadoc",settings:{foreground:"#8FBCBB"}},{name:"[Java] Meta Method-Call",scope:"source.java meta.method-call meta.method",settings:{foreground:"#88C0D0"}},{name:"[Java](JavaDoc) Meta Tag Template Link",scope:["source.java meta.tag.template.link.javadoc","source.java string.other.link.title.javadoc"],settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Meta Tag Template Value",scope:"source.java meta.tag.template.value.javadoc",settings:{foreground:"#88C0D0"}},{name:"[Java](JavaDoc) Punctuation Definition Keyword",scope:"source.java punctuation.definition.keyword.javadoc",settings:{foreground:"#8FBCBB"}},{name:"[Java](JavaDoc) Punctuation Definition Tag",scope:["source.java punctuation.definition.tag.begin.javadoc","source.java punctuation.definition.tag.end.javadoc"],settings:{foreground:"#616E88"}},{name:"[Java] Storage Modifier Import",scope:"source.java storage.modifier.import",settings:{foreground:"#8FBCBB"}},{name:"[Java] Storage Modifier Package",scope:"source.java storage.modifier.package",settings:{foreground:"#8FBCBB"}},{name:"[Java] Storage Type",scope:"source.java storage.type",settings:{foreground:"#8FBCBB"}},{name:"[Java] Storage Type Annotation",scope:"source.java storage.type.annotation",settings:{foreground:"#D08770"}},{name:"[Java] Storage Type Generic",scope:"source.java storage.type.generic",settings:{foreground:"#8FBCBB"}},{name:"[Java] Storage Type Primitive",scope:"source.java storage.type.primitive",settings:{foreground:"#81A1C1"}},{name:"[JavaScript] Decorator",scope:["source.js punctuation.decorator","source.js meta.decorator variable.other.readwrite","source.js meta.decorator entity.name.function"],settings:{foreground:"#D08770"}},{name:"[JavaScript] Meta Object-Literal Key",scope:"source.js meta.object-literal.key",settings:{foreground:"#88C0D0"}},{name:"[JavaScript](JSDoc) Storage Type Class",scope:"source.js storage.type.class.jsdoc",settings:{foreground:"#8FBCBB"}},{name:"[JavaScript] String Template Literals Punctuation",scope:["source.js string.quoted.template punctuation.quasi.element.begin","source.js string.quoted.template punctuation.quasi.element.end","source.js string.template punctuation.definition.template-expression"],settings:{foreground:"#81A1C1"}},{name:"[JavaScript] Interpolated String Template Punctuation Functions",scope:"source.js string.quoted.template meta.method-call.with-arguments",settings:{foreground:"#ECEFF4"}},{name:"[JavaScript] String Template Literal Variable",scope:["source.js string.template meta.template.expression support.variable.property","source.js string.template meta.template.expression variable.other.object"],settings:{foreground:"#D8DEE9"}},{name:"[JavaScript] Support Type Primitive",scope:"source.js support.type.primitive",settings:{foreground:"#81A1C1"}},{name:"[JavaScript] Variable Other Object",scope:"source.js variable.other.object",settings:{foreground:"#D8DEE9"}},{name:"[JavaScript] Variable Other Read-Write Alias",scope:"source.js variable.other.readwrite.alias",settings:{foreground:"#8FBCBB"}},{name:"[JavaScript] Parentheses in Template Strings",scope:["source.js meta.embedded.line meta.brace.square","source.js meta.embedded.line meta.brace.round","source.js string.quoted.template meta.brace.square","source.js string.quoted.template meta.brace.round"],settings:{foreground:"#ECEFF4"}},{name:"[HTML] Constant Character Entity",scope:"text.html.basic constant.character.entity.html",settings:{foreground:"#EBCB8B"}},{name:"[HTML] Constant Other Inline-Data",scope:"text.html.basic constant.other.inline-data",settings:{foreground:"#D08770",fontStyle:"italic"}},{name:"[HTML] Meta Tag SGML Doctype",scope:"text.html.basic meta.tag.sgml.doctype",settings:{foreground:"#5E81AC"}},{name:"[HTML] Punctuation Definition Entity",scope:"text.html.basic punctuation.definition.entity",settings:{foreground:"#81A1C1"}},{name:"[INI] Entity Name Section Group-Title",scope:"source.properties entity.name.section.group-title.ini",settings:{foreground:"#88C0D0"}},{name:"[INI] Punctuation Separator Key-Value",scope:"source.properties punctuation.separator.key-value.ini",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Markup Fenced Code Block",scope:["text.html.markdown markup.fenced_code.block","text.html.markdown markup.fenced_code.block punctuation.definition"],settings:{foreground:"#8FBCBB"}},{name:"[Markdown] Markup Heading",scope:"markup.heading",settings:{foreground:"#88C0D0"}},{name:"[Markdown] Markup Inline",scope:["text.html.markdown markup.inline.raw","text.html.markdown markup.inline.raw punctuation.definition.raw"],settings:{foreground:"#8FBCBB"}},{name:"[Markdown] Markup Italic",scope:"text.html.markdown markup.italic",settings:{fontStyle:"italic"}},{name:"[Markdown] Markup Link",scope:"text.html.markdown markup.underline.link",settings:{fontStyle:"underline"}},{name:"[Markdown] Markup List Numbered/Unnumbered",scope:"text.html.markdown beginning.punctuation.definition.list",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Markup Quote Punctuation Definition",scope:"text.html.markdown beginning.punctuation.definition.quote",settings:{foreground:"#8FBCBB"}},{name:"[Markdown] Markup Quote Punctuation Definition",scope:"text.html.markdown markup.quote",settings:{foreground:"#616E88"}},{name:"[Markdown] Markup Math Constant",scope:"text.html.markdown constant.character.math.tex",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Markup Math Definition Marker",scope:["text.html.markdown punctuation.definition.math.begin","text.html.markdown punctuation.definition.math.end"],settings:{foreground:"#5E81AC"}},{name:"[Markdown] Markup Math Function Definition Marker",scope:"text.html.markdown punctuation.definition.function.math.tex",settings:{foreground:"#88C0D0"}},{name:"[Markdown] Markup Math Operator",scope:"text.html.markdown punctuation.math.operator.latex",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Punctuation Definition Heading",scope:"text.html.markdown punctuation.definition.heading",settings:{foreground:"#81A1C1"}},{name:"[Markdown] Punctuation Definition Constant/String",scope:["text.html.markdown punctuation.definition.constant","text.html.markdown punctuation.definition.string"],settings:{foreground:"#81A1C1"}},{name:"[Markdown] String Other Link Description/Title",scope:["text.html.markdown constant.other.reference.link","text.html.markdown string.other.link.description","text.html.markdown string.other.link.title"],settings:{foreground:"#88C0D0"}},{name:"[Perl] Perl Sigils",scope:"source.perl punctuation.definition.variable",settings:{foreground:"#D8DEE9"}},{name:"[PHP] Meta Function-Call Object",scope:["source.php meta.function-call","source.php meta.function-call.object"],settings:{foreground:"#88C0D0"}},{name:"[Python] Decorator",scope:["source.python entity.name.function.decorator","source.python meta.function.decorator support.type"],settings:{foreground:"#D08770"}},{name:"[Python] Function Call",scope:"source.python meta.function-call.generic",settings:{foreground:"#88C0D0"}},{name:"[Python] Support Type",scope:"source.python support.type",settings:{foreground:"#88C0D0"}},{name:"[Python] Function Parameter",scope:["source.python variable.parameter.function.language"],settings:{foreground:"#D8DEE9"}},{name:"[Python] Function Parameter Special",scope:["source.python meta.function.parameters variable.parameter.function.language.special.self"],settings:{foreground:"#81A1C1"}},{name:"[Rust] Entity types",scope:"source.rust entity.name.type",settings:{foreground:"#8FBCBB"}},{name:"[Rust] Macro",scope:"source.rust meta.macro entity.name.function",settings:{fontStyle:"bold",foreground:"#88C0D0"}},{name:"[Rust] Attributes",scope:["source.rust meta.attribute","source.rust meta.attribute punctuation","source.rust meta.attribute keyword.operator"],settings:{foreground:"#5E81AC"}},{name:"[Rust] Traits",scope:"source.rust entity.name.type.trait",settings:{fontStyle:"bold"}},{name:"[Rust] Interpolation Bracket Curly",scope:"source.rust punctuation.definition.interpolation",settings:{foreground:"#EBCB8B"}},{name:"[SCSS] Punctuation Definition Interpolation Bracket Curly",scope:["source.css.scss punctuation.definition.interpolation.begin.bracket.curly","source.css.scss punctuation.definition.interpolation.end.bracket.curly"],settings:{foreground:"#81A1C1"}},{name:"[SCSS] Variable Interpolation",scope:"source.css.scss variable.interpolation",settings:{foreground:"#D8DEE9",fontStyle:"italic"}},{name:"[TypeScript] Decorators",scope:["source.ts punctuation.decorator","source.ts meta.decorator variable.other.readwrite","source.ts meta.decorator entity.name.function","source.tsx punctuation.decorator","source.tsx meta.decorator variable.other.readwrite","source.tsx meta.decorator entity.name.function"],settings:{foreground:"#D08770"}},{name:"[TypeScript] Object-literal keys",scope:["source.ts meta.object-literal.key","source.tsx meta.object-literal.key"],settings:{foreground:"#D8DEE9"}},{name:"[TypeScript] Object-literal functions",scope:["source.ts meta.object-literal.key entity.name.function","source.tsx meta.object-literal.key entity.name.function"],settings:{foreground:"#88C0D0"}},{name:"[TypeScript] Type/Class",scope:["source.ts support.class","source.ts support.type","source.ts entity.name.type","source.ts entity.name.class","source.tsx support.class","source.tsx support.type","source.tsx entity.name.type","source.tsx entity.name.class"],settings:{foreground:"#8FBCBB"}},{name:"[TypeScript] Static Class Support",scope:["source.ts support.constant.math","source.ts support.constant.dom","source.ts support.constant.json","source.tsx support.constant.math","source.tsx support.constant.dom","source.tsx support.constant.json"],settings:{foreground:"#8FBCBB"}},{name:"[TypeScript] Variables",scope:["source.ts support.variable","source.tsx support.variable"],settings:{foreground:"#D8DEE9"}},{name:"[TypeScript] Parentheses in Template Strings",scope:["source.ts meta.embedded.line meta.brace.square","source.ts meta.embedded.line meta.brace.round","source.tsx meta.embedded.line meta.brace.square","source.tsx meta.embedded.line meta.brace.round"],settings:{foreground:"#ECEFF4"}},{name:"[XML] Entity Name Tag Namespace",scope:"text.xml entity.name.tag.namespace",settings:{foreground:"#8FBCBB"}},{name:"[XML] Keyword Other Doctype",scope:"text.xml keyword.other.doctype",settings:{foreground:"#5E81AC"}},{name:"[XML] Meta Tag Preprocessor",scope:"text.xml meta.tag.preprocessor entity.name.tag",settings:{foreground:"#5E81AC"}},{name:"[XML] Entity Name Tag Namespace",scope:["text.xml string.unquoted.cdata","text.xml string.unquoted.cdata punctuation.definition.string"],settings:{foreground:"#D08770",fontStyle:"italic"}},{name:"[YAML] Entity Name Tag",scope:"source.yaml entity.name.tag",settings:{foreground:"#8FBCBB"}}]},lineNumbers:!0,showCopyButton:!0,autoImport:!0,skipLanguages:[],filepath:"/home/runner/work/docs/docs/versioned_docs/version-stable/cadence/language/operators.md"};function E(o){const e=Object.assign({p:"p",ul:"ul",li:"li",h2:"h2",code:"code",a:"a",h3:"h3",em:"em"},(0,s.ah)(),o.components);return d||F("CH",!1),d.Code||F("CH.Code",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:"Operators are special symbols that perform a computation\nfor one or more values.\nThey are either unary, binary, or ternary."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:"Unary operators perform an operation for a single value.\nThe unary operator symbol appears before the value."}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:"Binary operators operate on two values.\nThe binary operator symbol appears between the two values (infix)."}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:"Ternary operators operate on three values.\nThe first operator symbol appears between the first and second value,\nthe second operator symbol appears between the second and third value (infix)."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.h2,{id:"assignment-operator-",children:["Assignment Operator (",(0,n.jsx)(e.code,{children:"="}),")"]}),"\n",(0,n.jsxs)(e.p,{children:["The binary assignment operator ",(0,n.jsx)(e.code,{children:"="})," can be used\nto assign a new value to a variable.\nIt is only allowed in a statement and is not allowed in expressions."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"= ",props:{style:{color:"#81A1C1"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"// `a` is `2`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" b = ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" c = ",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: The assignment operation cannot be used in an expression.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"=",props:{style:{color:"#81A1C1"}}},{content:" b ",props:{style:{color:"#D8DEE9FF"}}},{content:"=",props:{style:{color:"#81A1C1"}}},{content:" c",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Instead, the intended assignment must be written in multiple statements.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"b ",props:{style:{color:"#D8DEE9FF"}}},{content:"=",props:{style:{color:"#81A1C1"}}},{content:" c",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"=",props:{style:{color:"#81A1C1"}}},{content:" b",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Assignments to constants are invalid."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"// Invalid: Assignments are only for variables, not constants.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"= ",props:{style:{color:"#81A1C1"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"The left-hand side of the assignment operand must be an identifier.\nFor arrays and dictionaries, this identifier can be followed\nby one or more index or access expressions."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" numbers = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Change the first element of the array.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"numbers[",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"= ",props:{style:{color:"#81A1C1"}}},{content:"3",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `numbers` is `[3, 2]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare an array of arrays of integers.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" arrays = [[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"], [",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:"]]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Change the first element in the second array",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"arrays[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"][",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"= ",props:{style:{color:"#81A1C1"}}},{content:"5",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `arrays` is `[[1, 2], [5, 4]]`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" dictionaries = ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"  true",props:{style:{color:"#81A1C1"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:",",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"  false",props:{style:{color:"#81A1C1"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"dictionaries[",props:{style:{color:"#D8DEE9FF"}}},{content:"false",props:{style:{color:"#81A1C1"}}},{content:"][",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:"] ",props:{style:{color:"#D8DEE9FF"}}},{content:"= ",props:{style:{color:"#81A1C1"}}},{content:"0",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `dictionaries` is `{",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//   true: {1: 2},",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//   false: {3: 0}",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//}`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.h2,{id:"force-assignment-operator--",children:["Force-assignment operator (",(0,n.jsx)(e.code,{children:"<-!"}),")"]}),"\n",(0,n.jsxs)(e.p,{children:["The force-assignment operator (",(0,n.jsx)(e.code,{children:"<-!"}),") assigns a resource-typed value\nto an optional-typed variable if the variable is nil.\nIf the variable being assigned to is non-nil,\nthe execution of the program aborts."]}),"\n",(0,n.jsxs)(e.p,{children:["The force-assignment operator is only used for ",(0,n.jsx)(e.a,{href:"/docs/cadence/language/resources",children:"resource types"}),"."]}),"\n",(0,n.jsxs)(e.h2,{id:"swapping-operator--",children:["Swapping Operator (",(0,n.jsx)(e.code,{children:"<->"}),")"]}),"\n",(0,n.jsxs)(e.p,{children:["The binary swap operator ",(0,n.jsx)(e.code,{children:"<->"})," can be used\nto exchange the values of two variables.\nIt is only allowed in a statement and is not allowed in expressions."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" b = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"<->",props:{style:{color:"#81A1C1"}}},{content:" b",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `a` is `2`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// `b` is `1`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" c = ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: The swap operation cannot be used in an expression.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"<->",props:{style:{color:"#81A1C1"}}},{content:" b ",props:{style:{color:"#D8DEE9FF"}}},{content:"<->",props:{style:{color:"#81A1C1"}}},{content:" c",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Instead, the intended swap must be written in multiple statements.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"b ",props:{style:{color:"#D8DEE9FF"}}},{content:"<->",props:{style:{color:"#81A1C1"}}},{content:" c",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"<->",props:{style:{color:"#81A1C1"}}},{content:" b",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Both sides of the swap operation must be variable,\nassignment to constants is invalid."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"var",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: Swapping is only possible for variables, not constants.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"<->",props:{style:{color:"#81A1C1"}}},{content:" b",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Both sides of the swap operation must be an identifier,\nfollowed by one or more index or access expressions."}),"\n",(0,n.jsx)(e.h2,{id:"arithmetic-operators",children:"Arithmetic Operators"}),"\n",(0,n.jsxs)(e.p,{children:["The unary pefix operator  ",(0,n.jsx)(e.code,{children:"-"})," negates an integer:"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"-",props:{style:{color:"#81A1C1"}}},{content:"a  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `-1`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"There are four binary arithmetic operators:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["Addition: ",(0,n.jsx)(e.code,{children:"+"})]}),"\n",(0,n.jsxs)(e.li,{children:["Subtraction: ",(0,n.jsx)(e.code,{children:"-"})]}),"\n",(0,n.jsxs)(e.li,{children:["Multiplication: ",(0,n.jsx)(e.code,{children:"*"})]}),"\n",(0,n.jsxs)(e.li,{children:["Division: ",(0,n.jsx)(e.code,{children:"/"})]}),"\n",(0,n.jsxs)(e.li,{children:["Remainder: ",(0,n.jsx)(e.code,{children:"%"})]}),"\n"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"+ ",props:{style:{color:"#81A1C1"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"// `a` is `3`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"The arguments for the operators need to be of the same type.\nThe result is always the same type as the arguments."}),"\n",(0,n.jsx)(e.p,{children:"The division and remainder operators abort the program when the divisor is zero."}),"\n",(0,n.jsxs)(e.p,{children:["Arithmetic operations on the signed integer types\n",(0,n.jsx)(e.code,{children:"Int8"}),", ",(0,n.jsx)(e.code,{children:"Int16"}),", ",(0,n.jsx)(e.code,{children:"Int32"}),", ",(0,n.jsx)(e.code,{children:"Int64"}),", ",(0,n.jsx)(e.code,{children:"Int128"}),", ",(0,n.jsx)(e.code,{children:"Int256"}),",\nand on the unsigned integer types\n",(0,n.jsx)(e.code,{children:"UInt8"}),", ",(0,n.jsx)(e.code,{children:"UInt16"}),", ",(0,n.jsx)(e.code,{children:"UInt32"}),", ",(0,n.jsx)(e.code,{children:"UInt64"}),", ",(0,n.jsx)(e.code,{children:"UInt128"}),", ",(0,n.jsx)(e.code,{children:"UInt256"}),",\ndo not cause values to overflow or underflow."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"UInt8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"255",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: The result `256` does not fit in the range of `UInt8`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// thus a fatal overflow error is raised and the program aborts",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b = a ",props:{style:{color:"#D8DEE9FF"}}},{content:"+ ",props:{style:{color:"#81A1C1"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"100",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"100",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: The result `10000` does not fit in the range of `Int8`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// thus a fatal overflow error is raised and the program aborts",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" c = a ",props:{style:{color:"#D8DEE9FF"}}},{content:"*",props:{style:{color:"#81A1C1"}}},{content:" b",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"-128",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error: The result `128` does not fit in the range of `Int8`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// thus a fatal overflow error is raised and the program aborts",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b = ",props:{style:{color:"#D8DEE9FF"}}},{content:"-",props:{style:{color:"#81A1C1"}}},{content:"a",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.p,{children:["Arithmetic operations on the unsigned integer types\n",(0,n.jsx)(e.code,{children:"Word8"}),", ",(0,n.jsx)(e.code,{children:"Word16"}),", ",(0,n.jsx)(e.code,{children:"Word32"}),", ",(0,n.jsx)(e.code,{children:"Word64"}),"\nmay cause values to overflow or underflow."]}),"\n",(0,n.jsx)(e.p,{children:"For example, the maximum value of an unsigned 8-bit integer is 255 (binary 11111111).\nAdding 1 results in an overflow, truncation to 8 bits, and the value 0."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//    11111111 = 255",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// +         1",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// = 100000000 = 0",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Word8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"255",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"a ",props:{style:{color:"#D8DEE9FF"}}},{content:"+ ",props:{style:{color:"#81A1C1"}}},{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"// is `0`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Similarly, for the minimum value 0,\nsubtracting 1 wraps around and results in the maximum value 255."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"//    00000000",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// -         1",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// =  11111111 = 255",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Word8",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"b ",props:{style:{color:"#D8DEE9FF"}}},{content:"- ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `255`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h3,{id:"arithmetics-on-number-super-types",children:"Arithmetics on number super-types"}),"\n",(0,n.jsxs)(e.p,{children:["Arithmetic operators are not supported for number supertypes\n(",(0,n.jsx)(e.code,{children:"Number"}),", ",(0,n.jsx)(e.code,{children:"SignedNumber"}),", ",(0,n.jsx)(e.code,{children:"FixedPoint"}),", ",(0,n.jsx)(e.code,{children:"SignedFixedPoint"}),", ",(0,n.jsx)(e.code,{children:"Integer"}),", ",(0,n.jsx)(e.code,{children:"SignedInteger"}),"),\nas they may or may not succeed at run-time."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Integer",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:" as Int8",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Integer",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:" as Int8",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" z: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Integer",props:{style:{color:"#81A1C1"}}},{content:" = x ",props:{style:{color:"#D8DEE9FF"}}},{content:"+",props:{style:{color:"#81A1C1"}}},{content:" y    ",props:{style:{color:"#D8DEE9FF"}}},{content:"// Static error",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Values of these types need to be cast to the desired type before performing the arithmetic operation."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" z: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Integer",props:{style:{color:"#81A1C1"}}},{content:" = (x as",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}},{content:" Int8) ",props:{style:{color:"#D8DEE9FF"}}},{content:"+",props:{style:{color:"#81A1C1"}}},{content:" (y as",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}},{content:" Int8)",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"logical-operators",children:"Logical Operators"}),"\n",(0,n.jsxs)(e.p,{children:["Logical operators work with the boolean values ",(0,n.jsx)(e.code,{children:"true"})," and ",(0,n.jsx)(e.code,{children:"false"}),"."]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Logical NOT: ",(0,n.jsx)(e.code,{children:"!a"})]}),"\n",(0,n.jsx)(e.p,{children:"This unary prefix operator logically negates a boolean:"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"!",props:{style:{color:"#81A1C1"}}},{content:"a  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Logical AND: ",(0,n.jsx)(e.code,{children:"a && b"})]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"true && true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true && false  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"false && true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"false && false  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"If the left-hand side is false, the right-hand side is not evaluated."}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Logical OR: ",(0,n.jsx)(e.code,{children:"a || b"})]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"true || true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true || false  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"false || true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"false || false ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"If the left-hand side is true, the right-hand side is not evaluated."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"comparison-operators",children:"Comparison Operators"}),"\n",(0,n.jsx)(e.p,{children:"Comparison operators work with boolean and integer values."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Equality: ",(0,n.jsx)(e.code,{children:"=="}),", is supported for booleans, numbers, addresses, strings, characters, enums, paths, ",(0,n.jsx)(e.code,{children:"Type"})," values, references, and ",(0,n.jsx)(e.code,{children:"Void"})," values (",(0,n.jsx)(e.code,{children:"()"}),"). Variable-sized arrays, fixed-size arrays, dictionaries, and optionals also support equality tests if their inner types do."]}),"\n",(0,n.jsxs)(e.p,{children:["Both sides of the equality operator may be optional, even of different levels,\nso it is for example possible to compare a non-optional with a double-optional (",(0,n.jsx)(e.code,{children:"??"}),")."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"== ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"== ",props:{style:{color:"#81A1C1"}}},{content:"2  ",props:{style:{color:"#B48EAD"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"true == true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true == false  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"x ",props:{style:{color:"#D8DEE9FF"}}},{content:"== nil  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"x ",props:{style:{color:"#D8DEE9FF"}}},{content:"== nil  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Comparisons of different levels of optionals are possible.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"?? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"x ",props:{style:{color:"#D8DEE9FF"}}},{content:"==",props:{style:{color:"#81A1C1"}}},{content:" y  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Comparisons of different levels of optionals are possible.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"?? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"x ",props:{style:{color:"#D8DEE9FF"}}},{content:"==",props:{style:{color:"#81A1C1"}}},{content:" y  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Equality tests of arrays are possible if their inner types are equatable.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" xs: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" ys: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"xs ",props:{style:{color:"#D8DEE9FF"}}},{content:"==",props:{style:{color:"#81A1C1"}}},{content:" ys ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" xss: [[",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"]] = [xs, xs, xs]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" yss: [[",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"]] = [ys, ys, ys]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"xss ",props:{style:{color:"#D8DEE9FF"}}},{content:"==",props:{style:{color:"#81A1C1"}}},{content:" yss ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Equality also applies to fixed-size arrays. If their lengths differ, the result is a type error.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" xs: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"; 2] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" ys: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"; 2] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"0 ",props:{style:{color:"#B48EAD"}}},{content:"+ ",props:{style:{color:"#81A1C1"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"+ ",props:{style:{color:"#81A1C1"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"xs ",props:{style:{color:"#D8DEE9FF"}}},{content:"==",props:{style:{color:"#81A1C1"}}},{content:" ys ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Equality tests of dictionaries are possible if the key and value types are equatable.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d1 = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"def",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d2 = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"def",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"d1 ",props:{style:{color:"#D8DEE9FF"}}},{content:"==",props:{style:{color:"#81A1C1"}}},{content:" d2 ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d3 = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1000",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2000",props:{style:{color:"#B48EAD"}}},{content:"}}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"def",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"c",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1000",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"5",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"d",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2000",props:{style:{color:"#B48EAD"}}},{content:"}}}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d4 = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1000",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2000",props:{style:{color:"#B48EAD"}}},{content:"}}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"def",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"c",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1000",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"5",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"d",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2000",props:{style:{color:"#B48EAD"}}},{content:"}}}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"d3 ",props:{style:{color:"#D8DEE9FF"}}},{content:"==",props:{style:{color:"#81A1C1"}}},{content:" d4 ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Inequality: ",(0,n.jsx)(e.code,{children:"!="}),", is supported for booleans, numbers, addresses, strings, characters, enums, paths, ",(0,n.jsx)(e.code,{children:"Type"})," values, references, and ",(0,n.jsx)(e.code,{children:"Void"})," values (",(0,n.jsx)(e.code,{children:"()"}),").\nVariable-sized arrays, fixed-size arrays, dictionaries, and optionals also support inequality tests if their inner types do."]}),"\n",(0,n.jsxs)(e.p,{children:["Both sides of the inequality operator may be optional, even of different levels,\nso it is for example possible to compare a non-optional with a double-optional (",(0,n.jsx)(e.code,{children:"??"}),")."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"!= ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"!= ",props:{style:{color:"#81A1C1"}}},{content:"2  ",props:{style:{color:"#B48EAD"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"true != true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true != false  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"x ",props:{style:{color:"#D8DEE9FF"}}},{content:"!= nil  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"x ",props:{style:{color:"#D8DEE9FF"}}},{content:"!= nil  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Comparisons of different levels of optionals are possible.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"?? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"x ",props:{style:{color:"#D8DEE9FF"}}},{content:"!=",props:{style:{color:"#81A1C1"}}},{content:" y  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Comparisons of different levels of optionals are possible.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"?? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"x ",props:{style:{color:"#D8DEE9FF"}}},{content:"!=",props:{style:{color:"#81A1C1"}}},{content:" y  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Inequality tests of arrays are possible if their inner types are equatable.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" xs: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" ys: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"5",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"6",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"xs ",props:{style:{color:"#D8DEE9FF"}}},{content:"!=",props:{style:{color:"#81A1C1"}}},{content:" ys ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Inequality also applies to fixed-size arrays. If their lengths differ, the result is a type error.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" xs: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"; 2] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" ys: [",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"; 2] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"xs ",props:{style:{color:"#D8DEE9FF"}}},{content:"!=",props:{style:{color:"#81A1C1"}}},{content:" ys ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Inequality tests of dictionaries are possible if the key and value types are equatable.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d1 = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"def",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d2 = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"def",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"500",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"d1 ",props:{style:{color:"#D8DEE9FF"}}},{content:"!=",props:{style:{color:"#81A1C1"}}},{content:" d2 ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d3 = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1000",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2000",props:{style:{color:"#B48EAD"}}},{content:"}}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"def",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"c",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1000",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"5",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"d",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2000",props:{style:{color:"#B48EAD"}}},{content:"}}}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d4 = ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"abc",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1000",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"2",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2000",props:{style:{color:"#B48EAD"}}},{content:"}}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"def",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"{",props:{style:{color:"#ECEFF4"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"c",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"1000",props:{style:{color:"#B48EAD"}}},{content:"}",props:{style:{color:"#ECEFF4"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"5",props:{style:{color:"#B48EAD"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:'{"',props:{style:{color:"#ECEFF4"}}},{content:"d",props:{style:{color:"#A3BE8C"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:": ",props:{style:{color:"#D8DEE9FF"}}},{content:"2000",props:{style:{color:"#B48EAD"}}},{content:"}}}",props:{style:{color:"#ECEFF4"}}}]},{tokens:[{content:"d3 ",props:{style:{color:"#D8DEE9FF"}}},{content:"!=",props:{style:{color:"#81A1C1"}}},{content:" d4 ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Less than: ",(0,n.jsx)(e.code,{children:"<"}),", for integers, booleans, characters and strings"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:"2  ",props:{style:{color:"#B48EAD"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"2 ",props:{style:{color:"#B48EAD"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"false < true ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true < true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"    ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"z",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"    ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"A",props:{style:{color:"#A3BE8C"}}},{content:'"    ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"" ',props:{style:{color:"#ECEFF4"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:'""      ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"" ',props:{style:{color:"#ECEFF4"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"     ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"az",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"xAB",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"< ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Xab",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Less or equal than: ",(0,n.jsx)(e.code,{children:"<="}),", for integers, booleans, characters and strings"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:"2  ",props:{style:{color:"#B48EAD"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"2 ",props:{style:{color:"#B48EAD"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"false <= true ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true <= true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true <= false ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"c",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"z",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"z",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"A",props:{style:{color:"#A3BE8C"}}},{content:'"    ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"" ',props:{style:{color:"#ECEFF4"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:'""      ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"" ',props:{style:{color:"#ECEFF4"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"     ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"az",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"xAB",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"<= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Xab",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Greater than: ",(0,n.jsx)(e.code,{children:">"}),", for integers, booleans, characters and strings"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:"2  ",props:{style:{color:"#B48EAD"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"2 ",props:{style:{color:"#B48EAD"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"false > true ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true > true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true > false ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"c",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"g",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"g",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"A",props:{style:{color:"#A3BE8C"}}},{content:'"    ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"" ',props:{style:{color:"#ECEFF4"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:'""      ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"" ',props:{style:{color:"#ECEFF4"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"     ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"az",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"xAB",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Xab",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Greater or equal than: ",(0,n.jsx)(e.code,{children:">="}),", for integers, booleans, characters and strings"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:"2  ",props:{style:{color:"#B48EAD"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"2 ",props:{style:{color:"#B48EAD"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:"1  ",props:{style:{color:"#B48EAD"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"false >= true ",props:{style:{color:"#81A1C1"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true >= true  ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"true >= false ",props:{style:{color:"#81A1C1"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"c",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"q",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"q",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"A",props:{style:{color:"#A3BE8C"}}},{content:'"    ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"" ',props:{style:{color:"#ECEFF4"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:'""      ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"" ',props:{style:{color:"#ECEFF4"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"a",props:{style:{color:"#A3BE8C"}}},{content:'"     ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"az",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"b",props:{style:{color:"#A3BE8C"}}},{content:'"   ',props:{style:{color:"#ECEFF4"}}},{content:"// is `true`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"xAB",props:{style:{color:"#A3BE8C"}}},{content:'" ',props:{style:{color:"#ECEFF4"}}},{content:">= ",props:{style:{color:"#81A1C1"}}},{content:'"',props:{style:{color:"#ECEFF4"}}},{content:"Xab",props:{style:{color:"#A3BE8C"}}},{content:'"  ',props:{style:{color:"#ECEFF4"}}},{content:"// is `false`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"comparing-number-super-types",children:"Comparing number super-types"}),"\n",(0,n.jsxs)(e.p,{children:["Similar to arithmetic operators, comparison operators are also not supported for number supertypes\n(",(0,n.jsx)(e.code,{children:"Number"}),", ",(0,n.jsx)(e.code,{children:"SignedNumber"})," ",(0,n.jsx)(e.code,{children:"FixedPoint"}),", ",(0,n.jsx)(e.code,{children:"SignedFixedPoint"}),", ",(0,n.jsx)(e.code,{children:"Integer"}),", ",(0,n.jsx)(e.code,{children:"SignedInteger"}),"),\nas they may or may not succeed at run-time."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Integer",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:" as Int8",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Integer",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}},{content:" as Int8",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" z: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Bool",props:{style:{color:"#81A1C1"}}},{content:" = x ",props:{style:{color:"#D8DEE9FF"}}},{content:">",props:{style:{color:"#81A1C1"}}},{content:" y    ",props:{style:{color:"#D8DEE9FF"}}},{content:"// Static error",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Values of these types need to be cast to the desired type before performing the arithmetic operation."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" z: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Bool",props:{style:{color:"#81A1C1"}}},{content:" = (x as",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}},{content:" Int8) ",props:{style:{color:"#D8DEE9FF"}}},{content:">",props:{style:{color:"#81A1C1"}}},{content:" (y as",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}},{content:" Int8)",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"bitwise-operators",children:"Bitwise Operators"}),"\n",(0,n.jsx)(e.p,{children:"Bitwise operators enable the manipulation of individual bits of unsigned and signed integers.\nThey're often used in low-level programming."}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Bitwise AND: ",(0,n.jsx)(e.code,{children:"a & b"})]}),"\n",(0,n.jsxs)(e.p,{children:["Returns a new integer whose bits are 1 only if the bits were 1 in ",(0,n.jsx)(e.em,{children:"both"})," input integers:"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" firstFiveBits = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0b11111000",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" lastFiveBits  = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0b00011111",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" middleTwoBits = firstFiveBits & lastFiveBits  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is 0b00011000",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Bitwise OR: ",(0,n.jsx)(e.code,{children:"a | b"})]}),"\n",(0,n.jsxs)(e.p,{children:["Returns a new integer whose bits are 1 only if the bits were 1 in ",(0,n.jsx)(e.em,{children:"either"})," input integers:"]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someBits = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0b10110010",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" moreBits = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0b01011110",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" combinedbits = someBits | moreBits  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is 0b11111110",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Bitwise XOR: ",(0,n.jsx)(e.code,{children:"a ^ b"})]}),"\n",(0,n.jsx)(e.p,{children:"Returns a new integer whose bits are 1 where the input bits are different,\nand are 0 where the input bits are the same:"}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" firstBits = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0b00010100",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" otherBits = ",props:{style:{color:"#D8DEE9FF"}}},{content:"0b00000101",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" outputBits = firstBits ^ otherBits  ",props:{style:{color:"#D8DEE9FF"}}},{content:"// is 0b00010001",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"bitwise-shifting-operators",children:"Bitwise Shifting Operators"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Bitwise LEFT SHIFT: ",(0,n.jsx)(e.code,{children:"a << b"})]}),"\n",(0,n.jsx)(e.p,{children:"Returns a new integer with all bits moved to the left by a certain number of places."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someBits = ",props:{style:{color:"#D8DEE9FF"}}},{content:"4  ",props:{style:{color:"#B48EAD"}}},{content:"// is 0b00000100",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" shiftedBits = someBits ",props:{style:{color:"#D8DEE9FF"}}},{content:"<< ",props:{style:{color:"#81A1C1"}}},{content:"2   ",props:{style:{color:"#B48EAD"}}},{content:"// is 0b00010000",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsxs)(e.p,{children:["Bitwise RIGHT SHIFT: ",(0,n.jsx)(e.code,{children:"a >> b"})]}),"\n",(0,n.jsx)(e.p,{children:"Returns a new integer with all bits moved to the right by a certain number of places."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" someBits = ",props:{style:{color:"#D8DEE9FF"}}},{content:"8  ",props:{style:{color:"#B48EAD"}}},{content:"// is 0b00001000",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" shiftedBits = someBits ",props:{style:{color:"#D8DEE9FF"}}},{content:">> ",props:{style:{color:"#81A1C1"}}},{content:"2   ",props:{style:{color:"#B48EAD"}}},{content:"// is 0b00000010",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["For unsigned integers, the bitwise shifting operators perform ",(0,n.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Logical_shift",children:"logical shifting"}),",\nfor signed integers, they perform ",(0,n.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Arithmetic_shift",children:"arithmetic shifting"}),"."]}),"\n",(0,n.jsx)(e.h2,{id:"ternary-conditional-operator",children:"Ternary Conditional Operator"}),"\n",(0,n.jsxs)(e.p,{children:["There is only one ternary conditional operator, the ternary conditional operator (",(0,n.jsx)(e.code,{children:"a ? b : c"}),")."]}),"\n",(0,n.jsx)(e.p,{children:"It behaves like an if-statement, but is an expression:\nIf the first operator value is true, the second operator value is returned.\nIf the first operator value is false, the third value is returned."}),"\n",(0,n.jsxs)(e.p,{children:["The first value must be a boolean (must have the type ",(0,n.jsx)(e.code,{children:"Bool"}),").\nThe second value and third value can be of any type.\nThe result type is the least common supertype of the second and third value."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" x = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:"2 ",props:{style:{color:"#B48EAD"}}},{content:"? ",props:{style:{color:"#81A1C1"}}},{content:"3",props:{style:{color:"#B48EAD"}}},{content:" : ",props:{style:{color:"#D8DEE9FF"}}},{content:"4",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"// `x` is `4` and has type `Int`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" y = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"> ",props:{style:{color:"#81A1C1"}}},{content:"2 ",props:{style:{color:"#B48EAD"}}},{content:"? nil",props:{style:{color:"#81A1C1"}}},{content:" : ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"// `y` is `3` and has type `Int?`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"casting-operators",children:"Casting Operators"}),"\n",(0,n.jsxs)(e.h3,{id:"static-casting-operator-as",children:["Static Casting Operator (",(0,n.jsx)(e.code,{children:"as"}),")"]}),"\n",(0,n.jsxs)(e.p,{children:["The static casting operator ",(0,n.jsx)(e.code,{children:"as"})," can be used to statically type cast a value to a type."]}),"\n",(0,n.jsx)(e.p,{children:'If the static type of the value is a subtype of the given type (the "target" type),\nthe operator returns the value as the given type.'}),"\n",(0,n.jsx)(e.p,{children:"The cast is performed statically, i.e. when the program is type-checked.\nOnly the static type of the value is considered, not the run-time type of the value."}),"\n",(0,n.jsxs)(e.p,{children:["This means it is not possible to downcast using this operator.\nConsider using the ",(0,n.jsxs)(e.a,{href:"#conditional-downcasting-operator-as",children:["conditional downcasting operator ",(0,n.jsx)(e.code,{children:"as?"})]})," instead."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant named `integer` which has type `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" integer: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Statically cast the value of `integer` to the supertype `Number`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The cast succeeds, because the type of the variable `integer`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// the type `Int`, is a subtype of type `Number`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// This is an upcast.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" number = integer as Number",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `number` is `1` and has type `Number`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a constant named `something` which has type `AnyStruct`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// with an initial value which has type `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" something: ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Statically cast the value of `something` to `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// This is invalid, the cast fails, because the static type of the value is type `AnyStruct`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// which is not a subtype of type `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" result = something as Int",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.h3,{id:"conditional-downcasting-operator-as",children:["Conditional Downcasting Operator (",(0,n.jsx)(e.code,{children:"as?"}),")"]}),"\n",(0,n.jsxs)(e.p,{children:["The conditional downcasting operator ",(0,n.jsx)(e.code,{children:"as?"})," can be used to dynamically type cast a value to a type.\nThe operator returns an optional.\nIf the value has a run-time type that is a subtype of the target type\nthe operator returns the value as the target type,\notherwise the result is ",(0,n.jsx)(e.code,{children:"nil"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"The cast is performed at run-time, i.e. when the program is executed,\nnot statically, i.e. when the program is checked."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant named `something` which has type `AnyStruct`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// with an initial value which has type `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" something: ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Conditionally downcast the value of `something` to `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The cast succeeds, because the value has type `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" number = something as",props:{style:{color:"#D8DEE9FF"}}},{content:"?",props:{style:{color:"#81A1C1"}}},{content:" Int",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `number` is `1` and has type `Int?`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Conditionally downcast the value of `something` to `Bool`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The cast fails, because the value has type `Int`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// and `Bool` is not a subtype of `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" boolean = something as",props:{style:{color:"#D8DEE9FF"}}},{content:"?",props:{style:{color:"#81A1C1"}}},{content:" Bool",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `boolean` is `nil` and has type `Bool?`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"Downcasting works for concrete types, but also works e.g. for nested types (e.g. arrays), interfaces, optionals, etc."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant named `values` which has type `[AnyStruct]`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// i.e. an array of arbitrarily typed values.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" values: [",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:"] = [",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:", ",props:{style:{color:"#D8DEE9FF"}}},{content:"true",props:{style:{color:"#81A1C1"}}},{content:"]",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" first = values[",props:{style:{color:"#D8DEE9FF"}}},{content:"0",props:{style:{color:"#B48EAD"}}},{content:"] as",props:{style:{color:"#D8DEE9FF"}}},{content:"?",props:{style:{color:"#81A1C1"}}},{content:" Int",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `first` is `1` and has type `Int?`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" second = values[",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"] as",props:{style:{color:"#D8DEE9FF"}}},{content:"?",props:{style:{color:"#81A1C1"}}},{content:" Bool",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `second` is `true` and has type `Bool?`",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.h3,{id:"force-downcasting-operator-as",children:["Force-downcasting Operator (",(0,n.jsx)(e.code,{children:"as!"}),")"]}),"\n",(0,n.jsxs)(e.p,{children:["The force-downcasting operator ",(0,n.jsx)(e.code,{children:"as!"})," behaves like the\n",(0,n.jsxs)(e.a,{href:"#conditional-downcasting-operator-as",children:["conditional downcasting operator ",(0,n.jsx)(e.code,{children:"as?"})]}),".\nHowever, if the cast succeeds, it returns a value of the given type instead of an optional,\nand if the cast fails, it aborts the program instead of returning ",(0,n.jsx)(e.code,{children:"nil"}),","]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant named `something` which has type `AnyStruct`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// with an initial value which has type `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" something: ",props:{style:{color:"#D8DEE9FF"}}},{content:"AnyStruct",props:{style:{color:"#81A1C1"}}},{content:" = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Force-downcast the value of `something` to `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The cast succeeds, because the value has type `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" number = something as",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}},{content:" Int",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `number` is `1` and has type `Int`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Force-downcast the value of `something` to `Bool`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// The cast fails, because the value has type `Int`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// and `Bool` is not a subtype of `Int`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" boolean = something as",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}},{content:" Bool",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Run-time error",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"optional-operators",children:"Optional Operators"}),"\n",(0,n.jsxs)(e.h3,{id:"nil-coalescing-operator-",children:["Nil-Coalescing Operator (",(0,n.jsx)(e.code,{children:"??"}),")"]}),"\n",(0,n.jsxs)(e.p,{children:["The nil-coalescing operator ",(0,n.jsx)(e.code,{children:"??"})," returns\nthe value inside an optional if it contains a value,\nor returns an alternative value if the optional has no value,\ni.e., the optional value is ",(0,n.jsx)(e.code,{children:"nil"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"If the left-hand side is non-nil, the right-hand side is not evaluated."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant which has an optional integer type",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a constant with a non-optional integer type,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// which is initialized to `a` if it is non-nil, or 42 otherwise.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:" = a ",props:{style:{color:"#D8DEE9FF"}}},{content:"?? ",props:{style:{color:"#81A1C1"}}},{content:"42",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"// `b` is 42, as `a` is nil",props:{style:{color:"#616E88"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"The nil-coalescing operator can only be applied\nto values which have an optional type."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant with a non-optional integer type.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: nil-coalescing operator is applied to a value which has a non-optional type",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// (a has the non-optional type `Int`).",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b = a ",props:{style:{color:"#D8DEE9FF"}}},{content:"?? ",props:{style:{color:"#81A1C1"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Invalid: nil-coalescing operator is applied to a value which has a non-optional type",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// (the integer literal is of type `Int`).",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" c = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1 ",props:{style:{color:"#B48EAD"}}},{content:"?? ",props:{style:{color:"#81A1C1"}}},{content:"2",props:{style:{color:"#B48EAD"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"The type of the right-hand side of the operator (the alternative value) must be a subtype\nof the type of left-hand side, i.e. the right-hand side of the operator must\nbe the non-optional or optional type matching the type of the left-hand side."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant with an optional integer type.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" c = a ",props:{style:{color:"#D8DEE9FF"}}},{content:"??",props:{style:{color:"#81A1C1"}}},{content:" b",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// `c` is `1` and has type `Int?`",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: nil-coalescing operator is applied to a value of type `Int?`,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// but the alternative has type `Bool`.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d = a ",props:{style:{color:"#D8DEE9FF"}}},{content:"?? false",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsxs)(e.h3,{id:"force-unwrap-operator-",children:["Force Unwrap Operator (",(0,n.jsx)(e.code,{children:"!"}),")"]}),"\n",(0,n.jsxs)(e.p,{children:["The force-unwrap operator (",(0,n.jsx)(e.code,{children:"!"}),") returns\nthe value inside an optional if it contains a value,\nor panics and aborts the execution if the optional has no value,\ni.e., the optional value is ",(0,n.jsx)(e.code,{children:"nil"}),"."]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant which has an optional integer type",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"nil",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a constant with a non-optional integer type,",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// which is initialized to `a` if `a` is non-nil.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// If `a` is nil, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:" = a",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"// The program aborts because `a` is nil.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare another optional integer constant",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" c: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:"? = ",props:{style:{color:"#D8DEE9FF"}}},{content:"3",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Declare a non-optional integer",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// which is initialized to `c` if `c` is non-nil.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// If `c` is nil, the program aborts.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" d: ",props:{style:{color:"#D8DEE9FF"}}},{content:"Int",props:{style:{color:"#81A1C1"}}},{content:" = c",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}}]},{tokens:[{content:"// `d` is initialized to 3 because c isn't nil.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.p,{children:"The force-unwrap operator can only be applied\nto values which have an optional type."}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Declare a constant with a non-optional integer type.",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" a = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}}]},{tokens:[{content:"",props:{style:{color:"#D8DEE9FF"}}}]},{tokens:[{content:"// Invalid: force-unwrap operator is applied to a value which has a",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// non-optional type (`a` has the non-optional type `Int`).",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" b = a",props:{style:{color:"#D8DEE9FF"}}},{content:"!",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(d.Code,{codeConfig:y,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Invalid: The force-unwrap operator is applied",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// to a value which has a non-optional type",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"// (the integer literal is of type `Int`).",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"//",props:{style:{color:"#616E88"}}}]},{tokens:[{content:"let",props:{style:{color:"#81A1C1"}}},{content:" c = ",props:{style:{color:"#D8DEE9FF"}}},{content:"1",props:{style:{color:"#B48EAD"}}},{content:"!",props:{style:{color:"#81A1C1"}}}]}],lang:"cadence"},annotations:[]}]}),"\n",(0,n.jsx)(e.h2,{id:"precedence-and-associativity",children:"Precedence and Associativity"}),"\n",(0,n.jsx)(e.p,{children:"Operators have the following precedences, highest to lowest:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["Unary precedence: ",(0,n.jsx)(e.code,{children:"-"}),", ",(0,n.jsx)(e.code,{children:"!"}),", ",(0,n.jsx)(e.code,{children:"<-"})]}),"\n",(0,n.jsxs)(e.li,{children:["Cast precedence: ",(0,n.jsx)(e.code,{children:"as"}),", ",(0,n.jsx)(e.code,{children:"as?"}),", ",(0,n.jsx)(e.code,{children:"as!"})]}),"\n",(0,n.jsxs)(e.li,{children:["Multiplication precedence: ",(0,n.jsx)(e.code,{children:"*"}),", ",(0,n.jsx)(e.code,{children:"/"}),", ",(0,n.jsx)(e.code,{children:"%"})]}),"\n",(0,n.jsxs)(e.li,{children:["Addition precedence: ",(0,n.jsx)(e.code,{children:"+"}),", ",(0,n.jsx)(e.code,{children:"-"})]}),"\n",(0,n.jsxs)(e.li,{children:["Bitwise shift precedence: ",(0,n.jsx)(e.code,{children:"<<"}),", ",(0,n.jsx)(e.code,{children:">>"})]}),"\n",(0,n.jsxs)(e.li,{children:["Bitwise conjunction precedence: ",(0,n.jsx)(e.code,{children:"&"})]}),"\n",(0,n.jsxs)(e.li,{children:["Bitwise exclusive disjunction precedence: ",(0,n.jsx)(e.code,{children:"^"})]}),"\n",(0,n.jsxs)(e.li,{children:["Bitwise disjunction precedence: ",(0,n.jsx)(e.code,{children:"|"})]}),"\n",(0,n.jsxs)(e.li,{children:["Nil-Coalescing precedence: ",(0,n.jsx)(e.code,{children:"??"})]}),"\n",(0,n.jsxs)(e.li,{children:["Relational precedence: ",(0,n.jsx)(e.code,{children:"<"}),", ",(0,n.jsx)(e.code,{children:"<="}),", ",(0,n.jsx)(e.code,{children:">"}),", ",(0,n.jsx)(e.code,{children:">="})]}),"\n",(0,n.jsxs)(e.li,{children:["Equality precedence: ",(0,n.jsx)(e.code,{children:"=="}),", ",(0,n.jsx)(e.code,{children:"!="})]}),"\n",(0,n.jsxs)(e.li,{children:["Logical conjunction precedence: ",(0,n.jsx)(e.code,{children:"&&"})]}),"\n",(0,n.jsxs)(e.li,{children:["Logical disjunction precedence: ",(0,n.jsx)(e.code,{children:"||"})]}),"\n",(0,n.jsxs)(e.li,{children:["Ternary precedence: ",(0,n.jsx)(e.code,{children:"? :"})]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"All operators are left-associative, except for the following operators which are right-associative:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Ternary operator"}),"\n",(0,n.jsx)(e.li,{children:"Nil-coalescing operator"}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["Expressions can be wrapped in parentheses to override precedence conventions,\ni.e. an alternate order should be indicated, or when the default order should be emphasized\ne.g. to avoid confusion.\nFor example, ",(0,n.jsx)(e.code,{children:"(2 + 3) * 4"})," forces addition to precede multiplication,\nand ",(0,n.jsx)(e.code,{children:"5 + (6 * 7)"})," reinforces the default order."]})]})}const u=function(o){void 0===o&&(o={});const{wrapper:e}=Object.assign({},(0,s.ah)(),o.components);return e?(0,n.jsx)(e,Object.assign({},o,{children:(0,n.jsx)(E,o)})):E(o)};function F(o,e){throw new Error("Expected "+(e?"component":"object")+" `"+o+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);