"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[70780],{11628:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>d,contentTitle:()=>n,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>a});o(67294);var t=o(85893),r=o(11151);const c={},n=void 0,i={unversionedId:"concepts/mobile/references/ios",id:"version-stable/concepts/mobile/references/ios",title:"ios",description:"",source:"@site/versioned_docs/version-stable/concepts/mobile/references/ios.md",sourceDirName:"concepts/mobile/references",slug:"/concepts/mobile/references/ios",permalink:"/docs/concepts/mobile/references/ios",draft:!1,editUrl:"https://github.com/onflow/docs/tree/main/docs/concepts/mobile/references/ios.md",tags:[],version:"stable",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"android",permalink:"/docs/concepts/mobile/references/android"},next:{title:"Hybrid Custody",permalink:"/docs/concepts/hybrid-custody/"}},d={},a=[];function l(e){return(0,t.jsx)(t.Fragment,{})}const u=function(e){void 0===e&&(e={});const{wrapper:s}=Object.assign({},(0,r.ah)(),e.components);return s?(0,t.jsx)(s,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l()}}}]);