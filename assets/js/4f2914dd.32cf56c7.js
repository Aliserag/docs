"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7286],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=l.createContext({}),c=function(e){var t=l.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return l.createElement(p.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||i;return n?l.createElement(f,o(o({ref:t},u),{},{components:n})):l.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r[d]="string"==typeof e?e:a,o[1]=r;for(var c=2;c<i;c++)o[c]=n[c];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},73040:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var l=n(87462),a=(n(67294),n(3905));const i={title:"Deploy a Flow Project",sidebar_title:"Deploy a Project",description:"How to deploy Flow project contracts with the CLI"},o=void 0,r={unversionedId:"tools/flow-cli/deploy-project-contracts",id:"tools/flow-cli/deploy-project-contracts",title:"Deploy a Flow Project",description:"How to deploy Flow project contracts with the CLI",source:"@site/docs/tools/flow-cli/deploy-project-contracts.md",sourceDirName:"tools/flow-cli",slug:"/tools/flow-cli/deploy-project-contracts",permalink:"/tools/flow-cli/deploy-project-contracts",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682618171,formattedLastUpdatedAt:"Apr 27, 2023",frontMatter:{title:"Deploy a Flow Project",sidebar_title:"Deploy a Project",description:"How to deploy Flow project contracts with the CLI"},sidebar:"tutorialSidebar",previous:{title:"Decode a Transaction with the Flow CLI",permalink:"/tools/flow-cli/decode-transactions"},next:{title:"Derive Public Key with the Flow CLI",permalink:"/tools/flow-cli/derive-keys"}},p={},c=[{value:"Example Usage",id:"example-usage",level:2},{value:"Initialization Arguments",id:"initialization-arguments",level:2},{value:"Dependency Resolution",id:"dependency-resolution",level:2},{value:"Address Replacement",id:"address-replacement",level:2},{value:"Merging Multiple Configuration Files",id:"merging-multiple-configuration-files",level:2},{value:"Flags",id:"flags",level:2},{value:"Allow Updates",id:"allow-updates",level:3},{value:"Show Update Diff",id:"show-update-diff",level:3},{value:"Host",id:"host",level:3},{value:"Network Key",id:"network-key",level:3},{value:"Network",id:"network",level:3},{value:"Filter",id:"filter",level:3},{value:"Output",id:"output",level:3},{value:"Save",id:"save",level:3},{value:"Log",id:"log",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Version Check",id:"version-check",level:3}],u={toc:c},d="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,l.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"flow project deploy\n")),(0,a.kt)("p",null,"This command automatically deploys your project's contracts based on the\nconfiguration defined in your ",(0,a.kt)("inlineCode",{parentName:"p"},"flow.json")," file."),(0,a.kt)("p",null,"Before using this command, read about how to\n",(0,a.kt)("a",{parentName:"p",href:"/tools/flow-cli/project-contracts"},"configure project contracts and deployment targets"),"."),(0,a.kt)("h2",{id:"example-usage"},"Example Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"> flow project deploy --network=testnet\n\nDeploying 2 contracts for accounts: my-testnet-account\n\nNonFungibleToken -> 0x8910590293346ec4\nKittyItems -> 0x8910590293346ec4\n\n\u2728  All contracts deployed successfully\n")),(0,a.kt)("p",null,"In the example above, your ",(0,a.kt)("inlineCode",{parentName:"p"},"flow.json")," file might look something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  ...\n  "contracts": {\n    "NonFungibleToken": "./cadence/contracts/NonFungibleToken.cdc",\n    "KittyItems": "./cadence/contracts/KittyItems.cdc"\n  },\n  "deployments": {\n    "testnet": {\n      "my-testnet-account": ["KittyItems", "NonFungibleToken"]\n    }\n  },\n  ...\n}\n')),(0,a.kt)("p",null,"Here's a sketch of the contract source files:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence:title=NonFungibleToken.cdc"},"pub contract NonFungibleToken { \n  // ...\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence:title=KittyItems.cdc"},'import NonFungibleToken from "./NonFungibleToken.cdc"\n\npub contract KittyItems { \n  // ...\n}\n')),(0,a.kt)("h2",{id:"initialization-arguments"},"Initialization Arguments"),(0,a.kt)("p",null,"Deploying contracts that take initialization arguments\ncan be achieved with adding those arguments to the configuration. "),(0,a.kt)("p",null,"Each deployment can be specified as an object containing\n",(0,a.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"args")," key specifying arguments to be\nused during the deployment. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'...\n  "deployments": {\n    "testnet": {\n      "my-testnet-account": [\n        "NonFungibleToken", {\n            "name": "Foo", \n            "args": [\n                { "type": "String", "value": "Hello World" },\n                { "type": "UInt32", "value": "10" }\n            ]\n        }]\n    }\n  }\n...\n')),(0,a.kt)("p",null,"\u26a0\ufe0f Warning: before proceeding,\nwe recommend reading the ",(0,a.kt)("a",{parentName:"p",href:"/tools/flow-cli/security"},"Flow CLI security guidelines"),"\nto learn about the best practices for private key storage."),(0,a.kt)("h2",{id:"dependency-resolution"},"Dependency Resolution"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," command attempts to resolve the import statements in all contracts being deployed."),(0,a.kt)("p",null,"After the dependencies are found, the CLI will deploy the contracts in a deterministic order\nsuch that no contract is deployed until all of its dependencies are deployed.\nThe command will return an error if no such ordering exists due to one or more cyclic dependencies."),(0,a.kt)("p",null,"In the example above, ",(0,a.kt)("inlineCode",{parentName:"p"},"Foo")," will always be deployed before ",(0,a.kt)("inlineCode",{parentName:"p"},"Bar"),"."),(0,a.kt)("h2",{id:"address-replacement"},"Address Replacement"),(0,a.kt)("p",null,"After resolving all dependencies, the ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," command rewrites each contract so\nthat its dependencies are imported from their ",(0,a.kt)("em",{parentName:"p"},"target addresses")," rather than their\nsource file location."),(0,a.kt)("p",null,"The rewritten versions are then deployed to their respective targets,\nleaving the original contract files unchanged."),(0,a.kt)("p",null,"In the example above, the ",(0,a.kt)("inlineCode",{parentName:"p"},"KittyItems")," contract would be rewritten like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence:title=KittyItems.cdc"},"import NonFungibleToken from 0xf8d6e0586b0a20c7\n\npub contract KittyItems { \n  // ...\n}\n")),(0,a.kt)("h2",{id:"merging-multiple-configuration-files"},"Merging Multiple Configuration Files"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"-f")," flag multiple times to merge several configuration files. "),(0,a.kt)("p",null,"If there is an overlap in any of the fields in the configuration between two or more configuration files, the value of\nthe overlapped field in the resulting configuration will come from the configuration file that is on the further right\norder in the list of configuration files specified in the -f flag "),(0,a.kt)("p",null,"Let's look at an example of ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," commands with multiple configuration files below"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence:title=flow.json"},'{\n    "accounts": {\n        "admin-account": {\n            "address": "f8d6e0586b0a20c7",\n            "key": "21c5dfdeb0ff03a7a73ef39788563b62c89adea67bbb21ab95e5f710bd1d40b7"\n        }, \n        "test-account": {\n            "address": "f8d6e0586b0a20c8",\n            "key": "52d5dfdeb0ff03a7a73ef39788563b62c89adea67bbb21ab95e5f710bd1d51c9"\n        }\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence:title=private.json"},'{\n    "accounts":{\n        "admin-account":{\n            "address":"f1d6e0586b0a20c7",\n            "key":"3335dfdeb0ff03a7a73ef39788563b62c89adea67bbb21ab95e5f710bd1d40b7"\n        }\n    }\n}\n')),(0,a.kt)("p",null,"In the example above, when we try to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," command with multiple configuration files and there is an overlap\nin the ",(0,a.kt)("inlineCode",{parentName:"p"},"admin-account")," account in ",(0,a.kt)("inlineCode",{parentName:"p"},"accounts")," field of the configuration, the resulting configuration will be like this"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"flow project deploy -f flow.json -f private.json"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre"},'{\n    "accounts":{\n        "admin-account":{\n            "address":"f1d6e0586b0a20c7",\n            "key":"3335dfdeb0ff03a7a73ef39788563b62c89adea67bbb21ab95e5f710bd1d40b7"\n        }, \n        "test-account":{\n            "address":"f8d6e0586b0a20c8",\n            "key":"52d5dfdeb0ff03a7a73ef39788563b62c89adea67bbb21ab95e5f710bd1d51c9"\n        }\n    }\n}\n'))),(0,a.kt)("h2",{id:"flags"},"Flags"),(0,a.kt)("h3",{id:"allow-updates"},"Allow Updates"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--update")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"false")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"Indicate whether to overwrite and upgrade existing contracts. Only contracts with difference with existing contracts\nwill be overwritten."),(0,a.kt)("h3",{id:"show-update-diff"},"Show Update Diff"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--show-diff")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"false")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"Shows a diff to approve before updating between deployed contract and new contract updates."),(0,a.kt)("h3",{id:"host"},"Host"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--host")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: an IP address or hostname."),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"127.0.0.1:3569")," (Flow Emulator)")),(0,a.kt)("p",null,"Specify the hostname of the Access API that will be\nused to execute the command. This flag overrides\nany host defined by the ",(0,a.kt)("inlineCode",{parentName:"p"},"--network")," flag."),(0,a.kt)("h3",{id:"network-key"},"Network Key"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--network-key")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: A valid network public key of the host in hex string format")),(0,a.kt)("p",null,"Specify the network public key of the Access API that will be\nused to create a secure GRPC client when executing the command."),(0,a.kt)("h3",{id:"network"},"Network"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--network")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-n")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: the name of a network defined in the configuration (",(0,a.kt)("inlineCode",{parentName:"li"},"flow.json"),")"),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"emulator"))),(0,a.kt)("p",null,"Specify which network you want the command to use for execution."),(0,a.kt)("h3",{id:"filter"},"Filter"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--filter")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-x")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: a case-sensitive name of the result property.")),(0,a.kt)("p",null,"Specify any property name from the result you want to return as the only value."),(0,a.kt)("h3",{id:"output"},"Output"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--output")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-o")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,a.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"inline"))),(0,a.kt)("p",null,"Specify the format of the command results."),(0,a.kt)("h3",{id:"save"},"Save"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--save")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-s")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem.")),(0,a.kt)("p",null,"Specify the filename where you want the result to be saved"),(0,a.kt)("h3",{id:"log"},"Log"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--log")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-l")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"debug")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"info"))),(0,a.kt)("p",null,"Specify the log level. Control how much output you want to see during command execution."),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--config-path")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-f")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem."),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"flow.json"))),(0,a.kt)("p",null,"Specify the path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"flow.json")," configuration file.\nYou can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"-f")," flag multiple times to merge\nseveral configuration files."),(0,a.kt)("h3",{id:"version-check"},"Version Check"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--skip-version-check")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"Skip version check during start up to speed up process for slow connections."))}s.isMDXComponent=!0}}]);