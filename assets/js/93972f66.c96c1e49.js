"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[18449],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),m=l,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return n?a.createElement(f,r(r({ref:t},s),{},{components:n})):a.createElement(f,r({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:l,r[1]=o;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},42999:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(87462),l=(n(67294),n(3905));const i={title:"Decode a Transaction with the Flow CLI",sidebar_title:"Decode a Transaction",description:"How to decode a Flow transaction from the command line"},r=void 0,o={unversionedId:"Tooling/flow-cli/decode-transactions",id:"Tooling/flow-cli/decode-transactions",title:"Decode a Transaction with the Flow CLI",description:"How to decode a Flow transaction from the command line",source:"@site/docs/Tooling/flow-cli/decode-transactions.md",sourceDirName:"Tooling/flow-cli",slug:"/Tooling/flow-cli/decode-transactions",permalink:"/docs/next/Tooling/flow-cli/decode-transactions",draft:!1,tags:[],version:"current",lastUpdatedBy:"Alex",lastUpdatedAt:1682971554,formattedLastUpdatedAt:"May 1, 2023",frontMatter:{title:"Decode a Transaction with the Flow CLI",sidebar_title:"Decode a Transaction",description:"How to decode a Flow transaction from the command line"},sidebar:"tutorialSidebar",previous:{title:"Decode Public Keys with the Flow CLI",permalink:"/docs/next/Tooling/flow-cli/decode-keys"},next:{title:"Deploy a Flow Project",permalink:"/docs/next/Tooling/flow-cli/deploy-project-contracts"}},c={},d=[{value:"Example Usage",id:"example-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Filename",id:"filename",level:3},{value:"Flags",id:"flags",level:2},{value:"Include Fields",id:"include-fields",level:3},{value:"Output",id:"output",level:3},{value:"Save",id:"save",level:3},{value:"Version Check",id:"version-check",level:3}],s={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The Flow CLI provides a command to decode a transaction\nfrom RLP in a file. It uses same transaction format as get command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"flow transactions decode <file>\n")),(0,l.kt)("h2",{id:"example-usage"},"Example Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"> flow transactions decode ./rlp-file.rlp \n\nID      c1a52308fb906358d4a33c1f1d5fc458d3cfea0d570a51a9dea915b90d678346\nPayer       83de1a7075f190a1\nAuthorizers [83de1a7075f190a1]\n\nProposal Key:   \n    Address     83de1a7075f190a1\n    Index       1\n    Sequence    1\n\nNo Payload Signatures\n\nEnvelope Signature 0: 83de1a7075f190a1\nSignatures (minimized, use --include signatures)\n\nCode (hidden, use --include code)\n\nPayload (hidden, use --include payload)\n")),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("h3",{id:"filename"},"Filename"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Name: ",(0,l.kt)("inlineCode",{parentName:"li"},"<file_name>")),(0,l.kt)("li",{parentName:"ul"},"Valid Input: file name.")),(0,l.kt)("p",null,"The first argument is the filename containing the transaction RLP."),(0,l.kt)("h2",{id:"flags"},"Flags"),(0,l.kt)("h3",{id:"include-fields"},"Include Fields"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--include")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"code"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"payload"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"signatures"))),(0,l.kt)("p",null,"Specify fields to include in the result output. Applies only to the text output."),(0,l.kt)("h3",{id:"output"},"Output"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--output")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-o")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"inline"))),(0,l.kt)("p",null,"Specify the format of the command results."),(0,l.kt)("h3",{id:"save"},"Save"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--save")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-s")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem.")),(0,l.kt)("p",null,"Specify the filename where you want the result to be saved"),(0,l.kt)("h3",{id:"version-check"},"Version Check"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--skip-version-check")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)("p",null,"Skip version check during start up to speed up process for slow connections."))}p.isMDXComponent=!0}}]);