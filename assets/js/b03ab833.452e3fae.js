"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4485],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,k=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(k,i(i({ref:t},s),{},{components:n})):r.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},33491:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={},i="Resource Vault",l={unversionedId:"Concepts/token-standards/flow-ft/FungibleToken/FungibleToken_Vault",id:"Concepts/token-standards/flow-ft/FungibleToken/FungibleToken_Vault",title:"Resource Vault",description:"The resource that contains the functions to send and receive tokens.",source:"@site/docs/Concepts/token-standards/flow-ft/FungibleToken/FungibleToken_Vault.md",sourceDirName:"Concepts/token-standards/flow-ft/FungibleToken",slug:"/Concepts/token-standards/flow-ft/FungibleToken/FungibleToken_Vault",permalink:"/docs/Concepts/token-standards/flow-ft/FungibleToken/FungibleToken_Vault",draft:!1,tags:[],version:"current",lastUpdatedBy:"Alex",lastUpdatedAt:1683062072,formattedLastUpdatedAt:"May 2, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Resource Interface Receiver",permalink:"/docs/Concepts/token-standards/flow-ft/FungibleToken/FungibleToken_Receiver"},next:{title:"Contract FungibleTokenMetadataViews",permalink:"/docs/Concepts/token-standards/flow-ft/FungibleTokenMetadataViews/"}},c={},u=[{value:"Initializer",id:"initializer",level:3},{value:"Functions",id:"functions",level:2},{value:"fun <code>withdraw()</code>",id:"fun-withdraw",level:3},{value:"fun <code>deposit()</code>",id:"fun-deposit",level:3}],s={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"resource-vault"},"Resource ",(0,a.kt)("inlineCode",{parentName:"h1"},"Vault")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"resource Vault {\n\n    balance:  UFix64\n}\n")),(0,a.kt)("p",null,"The resource that contains the functions to send and receive tokens.\nThe declaration of a concrete type in a contract interface means that\nevery Fungible Token contract that implements the FungibleToken interface\nmust define a concrete ",(0,a.kt)("inlineCode",{parentName:"p"},"Vault")," resource that conforms to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Provider"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Receiver"),",\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"Balance")," interfaces, and declares their required fields and functions"),(0,a.kt)("p",null,"Implemented Interfaces:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Provider")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Receiver")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Balance"))),(0,a.kt)("h3",{id:"initializer"},"Initializer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"func init(balance UFix64)\n")),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"fun-withdraw"},"fun ",(0,a.kt)("inlineCode",{parentName:"h3"},"withdraw()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"func withdraw(amount UFix64): Vault\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"fun-deposit"},"fun ",(0,a.kt)("inlineCode",{parentName:"h3"},"deposit()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cadence"},"func deposit(from Vault)\n")),(0,a.kt)("p",null,"Takes a Vault and deposits it into the implementing resource type"),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"from : ",(0,a.kt)("em",{parentName:"li"},"The Vault resource containing the funds that will be deposited"))),(0,a.kt)("hr",null))}p.isMDXComponent=!0}}]);