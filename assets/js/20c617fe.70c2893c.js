"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[15466],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=l.createContext({}),s=function(e){var t=l.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return l.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,k=d["".concat(u,".").concat(m)]||d[m]||c[m]||i;return n?l.createElement(k,o(o({ref:t},p),{},{components:n})):l.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r[d]="string"==typeof e?e:a,o[1]=r;for(var s=2;s<i;s++)o[s]=n[s];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},70292:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>s});var l=n(87462),a=(n(67294),n(3905));const i={title:"Send a Transaction with the Flow CLI",sidebar_title:"Send a Transaction",description:"How to send a Flow transaction from the command line"},o=void 0,r={unversionedId:"tools/flow-cli/send-transactions",id:"version-legacy/tools/flow-cli/send-transactions",title:"Send a Transaction with the Flow CLI",description:"How to send a Flow transaction from the command line",source:"@site/versioned_docs/version-legacy/tools/flow-cli/send-transactions.md",sourceDirName:"tools/flow-cli",slug:"/tools/flow-cli/send-transactions",permalink:"/docs/tools/flow-cli/send-transactions",draft:!1,tags:[],version:"legacy",lastUpdatedBy:"Alex",lastUpdatedAt:1683049658,formattedLastUpdatedAt:"May 2, 2023",frontMatter:{title:"Send a Transaction with the Flow CLI",sidebar_title:"Send a Transaction",description:"How to send a Flow transaction from the command line"},sidebar:"tutorialSidebar",previous:{title:"Send Signed Transaction with the Flow CLI",permalink:"/docs/tools/flow-cli/send-signed-transactions"},next:{title:"Sign a Transaction with the Flow CLI",permalink:"/docs/tools/flow-cli/sign-transaction"}},u={},s=[{value:"Example Usage",id:"example-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Code Filename",id:"code-filename",level:3},{value:"Arguments",id:"arguments-1",level:3},{value:"Flags",id:"flags",level:2},{value:"Include Fields",id:"include-fields",level:3},{value:"Code",id:"code",level:3},{value:"Results",id:"results",level:3},{value:"Exclude Fields",id:"exclude-fields",level:3},{value:"Signer",id:"signer",level:3},{value:"Proposer",id:"proposer",level:3},{value:"Payer",id:"payer",level:3},{value:"Authorizer",id:"authorizer",level:3},{value:"Arguments JSON",id:"arguments-json",level:3},{value:"Gas Limit",id:"gas-limit",level:3},{value:"Host",id:"host",level:3},{value:"Network Key",id:"network-key",level:3},{value:"Network",id:"network",level:3},{value:"Filter",id:"filter",level:3},{value:"Output",id:"output",level:3},{value:"Save",id:"save",level:3},{value:"Log",id:"log",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Version Check",id:"version-check",level:3}],p={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Flow CLI provides a command to sign and send transactions to\nany Flow Access API."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"flow transactions send <code filename> [<argument> <argument>...] [flags]\n")),(0,a.kt)("h2",{id:"example-usage"},"Example Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'> flow transactions send ./tx.cdc "Hello"\n    \nStatus      \u2705 SEALED\nID      b04b6bcc3164f5ee6b77fa502c3a682e0db57fc47e5b8a8ef3b56aae50ad49c8\nPayer       f8d6e0586b0a20c7\nAuthorizers [f8d6e0586b0a20c7]\n\nProposal Key:   \n    Address f8d6e0586b0a20c7\n    Index   0\n    Sequence    0\n\nNo Payload Signatures\n\nEnvelope Signature 0: f8d6e0586b0a20c7\nSignatures (minimized, use --include signatures)\n\nEvents:  None\n\nCode (hidden, use --include code)\n\nPayload (hidden, use --include payload)\n\n')),(0,a.kt)("p",null,"Multiple arguments example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"> flow transactions send tx1.cdc Foo 1 2 10.9 0x1 '[123,222]' '[\"a\",\"b\"]'\n")),(0,a.kt)("p",null,"Transaction code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"transaction(a: String, b: Int, c: UInt16, d: UFix64, e: Address, f: [Int], g: [String]) {\n    prepare(authorizer: AuthAccount) {}\n}\n")),(0,a.kt)("p",null,"In the above example, the ",(0,a.kt)("inlineCode",{parentName:"p"},"flow.json")," file would look something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "accounts": {\n    "my-testnet-account": {\n      "address": "a2c4941b5f3c7151",\n      "key": "12c5dfde...bb2e542f1af710bd1d40b2"\n    }\n  }\n}\n')),(0,a.kt)("p",null,"JSON arguments from a file example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'> flow transactions send tx1.cdc --args-json "$(cat args.json)"\n')),(0,a.kt)("h2",{id:"arguments"},"Arguments"),(0,a.kt)("h3",{id:"code-filename"},"Code Filename"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Name: ",(0,a.kt)("inlineCode",{parentName:"li"},"code filename")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: Any filename and path valid on the system.")),(0,a.kt)("p",null,"The first argument is a path to a Cadence file containing the\ntransaction to be executed."),(0,a.kt)("h3",{id:"arguments-1"},"Arguments"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Name: ",(0,a.kt)("inlineCode",{parentName:"li"},"argument")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: valid ",(0,a.kt)("a",{parentName:"li",href:"https://docs.onflow.org/cadence/json-cadence-spec/"},"cadence values"),"\nmatching argument type in transaction code.")),(0,a.kt)("p",null,"Input arguments values matching corresponding types in the source code and passed in the same order."),(0,a.kt)("h2",{id:"flags"},"Flags"),(0,a.kt)("h3",{id:"include-fields"},"Include Fields"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--include")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,a.kt)("inlineCode",{parentName:"li"},"code"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"payload"))),(0,a.kt)("p",null,"Specify fields to include in the result output. Applies only to the text output."),(0,a.kt)("h3",{id:"code"},"Code"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--code"))),(0,a.kt)("p",null,"\u26a0\ufe0f  No longer supported: use filename argument."),(0,a.kt)("h3",{id:"results"},"Results"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--results"))),(0,a.kt)("p",null,"\u26a0\ufe0f  No longer supported: all transactions will provide result."),(0,a.kt)("h3",{id:"exclude-fields"},"Exclude Fields"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--exclude")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,a.kt)("inlineCode",{parentName:"li"},"events"))),(0,a.kt)("p",null,"Specify fields to exclude from the result output. Applies only to the text output."),(0,a.kt)("h3",{id:"signer"},"Signer"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--signer")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: the name of an account defined in the configuration (",(0,a.kt)("inlineCode",{parentName:"li"},"flow.json"),")")),(0,a.kt)("p",null,"Specify the name of the account that will be used to sign the transaction."),(0,a.kt)("h3",{id:"proposer"},"Proposer"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--proposer")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: the name of an account defined in the configuration (",(0,a.kt)("inlineCode",{parentName:"li"},"flow.json"),")")),(0,a.kt)("p",null,"Specify the name of the account that will be used as proposer in the transaction."),(0,a.kt)("h3",{id:"payer"},"Payer"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--payer")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: the name of an account defined in the configuration (",(0,a.kt)("inlineCode",{parentName:"li"},"flow.json"),")")),(0,a.kt)("p",null,"Specify the name of the account that will be used as payer in the transaction."),(0,a.kt)("h3",{id:"authorizer"},"Authorizer"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--authorizer")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: the name of a single or multiple comma-separated accounts defined in the configuration (",(0,a.kt)("inlineCode",{parentName:"li"},"flow.json"),")")),(0,a.kt)("p",null,"Specify the name of the account(s) that will be used as authorizer(s) in the transaction. If you want to provide multiple authorizers separate them using commas (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"alice,bob"),")"),(0,a.kt)("h3",{id:"arguments-json"},"Arguments JSON"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--args-json")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: arguments in JSON-Cadence form."),(0,a.kt)("li",{parentName:"ul"},"Example: ",(0,a.kt)("inlineCode",{parentName:"li"},'flow transactions send ./tx.cdc \'[{"type": "String", "value": "Hello World"}]\''))),(0,a.kt)("p",null,"Arguments passed to the Cadence transaction in Cadence JSON format.\nCadence JSON format contains ",(0,a.kt)("inlineCode",{parentName:"p"},"type")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," keys and is\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.onflow.org/cadence/json-cadence-spec/"},"documented here"),"."),(0,a.kt)("h3",{id:"gas-limit"},"Gas Limit"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--gas-limit")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: an integer greater than zero."),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"1000"))),(0,a.kt)("p",null,"Specify the gas limit for this transaction."),(0,a.kt)("h3",{id:"host"},"Host"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--host")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: an IP address or hostname."),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"127.0.0.1:3569")," (Flow Emulator)")),(0,a.kt)("p",null,"Specify the hostname of the Access API that will be\nused to execute the command. This flag overrides\nany host defined by the ",(0,a.kt)("inlineCode",{parentName:"p"},"--network")," flag."),(0,a.kt)("h3",{id:"network-key"},"Network Key"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--network-key")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: A valid network public key of the host in hex string format")),(0,a.kt)("p",null,"Specify the network public key of the Access API that will be\nused to create a secure GRPC client when executing the command."),(0,a.kt)("h3",{id:"network"},"Network"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--network")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-n")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: the name of a network defined in the configuration (",(0,a.kt)("inlineCode",{parentName:"li"},"flow.json"),")"),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"emulator"))),(0,a.kt)("p",null,"Specify which network you want the command to use for execution."),(0,a.kt)("h3",{id:"filter"},"Filter"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--filter")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-x")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: a case-sensitive name of the result property.")),(0,a.kt)("p",null,"Specify any property name from the result you want to return as the only value."),(0,a.kt)("h3",{id:"output"},"Output"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--output")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-o")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,a.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"inline"))),(0,a.kt)("p",null,"Specify the format of the command results."),(0,a.kt)("h3",{id:"save"},"Save"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--save")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-s")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem.")),(0,a.kt)("p",null,"Specify the filename where you want the result to be saved"),(0,a.kt)("h3",{id:"log"},"Log"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--log")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-l")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"debug")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"info"))),(0,a.kt)("p",null,"Specify the log level. Control how much output you want to see during command execution."),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--config-path")),(0,a.kt)("li",{parentName:"ul"},"Short Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"-f")),(0,a.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem."),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"flow.json"))),(0,a.kt)("p",null,"Specify the path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"flow.json")," configuration file.\nYou can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"-f")," flag multiple times to merge\nseveral configuration files."),(0,a.kt)("h3",{id:"version-check"},"Version Check"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Flag: ",(0,a.kt)("inlineCode",{parentName:"li"},"--skip-version-check")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"Skip version check during start up to speed up process for slow connections."))}c.isMDXComponent=!0}}]);