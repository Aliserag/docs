"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2785],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,u=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),d=c(n),m=l,k=d["".concat(u,".").concat(m)]||d[m]||s[m]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,o=new Array(i);o[0]=m;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r[d]="string"==typeof e?e:l,o[1]=r;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},57268:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=n(87462),l=(n(67294),n(3905));const i={title:"Deploy a Contract with the Flow CLI",sidebar_title:"Deploy a Contract"},o=void 0,r={unversionedId:"tools/flow-cli/account-add-contract",id:"tools/flow-cli/account-add-contract",title:"Deploy a Contract with the Flow CLI",description:"Deploy a new contract to a Flow account using the Flow CLI.",source:"@site/docs/tools/flow-cli/account-add-contract.md",sourceDirName:"tools/flow-cli",slug:"/tools/flow-cli/account-add-contract",permalink:"/tools/flow-cli/account-add-contract",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682538265,formattedLastUpdatedAt:"Apr 26, 2023",frontMatter:{title:"Deploy a Contract with the Flow CLI",sidebar_title:"Deploy a Contract"},sidebar:"tutorialSidebar",previous:{title:"Flow CLI Documentation",permalink:"/tools/flow-cli/"},next:{title:"Remove a Contract with the Flow CLI",permalink:"/tools/flow-cli/account-remove-contract"}},u={},c=[{value:"Example Usage",id:"example-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Name",id:"name",level:3},{value:"Filename",id:"filename",level:3},{value:"Arguments",id:"arguments-1",level:3},{value:"Flags",id:"flags",level:2},{value:"Signer",id:"signer",level:3},{value:"Arguments JSON",id:"arguments-json",level:3},{value:"Include Fields",id:"include-fields",level:3},{value:"Host",id:"host",level:3},{value:"Network Key",id:"network-key",level:3},{value:"Network",id:"network",level:3},{value:"Filter",id:"filter",level:3},{value:"Output",id:"output",level:3},{value:"Save",id:"save",level:3},{value:"Log",id:"log",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Version Check",id:"version-check",level:3}],p={toc:c},d="wrapper";function s(e){let{components:t,...n}=e;return(0,l.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Deploy a new contract to a Flow account using the Flow CLI.   "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"flow accounts add-contract <filename> [<argument> <argument>...] [flags]\n")),(0,l.kt)("p",null,"\u26a0\ufe0f  Deprecation notice: using name argument in adding contract command will be deprecated soon."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"flow accounts add-contract <name> <filename> [<argument> <argument>...] [flags]\n")),(0,l.kt)("h2",{id:"example-usage"},"Example Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"> flow accounts add-contract ./FungibleToken.cdc\n\nContract 'FungibleToken' deployed to the account 0xf8d6e0586b0a20c7\n\nAddress  0xf8d6e0586b0a20c7\nBalance  99999999999.70000000\nKeys     1\n\nKey 0   Public Key       640a5a359bf3536d15192f18d872d57c98a96cb871b92b70cecb0739c2d5c37b4be12548d3526933c2cda9b0b9c69412f45ffb6b85b6840d8569d969fe84e5b7\n    Weight           1000\n    Signature Algorithm  ECDSA_P256\n    Hash Algorithm       SHA3_256\n    Revoked          false\n    Sequence Number      6\n    Index            0\n\nContracts Deployed: 1\nContract: 'FungibleToken'\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Testnet Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"> flow accounts add-contract ./FungibleToken.cdc --signer alice --network testnet\n\nContract 'FungibleToken' deployed to the account 0xf8d6e0586b0a20c7\n\nAddress  0xf8d6e0586b0a20c7\nBalance  99999999999.70000000\nKeys     1\n\nKey 0   Public Key       640a5a359bf3536d15192f18d872d57c98a96cb871b92b70cecb0739c2d5c37b4be12548d3526933c2cda9b0b9c69412f45ffb6b85b6840d8569d969fe84e5b7\n    Weight           1000\n    Signature Algorithm  ECDSA_P256\n    Hash Algorithm       SHA3_256\n    Revoked          false\n    Sequence Number      6\n    Index            0\n\nContracts Deployed: 1\nContract: 'FungibleToken'\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Make sure alice account is defined in flow.json")),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("h3",{id:"name"},"Name"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Name: ",(0,l.kt)("inlineCode",{parentName:"li"},"name")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: any string value.")),(0,l.kt)("p",null,"Name of the contract as it is defined in the contract source code."),(0,l.kt)("p",null,"\u26a0\ufe0f  Deprecation notice: use filename argument only, no need to use name argument."),(0,l.kt)("h3",{id:"filename"},"Filename"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Name: ",(0,l.kt)("inlineCode",{parentName:"li"},"filename")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem.")),(0,l.kt)("p",null,"Path to the file containing the contract source code."),(0,l.kt)("h3",{id:"arguments-1"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Name: ",(0,l.kt)("inlineCode",{parentName:"li"},"argument")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: valid ",(0,l.kt)("a",{parentName:"li",href:"https://docs.onflow.org/cadence/json-cadence-spec/"},"cadence values"),"\nmatching argument type in transaction code.")),(0,l.kt)("p",null,"Input arguments values matching corresponding types in the source code and passed in the same order."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"> flow accounts add-contract ./contract.cdc Hello 2\n")),(0,l.kt)("p",null,"Transaction code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pub contract HelloWorld {\n    init(a:String, b:Int) {\n    }\n}\n")),(0,l.kt)("h2",{id:"flags"},"Flags"),(0,l.kt)("h3",{id:"signer"},"Signer"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--signer")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: the name of an account defined in the configuration (",(0,l.kt)("inlineCode",{parentName:"li"},"flow.json"),")")),(0,l.kt)("p",null,"Specify the name of the account that will be used to sign the transaction."),(0,l.kt)("h3",{id:"arguments-json"},"Arguments JSON"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--args-json")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: arguments in JSON-Cadence form."),(0,l.kt)("li",{parentName:"ul"},"Example: ",(0,l.kt)("inlineCode",{parentName:"li"},'flow accounts add-contract ./tx.cdc \'[{"type": "String", "value": "Hello"}]\''))),(0,l.kt)("p",null,"Arguments passed to the Cadence transaction in Cadence JSON format.\nCadence JSON format contains ",(0,l.kt)("inlineCode",{parentName:"p"},"type")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," keys and is\n",(0,l.kt)("a",{parentName:"p",href:"https://docs.onflow.org/cadence/json-cadence-spec/"},"documented here"),"."),(0,l.kt)("h3",{id:"include-fields"},"Include Fields"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--include")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"contracts"))),(0,l.kt)("p",null,"Specify fields to include in the result output. Applies only to the text output."),(0,l.kt)("h3",{id:"host"},"Host"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--host")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: an IP address or hostname."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"127.0.0.1:3569")," (Flow Emulator)")),(0,l.kt)("p",null,"Specify the hostname of the Access API that will be\nused to execute the command. This flag overrides\nany host defined by the ",(0,l.kt)("inlineCode",{parentName:"p"},"--network")," flag."),(0,l.kt)("h3",{id:"network-key"},"Network Key"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--network-key")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: A valid network public key of the host in hex string format")),(0,l.kt)("p",null,"Specify the network public key of the Access API that will be\nused to create a secure GRPC client when executing the command."),(0,l.kt)("h3",{id:"network"},"Network"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--network")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-n")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: the name of a network defined in the configuration (",(0,l.kt)("inlineCode",{parentName:"li"},"flow.json"),")."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"emulator"))),(0,l.kt)("p",null,"Specify which network you want the command to use for execution."),(0,l.kt)("h3",{id:"filter"},"Filter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--filter")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-x")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: a case-sensitive name of the result property.")),(0,l.kt)("p",null,"Specify any property name from the result you want to return as the only value."),(0,l.kt)("h3",{id:"output"},"Output"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--output")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-o")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"inline"))),(0,l.kt)("p",null,"Specify the format of the command results."),(0,l.kt)("h3",{id:"save"},"Save"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--save")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-s")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem.")),(0,l.kt)("p",null,"Specify the filename where you want the result to be saved"),(0,l.kt)("h3",{id:"log"},"Log"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--log")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-l")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,l.kt)("inlineCode",{parentName:"li"},"none"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"debug")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"info"))),(0,l.kt)("p",null,"Specify the log level. Control how much output you want to see during command execution."),(0,l.kt)("h3",{id:"configuration"},"Configuration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--config-path")),(0,l.kt)("li",{parentName:"ul"},"Short Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"-f")),(0,l.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem."),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"flow.json"))),(0,l.kt)("p",null,"Specify the path to the ",(0,l.kt)("inlineCode",{parentName:"p"},"flow.json")," configuration file.\nYou can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"-f")," flag multiple times to merge\nseveral configuration files."),(0,l.kt)("h3",{id:"version-check"},"Version Check"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flag: ",(0,l.kt)("inlineCode",{parentName:"li"},"--skip-version-check")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)("p",null,"Skip version check during start up to speed up process for slow connections."))}s.isMDXComponent=!0}}]);