"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3672],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var l=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=l.createContext({}),s=function(e){var t=l.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return l.createElement(u.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,k=p["".concat(u,".").concat(m)]||p[m]||c[m]||a;return n?l.createElement(k,o(o({ref:t},d),{},{components:n})):l.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r[p]="string"==typeof e?e:i,o[1]=r;for(var s=2;s<a;s++)o[s]=n[s];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},90875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>s});var l=n(87462),i=(n(67294),n(3905));const a={title:"Send Signed Transaction with the Flow CLI",sidebar_title:"Send Signed Transaction",description:"How to send a signed Flow transaction from the command line"},o=void 0,r={unversionedId:"tools/flow-cli/send-signed-transactions",id:"tools/flow-cli/send-signed-transactions",title:"Send Signed Transaction with the Flow CLI",description:"How to send a signed Flow transaction from the command line",source:"@site/docs/tools/flow-cli/send-signed-transactions.md",sourceDirName:"tools/flow-cli",slug:"/tools/flow-cli/send-signed-transactions",permalink:"/tools/flow-cli/send-signed-transactions",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682618258,formattedLastUpdatedAt:"Apr 27, 2023",frontMatter:{title:"Send Signed Transaction with the Flow CLI",sidebar_title:"Send Signed Transaction",description:"How to send a signed Flow transaction from the command line"},sidebar:"tutorialSidebar",previous:{title:"Flow CLI security",permalink:"/tools/flow-cli/security"},next:{title:"Send a Transaction with the Flow CLI",permalink:"/tools/flow-cli/send-transactions"}},u={},s=[{value:"Example Usage",id:"example-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Signed Code Filename",id:"signed-code-filename",level:3},{value:"Flags",id:"flags",level:2},{value:"Include Fields",id:"include-fields",level:3},{value:"Exclude Fields",id:"exclude-fields",level:3},{value:"Filter",id:"filter",level:3},{value:"Host",id:"host",level:3},{value:"Network Key",id:"network-key",level:3},{value:"Network",id:"network",level:3},{value:"Output",id:"output",level:3},{value:"Save",id:"save",level:3},{value:"Log",id:"log",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Version Check",id:"version-check",level:3}],d={toc:s},p="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The Flow CLI provides a command to send signed transactions to\nany Flow Access API."),(0,i.kt)("p",null,"Use this functionality in the following order:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Use the ",(0,i.kt)("inlineCode",{parentName:"li"},"build")," command to build the transaction."),(0,i.kt)("li",{parentName:"ol"},"Use the ",(0,i.kt)("inlineCode",{parentName:"li"},"sign")," command to sign with each account specified in the build process."),(0,i.kt)("li",{parentName:"ol"},"Use this command (",(0,i.kt)("inlineCode",{parentName:"li"},"send-signed"),") to submit the signed transaction to the Flow network.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"flow transactions send-signed <signed transaction filename>\n")),(0,i.kt)("h2",{id:"example-usage"},"Example Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"> flow transactions send-signed ./signed.rlp\n    \nStatus      \u2705 SEALED\nID      528332aceb288cdfe4d11d6522aa27bed94fb3266b812cb350eb3526ed489d99\nPayer       f8d6e0586b0a20c7\nAuthorizers [f8d6e0586b0a20c7]\n\nProposal Key:   \n    Address f8d6e0586b0a20c7\n    Index   0\n    Sequence    0\n\nNo Payload Signatures\n\nEnvelope Signature 0: f8d6e0586b0a20c7\nSignatures (minimized, use --include signatures)\n\nEvents:  None\n\nCode (hidden, use --include code)\n\nPayload (hidden, use --include payload)\n\n")),(0,i.kt)("h2",{id:"arguments"},"Arguments"),(0,i.kt)("h3",{id:"signed-code-filename"},"Signed Code Filename"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: ",(0,i.kt)("inlineCode",{parentName:"li"},"signed transaction filename")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: Any filename and path valid on the system.")),(0,i.kt)("p",null,"The first argument is a path to a Cadence file containing the\ntransaction to be executed."),(0,i.kt)("h2",{id:"flags"},"Flags"),(0,i.kt)("h3",{id:"include-fields"},"Include Fields"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--include")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,i.kt)("inlineCode",{parentName:"li"},"code"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"payload"))),(0,i.kt)("p",null,"Specify fields to include in the result output. Applies only to the text output."),(0,i.kt)("h3",{id:"exclude-fields"},"Exclude Fields"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--exclude")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,i.kt)("inlineCode",{parentName:"li"},"events"))),(0,i.kt)("p",null,"Specify fields to exclude from the result output. Applies only to the text output."),(0,i.kt)("h3",{id:"filter"},"Filter"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--filter")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-x")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: a case-sensitive name of the result property.")),(0,i.kt)("p",null,"Specify any property name from the result you want to return as the only value."),(0,i.kt)("h3",{id:"host"},"Host"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--host")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: an IP address or hostname."),(0,i.kt)("li",{parentName:"ul"},"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"127.0.0.1:3569")," (Flow Emulator)")),(0,i.kt)("p",null,"Specify the hostname of the Access API that will be\nused to execute the command. This flag overrides\nany host defined by the ",(0,i.kt)("inlineCode",{parentName:"p"},"--network")," flag."),(0,i.kt)("h3",{id:"network-key"},"Network Key"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--network-key")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: A valid network public key of the host in hex string format")),(0,i.kt)("p",null,"Specify the network public key of the Access API that will be\nused to create a secure GRPC client when executing the command."),(0,i.kt)("h3",{id:"network"},"Network"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--network")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-n")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: the name of a network defined in the configuration (",(0,i.kt)("inlineCode",{parentName:"li"},"flow.json"),")"),(0,i.kt)("li",{parentName:"ul"},"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"emulator"))),(0,i.kt)("p",null,"Specify which network you want the command to use for execution."),(0,i.kt)("h3",{id:"output"},"Output"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--output")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-o")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,i.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"inline"))),(0,i.kt)("p",null,"Specify the format of the command results."),(0,i.kt)("h3",{id:"save"},"Save"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--save")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-s")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem.")),(0,i.kt)("p",null,"Specify the filename where you want the result to be saved"),(0,i.kt)("h3",{id:"log"},"Log"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--log")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-l")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: ",(0,i.kt)("inlineCode",{parentName:"li"},"none"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"debug")),(0,i.kt)("li",{parentName:"ul"},"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"info"))),(0,i.kt)("p",null,"Specify the log level. Control how much output you want to see during command execution."),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--config-path")),(0,i.kt)("li",{parentName:"ul"},"Short Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"-f")),(0,i.kt)("li",{parentName:"ul"},"Valid inputs: a path in the current filesystem."),(0,i.kt)("li",{parentName:"ul"},"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"flow.json"))),(0,i.kt)("p",null,"Specify the path to the ",(0,i.kt)("inlineCode",{parentName:"p"},"flow.json")," configuration file.\nYou can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"-f")," flag multiple times to merge\nseveral configuration files."),(0,i.kt)("h3",{id:"version-check"},"Version Check"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Flag: ",(0,i.kt)("inlineCode",{parentName:"li"},"--skip-version-check")),(0,i.kt)("li",{parentName:"ul"},"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"))),(0,i.kt)("p",null,"Skip version check during start up to speed up process for slow connections."))}c.isMDXComponent=!0}}]);