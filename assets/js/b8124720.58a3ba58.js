"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[12105],{3905:(e,o,t)=>{t.d(o,{Zo:()=>d,kt:()=>m});var n=t(67294);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function a(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?a(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function s(e,o){if(null==e)return{};var t,n,r=function(e,o){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),l=function(e){var o=n.useContext(p),t=o;return e&&(t="function"==typeof e?e(o):i(i({},o),e)),t},d=function(e){var o=l(e.components);return n.createElement(p.Provider,{value:o},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},f=n.forwardRef((function(e,o){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(t),f=r,m=c["".concat(p,".").concat(f)]||c[f]||u[f]||a;return t?n.createElement(m,i(i({ref:o},d),{},{components:t})):n.createElement(m,i({ref:o},d))}));function m(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=f;var s={};for(var p in o)hasOwnProperty.call(o,p)&&(s[p]=o[p]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},57357:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(87462),r=(t(67294),t(3905));const a={title:"Spork Process",description:"What to do during a spork"},i=void 0,s={unversionedId:"Concepts/nodes/node-operation/spork",id:"Concepts/nodes/node-operation/spork",title:"Spork Process",description:"What to do during a spork",source:"@site/docs/Concepts/nodes/node-operation/spork.mdx",sourceDirName:"Concepts/nodes/node-operation",slug:"/Concepts/nodes/node-operation/spork",permalink:"/docs/next/Concepts/nodes/node-operation/spork",draft:!1,tags:[],version:"current",lastUpdatedBy:"Alex",lastUpdatedAt:1683049658,formattedLastUpdatedAt:"May 2, 2023",frontMatter:{title:"Spork Process",description:"What to do during a spork"},sidebar:"tutorialSidebar",previous:{title:"Past Spork Info",permalink:"/docs/next/Concepts/nodes/node-operation/past-sporks"},next:{title:"Upcoming Sporks",permalink:"/docs/next/Concepts/nodes/node-operation/upcoming-sporks"}},p={},l=[{value:"Overview",id:"overview",level:2},{value:"Step 1 - Cleaning Up Previous Spork State",id:"step-1---cleaning-up-previous-spork-state",level:2},{value:"Step 2 - Start Your Node",id:"step-2---start-your-node",level:2},{value:"Common Issues",id:"common-issues",level:2},{value:"Error: cannot create connection",id:"error-cannot-create-connection",level:3},{value:"Flow Node Not Booting Up",id:"flow-node-not-booting-up",level:3}],d=(c="Callout",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var c;const u={toc:l},f="wrapper";function m(e){let{components:o,...t}=e;return(0,r.kt)(f,(0,n.Z)({},u,t,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"A spork is a coordinated network upgrade process where node operators upgrade their node software and\nre-initialize with a consolidated representation of the previous spork's state. This enables rapid development\non the Flow Protocol and minimizes the impact of breaking changes."),(0,r.kt)("p",null,"The Flow network sporks approximately once every two months. Upcoming sporks\nare announced in advance on the ",(0,r.kt)("inlineCode",{parentName:"p"},"#flow-validators-announcements")," ",(0,r.kt)("strong",{parentName:"p"},"Discord")," channel\nand in ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/Concepts/nodes/node-operation/upcoming-sporks"},"Upcoming Sporks"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"#flow-validators-announcements")," channel is\nalso used to coordinate during the spork process."),(0,r.kt)("p",null,"This guide is for existing operators participating in a spork. See ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/Concepts/nodes/node-operation/node-bootstrap"},"Node Bootstrap"),"\nfor a guide to joining the network for the first time."),(0,r.kt)("h2",{id:"step-1---cleaning-up-previous-spork-state"},"Step 1 - Cleaning Up Previous Spork State"),(0,r.kt)("p",null,"Once the spork start has been announced on, stop your node and clear your database. The node should stay stopped for the duration of the spork."),(0,r.kt)(d,{type:"warning",mdxType:"Callout"},"You can skip this step if it is your first time running a node on Flow."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Stop your Flow node"),(0,r.kt)("li",{parentName:"ol"},"Clear the contents of your ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," directory that you have previously created. The default location is ",(0,r.kt)("inlineCode",{parentName:"li"},"/var/flow/data"),". The ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," directory contains the Flow chain state.")),(0,r.kt)(d,{type:"warning",mdxType:"Callout"},(0,r.kt)("p",null,"If you had a previous node running on ",(0,r.kt)("strong",{parentName:"p"},"mainnet 16"),", you'll need to turn it\noff just before joining the updated network and re-start your node with the\nupdated configuration. Refer to Discord communications for guidance during the spork.")),(0,r.kt)("h2",{id:"step-2---start-your-node"},"Step 2 - Start Your Node"),(0,r.kt)("p",null,"Once you receive an announcement that the spork process is complete (via Discord), you will need to fetch the genesis info, update your runtime configuration and then boot your Flow node up!"),(0,r.kt)(d,{type:"warning",mdxType:"Callout"},(0,r.kt)("p",null,"The Flow team will provide you a new token ",(0,r.kt)("inlineCode",{parentName:"p"},"PULL_TOKEN")," to pull the genesis info from. (Please do NOT use the original Token that you used in Step 1) The ",(0,r.kt)("inlineCode",{parentName:"p"},"YOUR_NODE_TYPE")," must be the same ones that you used when initially ",(0,r.kt)("a",{parentName:"p",href:"/nodes/node-operation/node-bootstrap/#generate-your-node-keys"},"setting up your node"))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run the transit script to fetch the new genesis info:\n",(0,r.kt)("inlineCode",{parentName:"li"},"./boot-tools/transit pull -b ./bootstrap -t ${PULL_TOKEN} -r ${YOUR_NODE_TYPE}"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell:title=Example"},"$ ./boot-tools/transit pull -b ./bootstrap -t mainnet-16  -r consensus\nTransit script Commit: a9f6522855e119ad832a97f8b7bce555a163e490\n2020/11/25 01:02:53 Running pull\n2020/11/25 01:02:53 Downloading bootstrap/public-root-information/node-infos.pub.json\n2020/11/25 01:02:54 Downloading bootstrap/public-root-information/root-protocol-snapshot.json\n2020/11/25 01:02:54 Downloading bootstrap/random-beacon.priv.json.39fa54984b8eaa463e129919464f61c8cec3a4389478df79c44eb9bfbf30799a.enc\n2020/11/25 01:02:54 SHA256 of the root block is: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\n\n$ tree ./bootstrap/\n  ./bootstrap/\n  \u251c\u2500\u2500 private-root-information\n  \u2502\xa0\xa0 \u2514\u2500\u2500 private-node-info_39fa54984b8eaa463e129919464f61c8cec3a4389478df79c44eb9bfbf30799a\n  \u2502\xa0\xa0     \u2514\u2500\u2500 node-info.priv.json\n  \u251c\u2500\u2500 public-root-information\n  \u2502\xa0\xa0 \u251c\u2500\u2500 node-id\n  \u2502\xa0\xa0 \u251c\u2500\u2500 node-info.pub.39fa54984b8eaa463e129919464f61c8cec3a4389478df79c44eb9bfbf30799a.json\n  \u2502\xa0\xa0 \u251c\u2500\u2500 node-infos.pub.json\n  \u2502\xa0\xa0 \u2514\u2500\u2500 root-protocol-snapshot.json\n  \u2514\u2500\u2500 random-beacon.priv.json.39fa54984b8eaa463e129919464f61c8cec3a4389478df79c44eb9bfbf30799a\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Pull the latest changes from ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/onflow/flow-go"},"flow-go repository")),(0,r.kt)("li",{parentName:"ol"},"Get your ",(0,r.kt)("inlineCode",{parentName:"li"},"node-id"),", you can find it at ",(0,r.kt)("inlineCode",{parentName:"li"},"/path/to/bootstrap/public-genesis-information/node-id")),(0,r.kt)("li",{parentName:"ol"},"Update the ",(0,r.kt)("inlineCode",{parentName:"li"},"FLOW_GO_NODE_ID")," inside ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/onflow/flow-go/blob/master/deploy/systemd-docker/runtime-conf.env"},"runtime-conf.env")," to the ",(0,r.kt)("inlineCode",{parentName:"li"},"node-id")," that you got from the previous step"),(0,r.kt)("li",{parentName:"ol"},"Start your Flow node via ",(0,r.kt)("inlineCode",{parentName:"li"},"docker")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"systemd"))),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/nodes/node-operation/node-bootstrap"},"Node Bootstrap")," for detailed information on Docker/Systemd configuration."),(0,r.kt)("h2",{id:"common-issues"},"Common Issues"),(0,r.kt)("h3",{id:"error-cannot-create-connection"},"Error: cannot create connection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'20T18:34:21Z","message":"could not create connection"}\n{"level":"error","node_role":"consensus","node_id":"6d3fac8675a1df96f4bb7a27305ae531b6f4d0d2bc13a233e37bb07ab6b852dc","target":"QmVcSQaCdhmk1CMeMN7HTgGiUY1i2KqgVE2vvEmQXK4gAA","error":"failed to dial : all dials failed\n  * [/ip4/155.138.151.101/tcp/3569] dial tcp4 155.138.151.101:3569: connect: connection refused","retry_attempt":2,"time":"2020-05-20T18:34:21Z","message":"could not create connection"}\n')),(0,r.kt)("p",null,"This error is OK. Your fellow node operators have not turned on/joined the network yet. So no need to worry about it!"),(0,r.kt)("h3",{id:"flow-node-not-booting-up"},"Flow Node Not Booting Up"),(0,r.kt)("p",null,"If your Flow node is not able to boot up, or it exits right after it boots up. You will need to do a ",(0,r.kt)("a",{parentName:"p",href:"/nodes/node-operation/node-bootstrap/#step-0---cleaning-up-your-previous-state"},"clean up of your state"),"."),(0,r.kt)("p",null,"After cleaning up the state try booting it up again. If the problem persists, message a member from the Flow team on Discord."))}m.isMDXComponent=!0}}]);