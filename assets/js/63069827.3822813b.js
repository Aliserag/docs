"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[15537],{87099:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>o});t(67294);var c=t(85893),i=t(11151);const n={title:"Flow Archive Access API rate limits on Dapper Labs Archive nodes"},r=void 0,a={unversionedId:"concepts/nodes/archive-api-rate-limits",id:"version-stable/concepts/nodes/archive-api-rate-limits",title:"Flow Archive Access API rate limits on Dapper Labs Archive nodes",description:"Rate limits",source:"@site/versioned_docs/version-stable/concepts/nodes/archive-api-rate-limits.mdx",sourceDirName:"concepts/nodes",slug:"/concepts/nodes/archive-api-rate-limits",permalink:"/docs/concepts/nodes/archive-api-rate-limits",draft:!1,editUrl:"https://github.com/onflow/docs/tree/main/docs/concepts/nodes/archive-api-rate-limits.mdx",tags:[],version:"stable",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1694107593,formattedLastUpdatedAt:"Sep 7, 2023",frontMatter:{title:"Flow Archive Access API rate limits on Dapper Labs Archive nodes"},sidebar:"concepts",previous:{title:"Flow Archive Node Access API Specification",permalink:"/docs/concepts/nodes/archive-access-api"},next:{title:"Flow Users / Backers",permalink:"/docs/concepts/nodes/faq/backers"}},l={},o=[{value:"Rate limits",id:"rate-limits",level:4},{value:"Mainnet",id:"mainnet",level:5},{value:"Testnet and Sandboxnet",id:"testnet-and-sandboxnet",level:5}];function d(e){const s=Object.assign({h4:"h4",p:"p",a:"a",code:"code",h5:"h5",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,i.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.h4,{id:"rate-limits",children:"Rate limits"}),"\n",(0,c.jsxs)(s.p,{children:["Following are the current rate limits for the ",(0,c.jsx)(s.a,{href:"/docs/concepts/nodes/archive-access-api",children:"Archive Node gRPC API"})," in total across all Dapper Labs Archive nodes. The actual limits are enforced by each individual node. If you are using a load balanced endpoint, the limits below are the max rate, and may vary depending on how your requests are routed."]}),"\n",(0,c.jsxs)(s.p,{children:["Once the limit has reached, the client will receive an RPC error ",(0,c.jsx)(s.code,{children:"ResourceExhausted"})," in the gRPC response."]}),"\n",(0,c.jsxs)(s.p,{children:["Please note, these limits only apply to the archive nodes hosted by Dapper Labs. Archive nodes run by other node operators will have different rate limits.\nAlso, all the gRPC endpoints listed below start with ",(0,c.jsx)(s.code,{children:"flow.access.AccessAPI"})," due to the Archive Access API having the same gRPC protobuf definitions as the original Access API from our ",(0,c.jsx)(s.a,{href:"/docs/concepts/nodes/node-operation/node-roles#access",children:"Access Nodes"}),". For information on rate limitting of the Access API for Flow's Access Nodes please visit ",(0,c.jsx)(s.a,{href:"/docs/concepts/nodes/access-api-rate-limits",children:"this page"}),"."]}),"\n",(0,c.jsx)(s.h5,{id:"mainnet",children:"Mainnet"}),"\n",(0,c.jsxs)(s.table,{children:[(0,c.jsx)(s.thead,{children:(0,c.jsxs)(s.tr,{children:[(0,c.jsx)(s.th,{align:"left",children:"gRPC API"}),(0,c.jsx)(s.th,{align:"center",children:"Total request per second per client IP"})]})}),(0,c.jsxs)(s.tbody,{children:[(0,c.jsxs)(s.tr,{children:[(0,c.jsx)(s.td,{align:"left",children:"flow.access.AccessAPI/GetAccountAtBlockHeight"}),(0,c.jsx)(s.td,{align:"center",children:"5"})]}),(0,c.jsxs)(s.tr,{children:[(0,c.jsx)(s.td,{align:"left",children:"flow.access.AccessAPI/ExecuteScriptAtBlockID"}),(0,c.jsx)(s.td,{align:"center",children:"5"})]}),(0,c.jsxs)(s.tr,{children:[(0,c.jsx)(s.td,{align:"left",children:"flow.access.AccessAPI/ExecuteScriptAtBlockHeight"}),(0,c.jsx)(s.td,{align:"center",children:"5"})]})]})]}),"\n",(0,c.jsx)(s.h5,{id:"testnet-and-sandboxnet",children:"Testnet and Sandboxnet"}),"\n",(0,c.jsxs)(s.table,{children:[(0,c.jsx)(s.thead,{children:(0,c.jsxs)(s.tr,{children:[(0,c.jsx)(s.th,{align:"left",children:"gRPC API"}),(0,c.jsx)(s.th,{align:"center",children:"Total request per second per IP"})]})}),(0,c.jsxs)(s.tbody,{children:[(0,c.jsxs)(s.tr,{children:[(0,c.jsx)(s.td,{align:"left",children:"flow.access.AccessAPI/GetAccountAtLatestBlock"}),(0,c.jsx)(s.td,{align:"center",children:"5"})]}),(0,c.jsxs)(s.tr,{children:[(0,c.jsx)(s.td,{align:"left",children:"flow.access.AccessAPI/ExecuteScriptAtBlockID"}),(0,c.jsx)(s.td,{align:"center",children:"5"})]}),(0,c.jsxs)(s.tr,{children:[(0,c.jsx)(s.td,{align:"left",children:"flow.access.AccessAPI/ExecuteScriptAtBlockHeight"}),(0,c.jsx)(s.td,{align:"center",children:"5"})]})]})]})]})}const h=function(e){void 0===e&&(e={});const{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,c.jsx)(s,Object.assign({},e,{children:(0,c.jsx)(d,e)})):d(e)}}}]);