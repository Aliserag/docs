"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8121],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={title:"Additional Examples",sidebar_title:"Additional Examples",description:"More examples, which cover specific use cases"},i=void 0,s={unversionedId:"Tooling/flow-js-testing/examples/metadata",id:"Tooling/flow-js-testing/examples/metadata",title:"Additional Examples",description:"More examples, which cover specific use cases",source:"@site/docs/Tooling/flow-js-testing/examples/metadata.md",sourceDirName:"Tooling/flow-js-testing/examples",slug:"/Tooling/flow-js-testing/examples/metadata",permalink:"/docs/Tooling/flow-js-testing/examples/metadata",draft:!1,tags:[],version:"current",lastUpdatedBy:"Alex",lastUpdatedAt:1683062072,formattedLastUpdatedAt:"May 2, 2023",frontMatter:{title:"Additional Examples",sidebar_title:"Additional Examples",description:"More examples, which cover specific use cases"},sidebar:"tutorialSidebar",previous:{title:"basic",permalink:"/docs/Tooling/flow-js-testing/examples/basic"},next:{title:"Execute Scripts",permalink:"/docs/Tooling/flow-js-testing/execute-scripts"}},l={},c=[{value:"Metadata",id:"metadata",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"metadata"},"Metadata"),(0,r.kt)("p",null,"You may want to pass dictionaries as arguments to your Cadence code. The most\ncommon is metadata with ",(0,r.kt)("inlineCode",{parentName:"p"},"{String:String}")," type"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import {executeScript} from "@onflow/flow-js-testing"\n\nconst main = async () => {\n  const basePath = path.resolve(__dirname, "../cadence")\n\n  // Init framework\n  await init(basePath)\n  // Start emulator\n  await emulator.start()\n\n  const code = `\n    pub fun main(metadata: {String: String}): String{\n      return metadata["name"]!\n    }  \n  `\n\n  // Define arguments we want to pass\n  const args = [{name: "Boris", nickname: "The Blade"}]\n\n  // If something goes wrong with script execution, the method will throw an error\n  // so we need to catch it and proce\n  const [name, err] = await shallResolve(executeScript({code, args}))\n  console.log(name, err)\n\n  await emulator.stop()\n}\n\nmain()\n')),(0,r.kt)("p",null,"If you need to pass an array of dictionaries, it's not that different. Just replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"args")," variable above with\nmultiple values:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const args = [\n  // This is array of dictionaries\n  [\n    {name: "Boris", nickname: "The Blade"},\n    {name: "Franky", nickname: "Four-Fingers"},\n  ],\n]\n')),(0,r.kt)("p",null,"Or maybe you want to pass dictionary with type {String: ","[String]","}:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const args = [\n  {\n    names: ["Alice", "Bob", "Charlie"],\n  },\n]\n')),(0,r.kt)("p",null,"Framework will try to resolve the types to the best of its abilities. If you encounter an error for your use case,\nplease create an issue here: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/onflow/flow-js-testing/issues"},"https://github.com/onflow/flow-js-testing/issues")))}m.isMDXComponent=!0}}]);