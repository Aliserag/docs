"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[58713],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=l,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(f,r(r({ref:t},c),{},{components:n})):a.createElement(f,r({ref:t},c))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:l,r[1]=i;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91693:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(87462),l=(n(67294),n(3905));const o={title:"Install Flow Javascript Testing Framework",description:"How to install the Flow command-line interface (CLI)"},r="Installation",i={unversionedId:"tools/flow-js-testing/install",id:"version-legacy/tools/flow-js-testing/install",title:"Install Flow Javascript Testing Framework",description:"How to install the Flow command-line interface (CLI)",source:"@site/versioned_docs/version-legacy/tools/flow-js-testing/install.md",sourceDirName:"tools/flow-js-testing",slug:"/tools/flow-js-testing/install",permalink:"/docs/tools/flow-js-testing/install",draft:!1,tags:[],version:"legacy",lastUpdatedBy:"Alex",lastUpdatedAt:1682971554,formattedLastUpdatedAt:"May 1, 2023",frontMatter:{title:"Install Flow Javascript Testing Framework",description:"How to install the Flow command-line interface (CLI)"},sidebar:"tutorialSidebar",previous:{title:"Init Framework",permalink:"/docs/tools/flow-js-testing/init"},next:{title:"Jest Helpers",permalink:"/docs/tools/flow-js-testing/jest-helpers"}},s={},p=[{value:"Automatic Installation (via npx)",id:"automatic-installation-via-npx",level:2},{value:"Manual Installation",id:"manual-installation",level:2},{value:"Jest Config",id:"jest-config",level:3},{value:"Babel Config",id:"babel-config",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"installation"},"Installation"),(0,l.kt)("p",null,"It's possible to install Flow Javacript Testing Framework manually and automatically, using generator."),(0,l.kt)("h2",{id:"automatic-installation-via-npx"},"Automatic Installation (via npx)"),(0,l.kt)("p",null,"Create new folder and move into it:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir test && cd ./test\n")),(0,l.kt)("p",null,"Install ",(0,l.kt)("inlineCode",{parentName:"p"},"@onflow/flow-js-testing")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @onflow/flow-js-testing\n")),(0,l.kt)("p",null,"Generate complete setup via ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," call:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"npx flow-js-testing init\n")),(0,l.kt)("p",null,"Create new test suit via ",(0,l.kt)("inlineCode",{parentName:"p"},"make")," call, specifying the name of the suit:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"npx flow-js-testing make basic-test\n")),(0,l.kt)("h2",{id:"manual-installation"},"Manual Installation"),(0,l.kt)("p",null,"If, for some reason, you would want to do this manually here's what you need to do."),(0,l.kt)("p",null,"Create new folder and move into it:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir test && cd ./test\n")),(0,l.kt)("p",null,"Initiate a project in that folder with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"npm init\n")),(0,l.kt)("p",null,"Then install all necessary packages by running following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @onflow/flow-js-testing jest @babel/core @babel/preset-env babel-jest\n")),(0,l.kt)("p",null,"If your project ",(0,l.kt)("em",{parentName:"p"},"is")," JavaScript based, then run the above command from the folder that contains your project's ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," file."),(0,l.kt)("h3",{id:"jest-config"},"Jest Config"),(0,l.kt)("p",null,"You'll need to configure Jest in order for tests to work properly.\nAdd ",(0,l.kt)("inlineCode",{parentName:"p"},"jest.config.json")," file next to ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," and populate it with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "testEnvironment": "node",\n  "verbose": true,\n  "coveragePathIgnorePatterns": ["/node_modules/"],\n  "testTimeout": 50000\n}\n')),(0,l.kt)("h3",{id:"babel-config"},"Babel Config"),(0,l.kt)("p",null,"Similarly, create ",(0,l.kt)("inlineCode",{parentName:"p"},"babel.config.json")," then copy and paste the following configuration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "presets": [\n    [\n      "@babel/preset-env",\n      {\n        "targets": {\n          "node": "current"\n        }\n      }\n    ]\n  ]\n}\n')))}m.isMDXComponent=!0}}]);