"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7486],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(n),f=r,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||l;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=f;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},45647:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const l={},o="Resource Vault",i={unversionedId:"flow/flow-ft/ExampleToken/ExampleToken_Vault",id:"flow/flow-ft/ExampleToken/ExampleToken_Vault",title:"Resource Vault",description:"Each user stores an instance of only the Vault in their storage",source:"@site/docs/flow/flow-ft/ExampleToken/ExampleToken_Vault.md",sourceDirName:"flow/flow-ft/ExampleToken",slug:"/flow/flow-ft/ExampleToken/ExampleToken_Vault",permalink:"/flow/flow-ft/ExampleToken/ExampleToken_Vault",draft:!1,tags:[],version:"current",lastUpdatedBy:"Tom Haile",lastUpdatedAt:1682618258,formattedLastUpdatedAt:"Apr 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Resource Minter",permalink:"/flow/flow-ft/ExampleToken/ExampleToken_Minter"},next:{title:"Contract Interface FungibleToken",permalink:"/flow/flow-ft/FungibleToken/"}},u={},s=[{value:"Initializer",id:"initializer",level:3},{value:"Functions",id:"functions",level:2},{value:"fun <code>withdraw()</code>",id:"fun-withdraw",level:3},{value:"fun <code>deposit()</code>",id:"fun-deposit",level:3},{value:"fun <code>getViews()</code>",id:"fun-getviews",level:3},{value:"fun <code>resolveView()</code>",id:"fun-resolveview",level:3}],c={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"resource-vault"},"Resource ",(0,r.kt)("inlineCode",{parentName:"h1"},"Vault")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"resource Vault {\n\n    balance:  UFix64\n}\n")),(0,r.kt)("p",null,"Each user stores an instance of only the Vault in their storage\nThe functions in the Vault and governed by the pre and post conditions\nin FungibleToken when they are called.\nThe checks happen at runtime whenever a function is called."),(0,r.kt)("p",null,"Resources can only be created in the context of the contract that they\nare defined in, so there is no way for a malicious user to create Vaults\nout of thin air. A special Minter resource needs to be defined to mint\nnew tokens."),(0,r.kt)("p",null,"Implemented Interfaces:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FungibleToken.Provider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FungibleToken.Receiver")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FungibleToken.Balance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"MetadataViews.Resolver"))),(0,r.kt)("h3",{id:"initializer"},"Initializer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"func init(balance UFix64)\n")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"fun-withdraw"},"fun ",(0,r.kt)("inlineCode",{parentName:"h3"},"withdraw()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"func withdraw(amount UFix64): FungibleToken.Vault\n")),(0,r.kt)("p",null,"Function that takes an amount as an argument\nand withdraws that amount from the Vault.\nIt creates a new temporary Vault that is used to hold\nthe money that is being transferred. It returns the newly\ncreated Vault to the context that called so it can be deposited\nelsewhere."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"amount : ",(0,r.kt)("em",{parentName:"li"},"The amount of tokens to be withdrawn from the vault"))),(0,r.kt)("p",null,"Returns: The Vault resource containing the withdrawn funds"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun-deposit"},"fun ",(0,r.kt)("inlineCode",{parentName:"h3"},"deposit()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"func deposit(from FungibleToken.Vault)\n")),(0,r.kt)("p",null,"Function that takes a Vault object as an argument and adds\nits balance to the balance of the owners Vault.\nIt is allowed to destroy the sent Vault because the Vault\nwas a temporary holder of the tokens. The Vault's balance has\nbeen consumed and therefore can be destroyed."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"from : ",(0,r.kt)("em",{parentName:"li"},"The Vault resource containing the funds that will be deposited"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun-getviews"},"fun ",(0,r.kt)("inlineCode",{parentName:"h3"},"getViews()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"func getViews(): [Type]\n")),(0,r.kt)("p",null,"The way of getting all the Metadata Views implemented by ExampleToken"),(0,r.kt)("p",null,"developers to know which parameter to pass to the resolveView() method."),(0,r.kt)("p",null,"Returns: An array of Types defining the implemented views. This value will be used by"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun-resolveview"},"fun ",(0,r.kt)("inlineCode",{parentName:"h3"},"resolveView()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cadence"},"func resolveView(_ Type): AnyStruct?\n")),(0,r.kt)("p",null,"The way of getting a Metadata View out of the ExampleToken"),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"view : ",(0,r.kt)("em",{parentName:"li"},"The Type of the desired view."))),(0,r.kt)("p",null,"Returns: A structure representing the requested view."),(0,r.kt)("hr",null))}d.isMDXComponent=!0}}]);